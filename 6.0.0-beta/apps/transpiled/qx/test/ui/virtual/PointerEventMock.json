{
  "className": "qx.test.ui.virtual.PointerEventMock",
  "packageName": "qx.test.ui.virtual",
  "name": "PointerEventMock",
  "superClass": "qx.event.type.Pointer",
  "interfaces": [],
  "mixins": [],
  "functionName": null,
  "clazz": {
    "location": {
      "start": {
        "line": 19,
        "column": 0
      },
      "end": {
        "line": 48,
        "column": 3
      }
    },
    "jsdoc": {
      "@description": [
        {
          "name": "@description",
          "body": "<pre><code>*****************************************************************\n</code></pre>\n<p>qooxdoo - the new era of web development\n   http://qooxdoo.org\n   Copyright:\n     2004-2008 1&amp;1 Internet AG, Germany, http://www.1und1.de\n   License:\n     MIT: https://opensource.org/licenses/MIT\n     See the LICENSE file in the project's top-level directory for details.\n   Authors:\n Fabian Jakobs (fjakobs)\n    <strong><em><em></em></strong><strong><em></em></em></strong><strong><em><em></em></strong><strong><em></em></em></strong><strong><em><em></em></strong><strong><em></em></em></strong><strong><em><em></em></strong><strong><em></em></em></strong><strong><em><em></em></strong></em>*</p>"
        }
      ]
    }
  },
  "type": "class",
  "construct": {
    "location": {
      "start": {
        "line": 23,
        "column": 14
      },
      "end": {
        "line": 28,
        "column": 3
      }
    },
    "jsdoc": {}
  },
  "members": {
    "clone": {
      "location": {
        "start": {
          "line": 32,
          "column": 4
        },
        "end": {
          "line": 34,
          "column": 5
        }
      },
      "type": "function",
      "access": "public",
      "overriddenFrom": "qx.event.type.Native",
      "appearsIn": [
        "qx.event.type.Native",
        "qx.event.type.Event",
        "qx.core.Object"
      ],
      "jsdoc": {
        "@param": [
          {
            "name": "@param",
            "body": "embryo {qx.event.type.Event?null} Optional event class, which will\n     be configured using the data of this event instance. The event must be\n     an instance of this event class. If the value is <code>null</code>,\n     a new pooled instance is created.",
            "paramName": "embryo",
            "description": " Optional event class, which will\n     be configured using the data of this event instance. The event must be\n     an instance of this event class. If the value is <code>null</code>,\n     a new pooled instance is created.",
            "optional": true,
            "defaultValue": "null",
            "type": "qx.event.type.Event"
          }
        ],
        "@return": [
          {
            "name": "@return",
            "body": "{qx.event.type.Event} a clone of this class.",
            "type": "qx.event.type.Event",
            "description": " a clone of this class."
          }
        ]
      }
    },
    "getDocumentLeft": {
      "location": {
        "start": {
          "line": 36,
          "column": 4
        },
        "end": {
          "line": 38,
          "column": 5
        }
      },
      "type": "function",
      "access": "public",
      "overriddenFrom": "qx.event.type.Pointer",
      "appearsIn": [
        "qx.event.type.Pointer",
        "qx.event.type.Mouse"
      ],
      "jsdoc": {
        "@return": [
          {
            "name": "@return",
            "body": "{Integer} The horizontal mouse position in the document.",
            "type": "Integer",
            "description": " The horizontal mouse position in the document."
          }
        ]
      }
    },
    "getDocumentTop": {
      "location": {
        "start": {
          "line": 40,
          "column": 4
        },
        "end": {
          "line": 42,
          "column": 5
        }
      },
      "type": "function",
      "access": "public",
      "overriddenFrom": "qx.event.type.Pointer",
      "appearsIn": [
        "qx.event.type.Pointer",
        "qx.event.type.Mouse"
      ],
      "jsdoc": {
        "@return": [
          {
            "name": "@return",
            "body": "{Integer} The vertical mouse position in the document.",
            "type": "Integer",
            "description": " The vertical mouse position in the document."
          }
        ]
      }
    },
    "getQxOwner": {
      "type": "function",
      "name": "getQxOwner",
      "abstract": false,
      "mixin": false,
      "inherited": true,
      "access": "public",
      "overriddenFrom": "qx.event.type.Pointer",
      "property": "get",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Gets the (computed) value of the property <code>qxOwner</code>.\n\nFor further details take a look at the property definition: {@link #qxOwner}."
          }
        ],
        "@return": [
          {
            "name": "@return",
            "type": "qx.core.Object",
            "desc": "Returns the value for qxOwner"
          }
        ]
      }
    },
    "setQxOwner": {
      "type": "function",
      "name": "setQxOwner",
      "abstract": false,
      "mixin": false,
      "inherited": true,
      "access": "public",
      "overriddenFrom": "qx.event.type.Pointer",
      "property": "set",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Sets the user value of the property <code>qxOwner</code>.\n\nFor further details take a look at the property definition: {@link #qxOwner}."
          }
        ],
        "@param": [
          {
            "name": "@param",
            "type": "qx.core.Object",
            "paramName": "value",
            "desc": "Value for qxOwner"
          }
        ]
      }
    },
    "resetQxOwner": {
      "type": "function",
      "name": "resetQxOwner",
      "abstract": false,
      "mixin": false,
      "inherited": true,
      "access": "public",
      "overriddenFrom": "qx.event.type.Pointer",
      "property": "reset"
    },
    "getQxObjectId": {
      "type": "function",
      "name": "getQxObjectId",
      "abstract": false,
      "mixin": false,
      "inherited": true,
      "access": "public",
      "overriddenFrom": "qx.event.type.Pointer",
      "property": "get",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Gets the (computed) value of the property <code>qxObjectId</code>.\n\nFor further details take a look at the property definition: {@link #qxObjectId}."
          }
        ],
        "@return": [
          {
            "name": "@return",
            "desc": "Returns the value for qxObjectId"
          }
        ]
      }
    },
    "setQxObjectId": {
      "type": "function",
      "name": "setQxObjectId",
      "abstract": false,
      "mixin": false,
      "inherited": true,
      "access": "public",
      "overriddenFrom": "qx.event.type.Pointer",
      "property": "set",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Sets the user value of the property <code>qxObjectId</code>.\n\nFor further details take a look at the property definition: {@link #qxObjectId}."
          }
        ],
        "@param": [
          {
            "name": "@param",
            "paramName": "value",
            "desc": "Value for qxObjectId"
          }
        ]
      }
    },
    "resetQxObjectId": {
      "type": "function",
      "name": "resetQxObjectId",
      "abstract": false,
      "mixin": false,
      "inherited": true,
      "access": "public",
      "overriddenFrom": "qx.event.type.Pointer",
      "property": "reset"
    }
  },
  "destruct": {
    "location": {
      "start": {
        "line": 45,
        "column": 13
      },
      "end": {
        "line": 47,
        "column": 3
      }
    },
    "jsdoc": {}
  },
  "descendants": []
}