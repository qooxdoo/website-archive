{
  "className": "qxl.demobrowser.TreeDataHandler",
  "packageName": "qxl.demobrowser",
  "name": "TreeDataHandler",
  "superClass": "qx.core.Object",
  "interfaces": [],
  "mixins": [],
  "functionName": null,
  "clazz": {
    "location": {
      "start": {
        "line": 20,
        "column": 0
      },
      "end": {
        "line": 519,
        "column": 3
      }
    },
    "jsdoc": {
      "@description": [
        {
          "name": "@description",
          "body": "<pre><code>*****************************************************************\n</code></pre>\n<p>qooxdoo - the new era of web development\n   http://qooxdoo.org\n   Copyright:\n     2007-2008 1&amp;1 Internet AG, Germany, http://www.1und1.de\n   License:\n     MIT: https://opensource.org/licenses/MIT\n     See the LICENSE file in the project's top-level directory for details.\n   Authors:\n Thomas Herchenroeder (thron7)\n Fabian Jakobs (fjakobs)\n    <strong><em><em></em></strong><strong><em></em></em></strong><strong><em><em></em></strong><strong><em></em></em></strong><strong><em><em></em></strong><strong><em></em></em></strong><strong><em><em></em></strong><strong><em></em></em></strong><strong><em><em></em></strong></em>*</p>"
        }
      ]
    }
  },
  "type": "class",
  "construct": {
    "location": {
      "start": {
        "line": 31,
        "column": 14
      },
      "end": {
        "line": 37,
        "column": 3
      }
    },
    "jsdoc": {
      "@description": [
        {
          "name": "@description",
          "body": "<pre><code>**********************************************************************\n CONSTRUCTOR\n**********************************************************************\n</code></pre>"
        }
      ]
    }
  },
  "members": {
    "__readTestRep": {
      "location": {
        "start": {
          "line": 57,
          "column": 4
        },
        "end": {
          "line": 132,
          "column": 5
        }
      },
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "<p>TODOC</p>"
          }
        ],
        "@param": [
          {
            "name": "@param",
            "body": "testRep {var} TODOC",
            "paramName": "testRep",
            "description": " TODOC",
            "type": "var"
          }
        ],
        "@return": [
          {
            "name": "@return",
            "body": "{var} TODOC",
            "type": "var",
            "description": " TODOC"
          }
        ],
        "@throws": [
          {
            "name": "@throws",
            "body": "{Error} TODOC",
            "type": "Error",
            "description": " TODOC"
          }
        ]
      },
      "type": "function",
      "access": "private"
    },
    "readTree": {
      "location": {
        "start": {
          "line": 142,
          "column": 4
        },
        "end": {
          "line": 212,
          "column": 5
        }
      },
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "<p>recursive struct reader</p>"
          }
        ],
        "@param": [
          {
            "name": "@param",
            "body": "struct {var} TODOC",
            "paramName": "struct",
            "description": " TODOC",
            "type": "var"
          },
          {
            "name": "@param",
            "body": "node {Node} TODOC",
            "paramName": "node",
            "description": " TODOC",
            "type": "Node"
          }
        ],
        "@return": [
          {
            "name": "@return",
            "body": "{var} TODOC",
            "type": "var",
            "description": " TODOC"
          }
        ]
      },
      "type": "function",
      "access": "public"
    },
    "getRoot": {
      "location": {
        "start": {
          "line": 220,
          "column": 4
        },
        "end": {
          "line": 243,
          "column": 5
        }
      },
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "<p>TODOC</p>"
          }
        ],
        "@return": [
          {
            "name": "@return",
            "body": "{var} TODOC",
            "type": "var",
            "description": " TODOC"
          }
        ]
      },
      "type": "function",
      "access": "public"
    },
    "getChilds": {
      "location": {
        "start": {
          "line": 252,
          "column": 4
        },
        "end": {
          "line": 267,
          "column": 5
        }
      },
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "<p>TODOC</p>"
          }
        ],
        "@param": [
          {
            "name": "@param",
            "body": "node {Node} TODOC",
            "paramName": "node",
            "description": " TODOC",
            "type": "Node"
          }
        ],
        "@return": [
          {
            "name": "@return",
            "body": "{var} TODOC",
            "type": "var",
            "description": " TODOC"
          }
        ]
      },
      "type": "function",
      "access": "public"
    },
    "getTests": {
      "location": {
        "start": {
          "line": 279,
          "column": 4
        },
        "end": {
          "line": 291,
          "column": 5
        }
      },
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "<p>get the tests directly contained in a class</p>"
          },
          {
            "name": "@description",
            "body": "<p>TODOC</p>"
          }
        ],
        "@param": [
          {
            "name": "@param",
            "body": "node {Node} TODOC",
            "paramName": "node",
            "description": " TODOC",
            "type": "Node"
          }
        ],
        "@return": [
          {
            "name": "@return",
            "body": "{var | Array} TODOC",
            "type": "var | Array",
            "description": " TODOC"
          }
        ]
      },
      "type": "function",
      "access": "public"
    },
    "getPath": {
      "location": {
        "start": {
          "line": 300,
          "column": 4
        },
        "end": {
          "line": 315,
          "column": 5
        }
      },
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "<p>TODOC</p>"
          }
        ],
        "@param": [
          {
            "name": "@param",
            "body": "node {Node} TODOC",
            "paramName": "node",
            "description": " TODOC",
            "type": "Node"
          }
        ],
        "@return": [
          {
            "name": "@return",
            "body": "{var} TODOC",
            "type": "var",
            "description": " TODOC"
          }
        ]
      },
      "type": "function",
      "access": "public"
    },
    "getChildren": {
      "location": {
        "start": {
          "line": 322,
          "column": 4
        },
        "end": {
          "line": 343,
          "column": 5
        }
      },
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": ""
          }
        ],
        "@param": [
          {
            "name": "@param",
            "body": "node {String} a class or test name",
            "paramName": "node",
            "description": " a class or test name",
            "type": "String"
          }
        ],
        "@return": [
          {
            "name": "@return",
            "body": "{var | Array} TODOC",
            "type": "var | Array",
            "description": " TODOC"
          }
        ]
      },
      "type": "function",
      "access": "public"
    },
    "isClass": {
      "location": {
        "start": {
          "line": 352,
          "column": 4
        },
        "end": {
          "line": 359,
          "column": 5
        }
      },
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "<p>TODOC</p>"
          }
        ],
        "@param": [
          {
            "name": "@param",
            "body": "node {Node} TODOC",
            "paramName": "node",
            "description": " TODOC",
            "type": "Node"
          }
        ],
        "@return": [
          {
            "name": "@return",
            "body": "{boolean} TODOC",
            "type": "boolean",
            "description": " TODOC"
          }
        ]
      },
      "type": "function",
      "access": "public"
    },
    "hasTests": {
      "location": {
        "start": {
          "line": 368,
          "column": 4
        },
        "end": {
          "line": 387,
          "column": 5
        }
      },
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "<p>TODOC</p>"
          }
        ],
        "@param": [
          {
            "name": "@param",
            "body": "node {Node} TODOC",
            "paramName": "node",
            "description": " TODOC",
            "type": "Node"
          }
        ],
        "@return": [
          {
            "name": "@return",
            "body": "{boolean} TODOC",
            "type": "boolean",
            "description": " TODOC"
          }
        ]
      },
      "type": "function",
      "access": "public"
    },
    "classFromTest": {
      "location": {
        "start": {
          "line": 398,
          "column": 4
        },
        "end": {
          "line": 417,
          "column": 5
        }
      },
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "<p>TODOC</p>"
          }
        ],
        "@param": [
          {
            "name": "@param",
            "body": "node {Node} TODOC",
            "paramName": "node",
            "description": " TODOC",
            "type": "Node"
          }
        ],
        "@return": [
          {
            "name": "@return",
            "body": "{var} TODOC",
            "type": "var",
            "description": " TODOC"
          }
        ],
        "@lint": [
          {
            "name": "@lint",
            "body": "ignoreUnused(tests)"
          }
        ],
        "@ignore": [
          {
            "name": "@ignore",
            "body": "(classloop) Workaround for bug #2221"
          }
        ]
      },
      "type": "function",
      "access": "public"
    },
    "getFullName": {
      "location": {
        "start": {
          "line": 426,
          "column": 4
        },
        "end": {
          "line": 439,
          "column": 5
        }
      },
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "<p>return the full name of a test from its model node</p>"
          }
        ],
        "@param": [
          {
            "name": "@param",
            "body": "node {Tree} a model node",
            "paramName": "node",
            "description": " a model node",
            "type": "qxl.demobrowser.Tree"
          }
        ],
        "@return": [
          {
            "name": "@return",
            "body": "{var} fullName {String} like \"qxl.demobrowser.test.Class.testEmptyClass\"",
            "type": "var",
            "description": " fullName {String} like \"qxl.demobrowser.test.Class.testEmptyClass\""
          }
        ]
      },
      "type": "function",
      "access": "public"
    },
    "getPreviousNode": {
      "location": {
        "start": {
          "line": 448,
          "column": 4
        },
        "end": {
          "line": 455,
          "column": 5
        }
      },
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "<p>TODOC</p>"
          }
        ],
        "@param": [
          {
            "name": "@param",
            "body": "node {Node} TODOC",
            "paramName": "node",
            "description": " TODOC",
            "type": "Node"
          }
        ],
        "@return": [
          {
            "name": "@return",
            "body": "{var} TODOC",
            "type": "var",
            "description": " TODOC"
          }
        ]
      },
      "type": "function",
      "access": "public"
    },
    "getNextNode": {
      "location": {
        "start": {
          "line": 464,
          "column": 4
        },
        "end": {
          "line": 471,
          "column": 5
        }
      },
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "<p>TODOC</p>"
          }
        ],
        "@param": [
          {
            "name": "@param",
            "body": "node {Node} TODOC",
            "paramName": "node",
            "description": " TODOC",
            "type": "Node"
          }
        ],
        "@return": [
          {
            "name": "@return",
            "body": "{var} TODOC",
            "type": "var",
            "description": " TODOC"
          }
        ]
      },
      "type": "function",
      "access": "public"
    },
    "testCount": {
      "location": {
        "start": {
          "line": 480,
          "column": 4
        },
        "end": {
          "line": 500,
          "column": 5
        }
      },
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "<p>TODOC</p>"
          }
        ],
        "@param": [
          {
            "name": "@param",
            "body": "node {Node} TODOC",
            "paramName": "node",
            "description": " TODOC",
            "type": "Node"
          }
        ],
        "@return": [
          {
            "name": "@return",
            "body": "{int | Number} TODOC",
            "type": "int | Number",
            "description": " TODOC"
          }
        ]
      },
      "type": "function",
      "access": "public"
    },
    "getQxOwner": {
      "type": "function",
      "name": "getQxOwner",
      "abstract": false,
      "mixin": false,
      "inherited": true,
      "access": "public",
      "overriddenFrom": "qx.core.Object",
      "property": "get",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Gets the (computed) value of the property <code>qxOwner</code>.\n\nFor further details take a look at the property definition: {@link #qxOwner}."
          }
        ],
        "@return": [
          {
            "name": "@return",
            "type": "qx.core.Object",
            "desc": "Returns the value for qxOwner"
          }
        ]
      }
    },
    "setQxOwner": {
      "type": "function",
      "name": "setQxOwner",
      "abstract": false,
      "mixin": false,
      "inherited": true,
      "access": "public",
      "overriddenFrom": "qx.core.Object",
      "property": "set",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Sets the user value of the property <code>qxOwner</code>.\n\nFor further details take a look at the property definition: {@link #qxOwner}."
          }
        ],
        "@param": [
          {
            "name": "@param",
            "type": "qx.core.Object",
            "paramName": "value",
            "desc": "Value for qxOwner"
          }
        ]
      }
    },
    "resetQxOwner": {
      "type": "function",
      "name": "resetQxOwner",
      "abstract": false,
      "mixin": false,
      "inherited": true,
      "access": "public",
      "overriddenFrom": "qx.core.Object",
      "property": "reset"
    },
    "getQxObjectId": {
      "type": "function",
      "name": "getQxObjectId",
      "abstract": false,
      "mixin": false,
      "inherited": true,
      "access": "public",
      "overriddenFrom": "qx.core.Object",
      "property": "get",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Gets the (computed) value of the property <code>qxObjectId</code>.\n\nFor further details take a look at the property definition: {@link #qxObjectId}."
          }
        ],
        "@return": [
          {
            "name": "@return",
            "desc": "Returns the value for qxObjectId"
          }
        ]
      }
    },
    "setQxObjectId": {
      "type": "function",
      "name": "setQxObjectId",
      "abstract": false,
      "mixin": false,
      "inherited": true,
      "access": "public",
      "overriddenFrom": "qx.core.Object",
      "property": "set",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Sets the user value of the property <code>qxObjectId</code>.\n\nFor further details take a look at the property definition: {@link #qxObjectId}."
          }
        ],
        "@param": [
          {
            "name": "@param",
            "paramName": "value",
            "desc": "Value for qxObjectId"
          }
        ]
      }
    },
    "resetQxObjectId": {
      "type": "function",
      "name": "resetQxObjectId",
      "abstract": false,
      "mixin": false,
      "inherited": true,
      "access": "public",
      "overriddenFrom": "qx.core.Object",
      "property": "reset"
    }
  },
  "destruct": {
    "location": {
      "start": {
        "line": 514,
        "column": 13
      },
      "end": {
        "line": 518,
        "column": 3
      }
    },
    "jsdoc": {
      "@description": [
        {
          "name": "@description",
          "body": "<pre><code>**********************************************************************\n DESTRUCTOR\n**********************************************************************\n</code></pre>"
        }
      ]
    }
  },
  "descendants": []
}