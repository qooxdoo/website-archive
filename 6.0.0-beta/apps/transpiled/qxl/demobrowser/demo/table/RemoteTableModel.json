{
  "className": "qxl.demobrowser.demo.table.RemoteTableModel",
  "packageName": "qxl.demobrowser.demo.table",
  "name": "RemoteTableModel",
  "superClass": "qx.ui.table.model.Remote",
  "interfaces": [],
  "mixins": [],
  "functionName": null,
  "clazz": {
    "location": {
      "start": {
        "line": 28,
        "column": 0
      },
      "end": {
        "line": 136,
        "column": 3
      }
    },
    "jsdoc": {
      "@description": [
        {
          "name": "@description",
          "body": "***********************************************************************\n\nqooxdoo - the new era of web development\n\nhttp://qooxdoo.org\n\nCopyright:\n2004-2010 1&1 Internet AG, Germany, http://www.1und1.de\n\nLicense:\nMIT: https://opensource.org/licenses/MIT\nSee the LICENSE file in the project's top-level directory for details.\n\nAuthors:\nTobias Oetiker\nmartinwittemann (martinwittemann)\n\n***********************************************************************"
        },
        {
          "name": "@description",
          "body": "***********************************************************************\n\n\n***********************************************************************"
        },
        {
          "name": "@description",
          "body": ""
        }
      ],
      "@asset": [
        {
          "name": "@asset",
          "body": "qxl/demobrowser/backend/remote_table.php"
        }
      ]
    }
  },
  "type": "class",
  "construct": {
    "location": {
      "start": {
        "line": 32,
        "column": 2
      },
      "end": {
        "line": 35,
        "column": 3
      }
    }
  },
  "members": {
    "__PHPSupported": {
      "location": {
        "start": {
          "line": 38,
          "column": 4
        },
        "end": {
          "line": 38,
          "column": 25
        }
      },
      "type": "variable",
      "access": "private"
    },
    "__checkingForPHP": {
      "location": {
        "start": {
          "line": 39,
          "column": 4
        },
        "end": {
          "line": 39,
          "column": 28
        }
      },
      "type": "variable",
      "access": "private"
    },
    "_loadRowCount": {
      "location": {
        "start": {
          "line": 42,
          "column": 4
        },
        "end": {
          "line": 54,
          "column": 5
        }
      },
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "overloaded - called whenever the table requests the row count"
          }
        ]
      },
      "type": "function",
      "access": "protected",
      "overriddenFrom": "qx.ui.table.model.Remote",
      "appearsIn": [
        "qx.ui.table.model.Remote"
      ]
    },
    "_loadRowData": {
      "location": {
        "start": {
          "line": 57,
          "column": 4
        },
        "end": {
          "line": 69,
          "column": 5
        }
      },
      "type": "function",
      "access": "protected",
      "overriddenFrom": "qx.ui.table.model.Remote",
      "appearsIn": [
        "qx.ui.table.model.Remote"
      ],
      "jsdoc": {
        "@param": [
          {
            "name": "@param",
            "body": "firstRow {Integer} The index of the first row to load.",
            "paramName": "firstRow",
            "description": " The index of the first row to load.",
            "type": "Integer"
          },
          {
            "name": "@param",
            "body": "lastRow {Integer} The index of the last row to load.",
            "paramName": "lastRow",
            "description": " The index of the last row to load.",
            "type": "Integer"
          }
        ]
      }
    },
    "__checkPHP": {
      "location": {
        "start": {
          "line": 74,
          "column": 4
        },
        "end": {
          "line": 86,
          "column": 5
        }
      },
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Server communication"
          }
        ]
      },
      "type": "function",
      "access": "private"
    },
    "__loadPHPRowCount": {
      "location": {
        "start": {
          "line": 89,
          "column": 4
        },
        "end": {
          "line": 94,
          "column": 5
        }
      },
      "type": "function",
      "access": "private"
    },
    "__loadPHPRowData": {
      "location": {
        "start": {
          "line": 96,
          "column": 4
        },
        "end": {
          "line": 101,
          "column": 5
        }
      },
      "type": "function",
      "access": "private"
    },
    "__call": {
      "location": {
        "start": {
          "line": 104,
          "column": 4
        },
        "end": {
          "line": 112,
          "column": 5
        }
      },
      "type": "function",
      "access": "private"
    },
    "__setRowCount": {
      "location": {
        "start": {
          "line": 117,
          "column": 4
        },
        "end": {
          "line": 122,
          "column": 5
        }
      },
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Fake the server localy"
          }
        ]
      },
      "type": "function",
      "access": "private"
    },
    "__rowDataLoadded": {
      "location": {
        "start": {
          "line": 125,
          "column": 4
        },
        "end": {
          "line": 134,
          "column": 5
        }
      },
      "type": "function",
      "access": "private"
    },
    "getQxOwner": {
      "type": "function",
      "name": "getQxOwner",
      "abstract": false,
      "mixin": false,
      "inherited": true,
      "access": "public",
      "overriddenFrom": "qx.ui.table.model.Remote",
      "property": "get",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Gets the (computed) value of the property <code>qxOwner</code>.\n\nFor further details take a look at the property definition: {@link #qxOwner}."
          }
        ],
        "@return": [
          {
            "name": "@return",
            "type": "qx.core.Object",
            "desc": "Returns the value for qxOwner"
          }
        ]
      }
    },
    "setQxOwner": {
      "type": "function",
      "name": "setQxOwner",
      "abstract": false,
      "mixin": false,
      "inherited": true,
      "access": "public",
      "overriddenFrom": "qx.ui.table.model.Remote",
      "property": "set",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Sets the user value of the property <code>qxOwner</code>.\n\nFor further details take a look at the property definition: {@link #qxOwner}."
          }
        ],
        "@param": [
          {
            "name": "@param",
            "type": "qx.core.Object",
            "paramName": "value",
            "desc": "Value for qxOwner"
          }
        ]
      }
    },
    "resetQxOwner": {
      "type": "function",
      "name": "resetQxOwner",
      "abstract": false,
      "mixin": false,
      "inherited": true,
      "access": "public",
      "overriddenFrom": "qx.ui.table.model.Remote",
      "property": "reset"
    },
    "getQxObjectId": {
      "type": "function",
      "name": "getQxObjectId",
      "abstract": false,
      "mixin": false,
      "inherited": true,
      "access": "public",
      "overriddenFrom": "qx.ui.table.model.Remote",
      "property": "get",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Gets the (computed) value of the property <code>qxObjectId</code>.\n\nFor further details take a look at the property definition: {@link #qxObjectId}."
          }
        ],
        "@return": [
          {
            "name": "@return",
            "desc": "Returns the value for qxObjectId"
          }
        ]
      }
    },
    "setQxObjectId": {
      "type": "function",
      "name": "setQxObjectId",
      "abstract": false,
      "mixin": false,
      "inherited": true,
      "access": "public",
      "overriddenFrom": "qx.ui.table.model.Remote",
      "property": "set",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Sets the user value of the property <code>qxObjectId</code>.\n\nFor further details take a look at the property definition: {@link #qxObjectId}."
          }
        ],
        "@param": [
          {
            "name": "@param",
            "paramName": "value",
            "desc": "Value for qxObjectId"
          }
        ]
      }
    },
    "resetQxObjectId": {
      "type": "function",
      "name": "resetQxObjectId",
      "abstract": false,
      "mixin": false,
      "inherited": true,
      "access": "public",
      "overriddenFrom": "qx.ui.table.model.Remote",
      "property": "reset"
    },
    "getBlockSize": {
      "type": "function",
      "name": "getBlockSize",
      "abstract": false,
      "mixin": false,
      "inherited": true,
      "access": "public",
      "overriddenFrom": "qx.ui.table.model.Remote",
      "property": "get",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Gets the (computed) value of the property <code>blockSize</code>.\n\nFor further details take a look at the property definition: {@link #blockSize}."
          }
        ],
        "@return": [
          {
            "name": "@return",
            "type": "Integer",
            "desc": "Returns the value for blockSize"
          }
        ]
      }
    },
    "setBlockSize": {
      "type": "function",
      "name": "setBlockSize",
      "abstract": false,
      "mixin": false,
      "inherited": true,
      "access": "public",
      "overriddenFrom": "qx.ui.table.model.Remote",
      "property": "set",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Sets the user value of the property <code>blockSize</code>.\n\nFor further details take a look at the property definition: {@link #blockSize}."
          }
        ],
        "@param": [
          {
            "name": "@param",
            "type": "Integer",
            "paramName": "value",
            "desc": "Value for blockSize"
          }
        ]
      }
    },
    "resetBlockSize": {
      "type": "function",
      "name": "resetBlockSize",
      "abstract": false,
      "mixin": false,
      "inherited": true,
      "access": "public",
      "overriddenFrom": "qx.ui.table.model.Remote",
      "property": "reset"
    },
    "getMaxCachedBlockCount": {
      "type": "function",
      "name": "getMaxCachedBlockCount",
      "abstract": false,
      "mixin": false,
      "inherited": true,
      "access": "public",
      "overriddenFrom": "qx.ui.table.model.Remote",
      "property": "get",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Gets the (computed) value of the property <code>maxCachedBlockCount</code>.\n\nFor further details take a look at the property definition: {@link #maxCachedBlockCount}."
          }
        ],
        "@return": [
          {
            "name": "@return",
            "type": "Integer",
            "desc": "Returns the value for maxCachedBlockCount"
          }
        ]
      }
    },
    "setMaxCachedBlockCount": {
      "type": "function",
      "name": "setMaxCachedBlockCount",
      "abstract": false,
      "mixin": false,
      "inherited": true,
      "access": "public",
      "overriddenFrom": "qx.ui.table.model.Remote",
      "property": "set",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Sets the user value of the property <code>maxCachedBlockCount</code>.\n\nFor further details take a look at the property definition: {@link #maxCachedBlockCount}."
          }
        ],
        "@param": [
          {
            "name": "@param",
            "type": "Integer",
            "paramName": "value",
            "desc": "Value for maxCachedBlockCount"
          }
        ]
      }
    },
    "resetMaxCachedBlockCount": {
      "type": "function",
      "name": "resetMaxCachedBlockCount",
      "abstract": false,
      "mixin": false,
      "inherited": true,
      "access": "public",
      "overriddenFrom": "qx.ui.table.model.Remote",
      "property": "reset"
    },
    "getClearCacheOnRemove": {
      "type": "function",
      "name": "getClearCacheOnRemove",
      "abstract": false,
      "mixin": false,
      "inherited": true,
      "access": "public",
      "overriddenFrom": "qx.ui.table.model.Remote",
      "property": "get",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Gets the (computed) value of the property <code>clearCacheOnRemove</code>.\n\nFor further details take a look at the property definition: {@link #clearCacheOnRemove}."
          }
        ],
        "@return": [
          {
            "name": "@return",
            "type": "Boolean",
            "desc": "Returns the value for clearCacheOnRemove"
          }
        ]
      }
    },
    "isClearCacheOnRemove": {
      "type": "function",
      "name": "isClearCacheOnRemove",
      "abstract": false,
      "mixin": false,
      "inherited": true,
      "access": "public",
      "overriddenFrom": "qx.ui.table.model.Remote",
      "property": "is",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Gets the (computed) value of the property <code>clearCacheOnRemove</code>.\n\nFor further details take a look at the property definition: {@link #clearCacheOnRemove}."
          }
        ],
        "@return": [
          {
            "name": "@return",
            "type": "Boolean",
            "desc": "Returns the value for clearCacheOnRemove"
          }
        ]
      }
    },
    "setClearCacheOnRemove": {
      "type": "function",
      "name": "setClearCacheOnRemove",
      "abstract": false,
      "mixin": false,
      "inherited": true,
      "access": "public",
      "overriddenFrom": "qx.ui.table.model.Remote",
      "property": "set",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Sets the user value of the property <code>clearCacheOnRemove</code>.\n\nFor further details take a look at the property definition: {@link #clearCacheOnRemove}."
          }
        ],
        "@param": [
          {
            "name": "@param",
            "type": "Boolean",
            "paramName": "value",
            "desc": "Value for clearCacheOnRemove"
          }
        ]
      }
    },
    "resetClearCacheOnRemove": {
      "type": "function",
      "name": "resetClearCacheOnRemove",
      "abstract": false,
      "mixin": false,
      "inherited": true,
      "access": "public",
      "overriddenFrom": "qx.ui.table.model.Remote",
      "property": "reset"
    },
    "getBlockConcurrentLoadRowCount": {
      "type": "function",
      "name": "getBlockConcurrentLoadRowCount",
      "abstract": false,
      "mixin": false,
      "inherited": true,
      "access": "public",
      "overriddenFrom": "qx.ui.table.model.Remote",
      "property": "get",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Gets the (computed) value of the property <code>blockConcurrentLoadRowCount</code>.\n\nFor further details take a look at the property definition: {@link #blockConcurrentLoadRowCount}."
          }
        ],
        "@return": [
          {
            "name": "@return",
            "type": "Boolean",
            "desc": "Returns the value for blockConcurrentLoadRowCount"
          }
        ]
      }
    },
    "isBlockConcurrentLoadRowCount": {
      "type": "function",
      "name": "isBlockConcurrentLoadRowCount",
      "abstract": false,
      "mixin": false,
      "inherited": true,
      "access": "public",
      "overriddenFrom": "qx.ui.table.model.Remote",
      "property": "is",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Gets the (computed) value of the property <code>blockConcurrentLoadRowCount</code>.\n\nFor further details take a look at the property definition: {@link #blockConcurrentLoadRowCount}."
          }
        ],
        "@return": [
          {
            "name": "@return",
            "type": "Boolean",
            "desc": "Returns the value for blockConcurrentLoadRowCount"
          }
        ]
      }
    },
    "setBlockConcurrentLoadRowCount": {
      "type": "function",
      "name": "setBlockConcurrentLoadRowCount",
      "abstract": false,
      "mixin": false,
      "inherited": true,
      "access": "public",
      "overriddenFrom": "qx.ui.table.model.Remote",
      "property": "set",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Sets the user value of the property <code>blockConcurrentLoadRowCount</code>.\n\nFor further details take a look at the property definition: {@link #blockConcurrentLoadRowCount}."
          }
        ],
        "@param": [
          {
            "name": "@param",
            "type": "Boolean",
            "paramName": "value",
            "desc": "Value for blockConcurrentLoadRowCount"
          }
        ]
      }
    },
    "resetBlockConcurrentLoadRowCount": {
      "type": "function",
      "name": "resetBlockConcurrentLoadRowCount",
      "abstract": false,
      "mixin": false,
      "inherited": true,
      "access": "public",
      "overriddenFrom": "qx.ui.table.model.Remote",
      "property": "reset"
    }
  },
  "descendants": []
}