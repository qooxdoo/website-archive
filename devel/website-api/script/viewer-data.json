{"Core":{"static":[{"attributes":{"line":238,"isCtor":true,"overriddenFrom":"qx.type.BaseArray","name":"ctor","group":"Core"},"type":"method","children":[{"attributes":{},"type":"params","children":[{"attributes":{"name":"selector"},"type":"param","children":[{"attributes":{"text":"<p>Valid selector (CSS3 + extensions), window object, <span class=\"caps\">DOM</span> element/document or Array of <span class=\"caps\">DOM</span> Elements.</p>"},"type":"desc"},{"attributes":{},"type":"types","children":[{"attributes":{"type":"String"},"type":"entry"},{"attributes":{"type":"Element"},"type":"entry"},{"attributes":{"type":"Document"},"type":"entry"},{"attributes":{"type":"Window"},"type":"entry"},{"attributes":{"type":"Array"},"type":"entry"}]}]},{"attributes":{"name":"context"},"type":"param","children":[{"attributes":{"text":"<p>Only the children of this element are considered.</p>"},"type":"desc"},{"attributes":{},"type":"types","children":[{"attributes":{"type":"Element"},"type":"entry"},{"attributes":{"type":"q"},"type":"entry"}]}]}]},{"attributes":{"text":"<p>Primary usage:\nAccepts a selector string and returns a collection of found items. The optional context\nelement can be used to reduce the amount of found elements to children of the\ncontext element. If the context object is a collection, its first item is used.</p>\n\n<p>Secondary usage:\nCreates a collection from an existing <span class=\"caps\">DOM</span> element, document node or window object\n(or an Array containing any such objects)</p>\n\n<a href=\"http://sizzlejs.com/\" target=\"_blank\">Sizzle</a> is used as selector engine.\nCheck out the <a href=\"https://github.com/jquery/sizzle/wiki/Sizzle-Home\" target=\"_blank\">documentation</a>\nfor more details."},"type":"desc"},{"attributes":{},"type":"return","children":[{"attributes":{"text":"<p>A collection of <span class=\"caps\">DOM</span> elements.</p>"},"type":"desc"},{"attributes":{},"type":"types","children":[{"attributes":{"type":"q"},"type":"entry"}]}]}]},{"attributes":{"line":209,"isStatic":true,"name":"define","group":"Core"},"type":"method","children":[{"attributes":{},"type":"params","children":[{"attributes":{"optional":true,"name":"name"},"type":"param","children":[{"attributes":{"text":"<p>Name of the class. If null, the class will not be attached to a namespace.</p>"},"type":"desc"},{"attributes":{},"type":"types","children":[{"attributes":{"type":"String"},"type":"entry"}]}]},{"attributes":{"defaultValue":"null","optional":true,"name":"config"},"type":"param","children":[{"attributes":{"text":"<p>Class definition structure. The configuration map has the following keys: <table> <thead> <tr><th>Name</th><th>Type</th><th>Description</th></tr> </thead> <tr><td>extend</td><td>Class</td><td>The super class the current class inherits from.</td></tr> <tr><td>construct</td><td>Function</td><td>The constructor of the class.</td></tr> <tr><td>statics</td><td>Map</td><td>Map of static values / functions of the class.</td></tr> <tr><td>members</td><td>Map</td><td>Map of instance members of the class.</td></tr> <tr><td>defer</td><td>Function</td><td>Function that is called at the end of processing the class declaration.</td></tr> </table> <strong>Important hint:</strong> Please do not initialize reference types (<code>Object</code> or <code>Array</code>) directly inside the <strong>members</strong> section. Only list and initialize it with <code>null</code>. Initialize your reference type inside the <code>construct</code>. Check out one of the samples below to get the idea.</p>"},"type":"desc"},{"attributes":{},"type":"types","children":[{"attributes":{"type":"Map"},"type":"entry"}]}]}]},{"attributes":{"text":"<p>Define a new class using the qooxdoo class system.</p>"},"type":"desc"},{"attributes":{},"type":"return","children":[{"attributes":{"text":"<p>The defined class.</p>"},"type":"desc"},{"attributes":{},"type":"types","children":[{"attributes":{"type":"Function"},"type":"entry"}]}]}]}],"member":[{"attributes":{"line":345,"overriddenFrom":"qx.type.BaseArray","name":"concat","group":"Core"},"type":"method","children":[{"attributes":{},"type":"params","children":[{"attributes":{"name":"varargs"},"type":"param","children":[{"attributes":{"text":"<p>As many items as you want to add.</p>"},"type":"desc"},{"attributes":{},"type":"types","children":[{"attributes":{"type":"var"},"type":"entry"}]}]}]},{"attributes":{"text":"<p>Returns a copy of the collection including the given elements.</p>"},"type":"desc"},{"attributes":{},"type":"return","children":[{"attributes":{"text":"<p>A new collection containing all items.</p>"},"type":"desc"},{"attributes":{},"type":"types","children":[{"attributes":{"type":"q"},"type":"entry"}]}]}]},{"attributes":{"line":408,"name":"debug","group":"Core"},"type":"method","children":[{"attributes":{"text":"<p>Calls the browser&#8217;s native debugger to easily allow debugging within\nchained calls.</p>\n\n<p>Unlike the <a href=\"#.logThis\">logThis</a> method this implementation blocks the further processing.</p>"},"type":"desc"},{"attributes":{},"type":"return","children":[{"attributes":{"text":"<p>The collection for chaining</p>"},"type":"desc"},{"attributes":{},"type":"types","children":[{"attributes":{"type":"q"},"type":"entry"}]}]}]},{"attributes":{"line":275,"overriddenFrom":"qx.type.BaseArray","name":"filter","group":"Core"},"type":"method","children":[{"attributes":{},"type":"params","children":[{"attributes":{"name":"selector"},"type":"param","children":[{"attributes":{"text":"<p>Selector expression or filter function</p>"},"type":"desc"},{"attributes":{},"type":"types","children":[{"attributes":{"type":"String"},"type":"entry"},{"attributes":{"type":"Function"},"type":"entry"}]}]}]},{"attributes":{"text":"<p>Gets a new collection containing only those elements that passed the\ngiven filter. This can be either a selector expression or a filter\nfunction.</p>"},"type":"desc"},{"attributes":{},"type":"return","children":[{"attributes":{"text":"<p>New collection containing the elements that passed the filter</p>"},"type":"desc"},{"attributes":{},"type":"types","children":[{"attributes":{"type":"q"},"type":"entry"}]}]}]},{"attributes":{"line":365,"overriddenFrom":"qx.type.BaseArray","name":"indexOf","group":"Core"},"type":"method","children":[{"attributes":{},"type":"params","children":[{"attributes":{"name":"elem"},"type":"param","children":[{"attributes":{"text":"<p>Element or collection of elements</p>"},"type":"desc"},{"attributes":{},"type":"types","children":[{"attributes":{"type":"Element"},"type":"entry"},{"attributes":{"type":"Element","dimensions":1},"type":"entry"},{"attributes":{"type":"qxWeb"},"type":"entry"}]}]},{"attributes":{"name":"fromIndex"},"type":"param","children":[{"attributes":{"text":"<p>The index to start the search at</p>"},"type":"desc"},{"attributes":{},"type":"types","children":[{"attributes":{"type":"Integer"},"type":"entry"}]}]}]},{"attributes":{"text":"<p>Returns the index of the given element within the current\ncollection or -1 if the element is not in the collection</p>"},"type":"desc"},{"attributes":{},"type":"return","children":[{"attributes":{"text":"<p>The element&#8217;s index</p>"},"type":"desc"},{"attributes":{},"type":"types","children":[{"attributes":{"type":"Number"},"type":"entry"}]}]}]},{"attributes":{"line":426,"name":"logThis","group":"Core"},"type":"method","children":[{"attributes":{"text":"<p>Logs information about the current collection, its <span class=\"caps\">DOM</span> elements and the\nlength. Very useful during development to easily check the current state of\nyour collection and avoid common pitfalls like an empty collection.</p>\n\n<p>Unlike the <a href=\"#.debug\">debug</a> method this implementation works non-blocking.</p>"},"type":"desc"},{"attributes":{},"type":"return","children":[{"attributes":{"text":"<p>The collection for chaining</p>"},"type":"desc"},{"attributes":{},"type":"types","children":[{"attributes":{"type":"q"},"type":"entry"}]}]}]},{"attributes":{"line":334,"overriddenFrom":"qx.type.BaseArray","name":"map","group":"Core"},"type":"method","children":[{"attributes":{},"type":"params","children":[{"attributes":{"name":"callback"},"type":"param","children":[{"attributes":{"text":"<p>Function which produces the new element.</p>"},"type":"desc"},{"attributes":{},"type":"types","children":[{"attributes":{"type":"Function"},"type":"entry"}]}]},{"attributes":{"name":"thisarg"},"type":"param","children":[{"attributes":{"text":"<p>Context of the callback.</p>"},"type":"desc"},{"attributes":{},"type":"types","children":[{"attributes":{"type":"var"},"type":"entry"}]}]}]},{"attributes":{"text":"<p>Returns a new collection containing the modified elements. For more details, check out the\n<a href=\"https://developer.mozilla.org/en-US/docs/JavaScript/Reference/Global_Objects/Array/map\" target=\"_blank\"><span class=\"caps\">MDN</span> documentation</a>.</p>"},"type":"desc"},{"attributes":{},"type":"return","children":[{"attributes":{"text":"<p>New collection containing the elements that passed the filter</p>"},"type":"desc"},{"attributes":{},"type":"types","children":[{"attributes":{"type":"q"},"type":"entry"}]}]}]},{"attributes":{"line":301,"overriddenFrom":"qx.type.BaseArray","name":"slice","group":"Core"},"type":"method","children":[{"attributes":{},"type":"params","children":[{"attributes":{"name":"begin"},"type":"param","children":[{"attributes":{"text":"<p>The index to begin.</p>"},"type":"desc"},{"attributes":{},"type":"types","children":[{"attributes":{"type":"Number"},"type":"entry"}]}]},{"attributes":{"optional":true,"name":"end"},"type":"param","children":[{"attributes":{"text":"<p>The index to end.</p>"},"type":"desc"},{"attributes":{},"type":"types","children":[{"attributes":{"type":"Number"},"type":"entry"}]}]}]},{"attributes":{"text":"<p>Returns a copy of the collection within the given range.</p>"},"type":"desc"},{"attributes":{},"type":"return","children":[{"attributes":{"text":"<p>A new collection containing a slice of the original collection.</p>"},"type":"desc"},{"attributes":{},"type":"types","children":[{"attributes":{"type":"q"},"type":"entry"}]}]}]},{"attributes":{"line":321,"overriddenFrom":"qx.type.BaseArray","name":"splice","group":"Core"},"type":"method","children":[{"attributes":{},"type":"params","children":[{"attributes":{"name":"index"},"type":"param","children":[{"attributes":{"text":"<p>The index to begin.</p>"},"type":"desc"},{"attributes":{},"type":"types","children":[{"attributes":{"type":"Number"},"type":"entry"}]}]},{"attributes":{"name":"howMany"},"type":"param","children":[{"attributes":{"text":"<p>the amount of items to remove.</p>"},"type":"desc"},{"attributes":{},"type":"types","children":[{"attributes":{"type":"Number"},"type":"entry"}]}]},{"attributes":{"name":"varargs"},"type":"param","children":[{"attributes":{"text":"<p>As many items as you want to add.</p>"},"type":"desc"},{"attributes":{},"type":"types","children":[{"attributes":{"type":"var"},"type":"entry"}]}]}]},{"attributes":{"text":"<p>Removes the given number of items and returns the removed items as a new collection.\nThis method can also add items. Take a look at the\n<a href=\"https://developer.mozilla.org/en-US/docs/JavaScript/Reference/Global_Objects/Array/splice\" target=\"_blank\">documentation of <span class=\"caps\">MDN</span></a> for more details.</p>"},"type":"desc"},{"attributes":{},"type":"return","children":[{"attributes":{"text":"<p>A new collection containing the removed items.</p>"},"type":"desc"},{"attributes":{},"type":"types","children":[{"attributes":{"type":"q"},"type":"entry"}]}]}]},{"attributes":{"line":288,"name":"unique","group":"Core"},"type":"method","children":[{"attributes":{"text":"<p>Recreates a collection which is free of all duplicate elements from the original.</p>"},"type":"desc"},{"attributes":{},"type":"return","children":[{"attributes":{"text":"<p>Returns a copy with no duplicates</p>"},"type":"desc"},{"attributes":{},"type":"types","children":[{"attributes":{"type":"q"},"type":"entry"}]}]}]}],"desc":"<p>The Core module&#8217;s responsibility is to query the <span class=\"caps\">DOM</span> for elements and offer\nthese elements as a collection. The Core module itself does not offer any methods to\nwork with the collection. These methods are added by the other included modules,\nsuch as Manipulating or Attributes.</p>\n\n<p>Core also provides the plugin <span class=\"caps\">API</span> which allows modules to attach either\nstatic functions to the global <code>q</code> object or define methods on the\ncollection it returns.</p>\n\n<p>By default, the core module is assigned to a global module named <code>q</code>.\nIn case <code>q</code> is already defined, the name <code>qxWeb</code>\nis used instead.</p>\n\n<p>For further details, take a look at the documentation in the\n<a href=\"http://manual.qooxdoo.org/6.0.0-beta/pages/website.html\" target=\"_blank\">user manual</a>.</p>","group":"Core"},"Cookie":{"static":[{"attributes":{"line":1,"sourceMethod":"del","isStatic":true,"sourceClass":"qx.module.Cookie","name":"del"},"type":"method","children":[{"attributes":{},"type":"params","children":[{"attributes":{"name":"key"},"type":"param","children":[{"attributes":{"text":"<p>The key for the string value.</p>"},"type":"desc"},{"attributes":{},"type":"types","children":[{"attributes":{"type":"String"},"type":"entry"}]}]},{"attributes":{"defaultValue":"null","optional":true,"name":"path"},"type":"param","children":[{"attributes":{"text":"<p>Path value.</p>"},"type":"desc"},{"attributes":{},"type":"types","children":[{"attributes":{"type":"String"},"type":"entry"}]}]},{"attributes":{"defaultValue":"null","optional":true,"name":"domain"},"type":"param","children":[{"attributes":{"text":"<p>Domain value.</p>"},"type":"desc"},{"attributes":{},"type":"types","children":[{"attributes":{"type":"String"},"type":"entry"}]}]}]},{"attributes":{"text":"<p>Deletes the string value of a cookie.</p>"},"type":"desc"},{"attributes":{"targetMethod":"cookie.del","targetClass":"qxWeb","sourceMethod":"del","sourceClass":"qx.module.Cookie"},"type":"attachStatic"}]},{"attributes":{"line":1,"sourceMethod":"get","isStatic":true,"sourceClass":"qx.module.Cookie","name":"get"},"type":"method","children":[{"attributes":{},"type":"params","children":[{"attributes":{"name":"key"},"type":"param","children":[{"attributes":{"text":"<p>The key for the saved string value.</p>"},"type":"desc"},{"attributes":{},"type":"types","children":[{"attributes":{"type":"String"},"type":"entry"}]}]}]},{"attributes":{"text":"<p>Returns the string value of a cookie.</p>"},"type":"desc"},{"attributes":{"targetMethod":"cookie.get","targetClass":"qxWeb","sourceMethod":"get","sourceClass":"qx.module.Cookie"},"type":"attachStatic"},{"attributes":{},"type":"return","children":[{"attributes":{"text":"<p>Returns the saved string value if the cookie contains a value for the key, otherwise <code>null</code></p>"},"type":"desc"},{"attributes":{},"type":"types","children":[{"attributes":{"type":"String"},"type":"entry"},{"attributes":{"type":"null"},"type":"entry"}]}]}]},{"attributes":{"line":1,"sourceMethod":"set","isStatic":true,"sourceClass":"qx.module.Cookie","name":"set"},"type":"method","children":[{"attributes":{},"type":"params","children":[{"attributes":{"name":"key"},"type":"param","children":[{"attributes":{"text":"<p>The key for the string value.</p>"},"type":"desc"},{"attributes":{},"type":"types","children":[{"attributes":{"type":"String"},"type":"entry"}]}]},{"attributes":{"name":"value"},"type":"param","children":[{"attributes":{"text":"<p>The string value.</p>"},"type":"desc"},{"attributes":{},"type":"types","children":[{"attributes":{"type":"String"},"type":"entry"}]}]},{"attributes":{"defaultValue":"null","optional":true,"name":"expires"},"type":"param","children":[{"attributes":{"text":"<p>Expires directive value in days starting from now, or <code>null</code> if the cookie should be deleted when the browser is closed.</p>"},"type":"desc"},{"attributes":{},"type":"types","children":[{"attributes":{"type":"Number"},"type":"entry"}]}]},{"attributes":{"defaultValue":"null","optional":true,"name":"path"},"type":"param","children":[{"attributes":{"text":"<p>Path value.</p>"},"type":"desc"},{"attributes":{},"type":"types","children":[{"attributes":{"type":"String"},"type":"entry"}]}]},{"attributes":{"defaultValue":"null","optional":true,"name":"domain"},"type":"param","children":[{"attributes":{"text":"<p>Domain value.</p>"},"type":"desc"},{"attributes":{},"type":"types","children":[{"attributes":{"type":"String"},"type":"entry"}]}]},{"attributes":{"defaultValue":"null","optional":true,"name":"secure"},"type":"param","children":[{"attributes":{"text":"<p>Secure flag.</p>"},"type":"desc"},{"attributes":{},"type":"types","children":[{"attributes":{"type":"Boolean"},"type":"entry"}]}]}]},{"attributes":{"text":"<p>Sets the string value of a cookie.</p>"},"type":"desc"},{"attributes":{"targetMethod":"cookie.set","targetClass":"qxWeb","sourceMethod":"set","sourceClass":"qx.module.Cookie"},"type":"attachStatic"}]}],"member":[],"fileName":"qx.module.Cookie","group":"Extras","desc":"<p>Cookie handling module</p>","events":[]},"util.Array":{"static":[{"attributes":{"isStatic":true,"group":"Utilities","name":"cast","sourceMethod":"cast","line":1,"sourceClass":"qx.module.util.Array"},"type":"method","children":[{"attributes":{},"type":"params","children":[{"attributes":{"name":"object"},"type":"param","children":[{"attributes":{"text":"<p>any array-like object</p>"},"type":"desc"},{"attributes":{},"type":"types","children":[{"attributes":{"type":"var"},"type":"entry"}]}]},{"attributes":{"name":"constructor"},"type":"param","children":[{"attributes":{"text":"<p>constructor of the new instance</p>"},"type":"desc"},{"attributes":{},"type":"types","children":[{"attributes":{"type":"Function"},"type":"entry"}]}]},{"attributes":{"defaultValue":"0","optional":true,"name":"offset"},"type":"param","children":[{"attributes":{"text":"<p>position to start from</p>"},"type":"desc"},{"attributes":{},"type":"types","children":[{"attributes":{"type":"Number"},"type":"entry"}]}]}]},{"attributes":{"text":"<p>Converts an array like object to any other array like\nobject.</p>\n\n<p>Attention: The returned array may be same\ninstance as the incoming one if the constructor is identical!</p>"},"type":"desc"},{"attributes":{"targetMethod":"array.cast","targetClass":"qxWeb","sourceMethod":"cast","sourceClass":"qx.module.util.Array"},"type":"attachStatic"},{"attributes":{},"type":"return","children":[{"attributes":{"text":"<p>the converted array</p>"},"type":"desc"},{"attributes":{},"type":"types","children":[{"attributes":{"type":"Array"},"type":"entry"}]}]}]},{"attributes":{"isStatic":true,"group":"Utilities","name":"equals","sourceMethod":"equals","line":1,"sourceClass":"qx.module.util.Array"},"type":"method","children":[{"attributes":{},"type":"params","children":[{"attributes":{"name":"arr1"},"type":"param","children":[{"attributes":{"text":"<p>first array</p>"},"type":"desc"},{"attributes":{},"type":"types","children":[{"attributes":{"type":"Array"},"type":"entry"}]}]},{"attributes":{"name":"arr2"},"type":"param","children":[{"attributes":{"text":"<p>second array</p>"},"type":"desc"},{"attributes":{},"type":"types","children":[{"attributes":{"type":"Array"},"type":"entry"}]}]}]},{"attributes":{"text":"<p>Check whether the two arrays have the same content. Checks only the\nequality of the arrays&#8217; content.</p>"},"type":"desc"},{"attributes":{"targetMethod":"array.equals","targetClass":"qxWeb","sourceMethod":"equals","sourceClass":"qx.module.util.Array"},"type":"attachStatic"},{"attributes":{},"type":"return","children":[{"attributes":{"text":"<p>Whether the two arrays are equal</p>"},"type":"desc"},{"attributes":{},"type":"types","children":[{"attributes":{"type":"Boolean"},"type":"entry"}]}]}]},{"attributes":{"isStatic":true,"group":"Utilities","name":"exclude","sourceMethod":"exclude","line":1,"sourceClass":"qx.module.util.Array"},"type":"method","children":[{"attributes":{},"type":"params","children":[{"attributes":{"name":"arr1"},"type":"param","children":[{"attributes":{"text":"<p>the array</p>"},"type":"desc"},{"attributes":{},"type":"types","children":[{"attributes":{"type":"Array"},"type":"entry"}]}]},{"attributes":{"name":"arr2"},"type":"param","children":[{"attributes":{"text":"<p>the elements of this array will be excluded from the other one</p>"},"type":"desc"},{"attributes":{},"type":"types","children":[{"attributes":{"type":"Array"},"type":"entry"}]}]}]},{"attributes":{"text":"<p>Modifies the first array as it removes all elements\nwhich are listed in the second array as well.</p>"},"type":"desc"},{"attributes":{"targetMethod":"array.exclude","targetClass":"qxWeb","sourceMethod":"exclude","sourceClass":"qx.module.util.Array"},"type":"attachStatic"},{"attributes":{},"type":"return","children":[{"attributes":{"text":"<p>The modified array.</p>"},"type":"desc"},{"attributes":{},"type":"types","children":[{"attributes":{"type":"Array"},"type":"entry"}]}]}]},{"attributes":{"isStatic":true,"group":"Utilities","name":"fromArguments","sourceMethod":"fromArguments","line":1,"sourceClass":"qx.module.util.Array"},"type":"method","children":[{"attributes":{},"type":"params","children":[{"attributes":{"name":"args"},"type":"param","children":[{"attributes":{"text":"<p>arguments object</p>"},"type":"desc"},{"attributes":{},"type":"types","children":[{"attributes":{"type":"arguments"},"type":"entry"}]}]},{"attributes":{"defaultValue":"0","optional":true,"name":"offset"},"type":"param","children":[{"attributes":{"text":"<p>position to start from</p>"},"type":"desc"},{"attributes":{},"type":"types","children":[{"attributes":{"type":"Number"},"type":"entry"}]}]}]},{"attributes":{"text":"<p>Convert an arguments object into an array.</p>"},"type":"desc"},{"attributes":{"targetMethod":"array.fromArguments","targetClass":"qxWeb","sourceMethod":"fromArguments","sourceClass":"qx.module.util.Array"},"type":"attachStatic"},{"attributes":{},"type":"return","children":[{"attributes":{"text":"<p>a newly created array (copy) with the content of the arguments object.</p>"},"type":"desc"},{"attributes":{},"type":"types","children":[{"attributes":{"type":"Array"},"type":"entry"}]}]}]},{"attributes":{"isStatic":true,"group":"Utilities","name":"insertAfter","sourceMethod":"insertAfter","line":1,"sourceClass":"qx.module.util.Array"},"type":"method","children":[{"attributes":{},"type":"params","children":[{"attributes":{"name":"arr"},"type":"param","children":[{"attributes":{"text":"<p>the array</p>"},"type":"desc"},{"attributes":{},"type":"types","children":[{"attributes":{"type":"Array"},"type":"entry"}]}]},{"attributes":{"name":"obj"},"type":"param","children":[{"attributes":{"text":"<p>object to be inserted</p>"},"type":"desc"},{"attributes":{},"type":"types","children":[{"attributes":{"type":"var"},"type":"entry"}]}]},{"attributes":{"name":"obj2"},"type":"param","children":[{"attributes":{"text":"<p>insert obj1 after this object</p>"},"type":"desc"},{"attributes":{},"type":"types","children":[{"attributes":{"type":"var"},"type":"entry"}]}]}]},{"attributes":{"text":"<p>Insert an element into the array after a given second element.</p>"},"type":"desc"},{"attributes":{"targetMethod":"array.insertAfter","targetClass":"qxWeb","sourceMethod":"insertAfter","sourceClass":"qx.module.util.Array"},"type":"attachStatic"},{"attributes":{},"type":"return","children":[{"attributes":{"text":"<p>The given array.</p>"},"type":"desc"},{"attributes":{},"type":"types","children":[{"attributes":{"type":"Array"},"type":"entry"}]}]}]},{"attributes":{"isStatic":true,"group":"Utilities","name":"insertBefore","sourceMethod":"insertBefore","line":1,"sourceClass":"qx.module.util.Array"},"type":"method","children":[{"attributes":{},"type":"params","children":[{"attributes":{"name":"arr"},"type":"param","children":[{"attributes":{"text":"<p>the array</p>"},"type":"desc"},{"attributes":{},"type":"types","children":[{"attributes":{"type":"Array"},"type":"entry"}]}]},{"attributes":{"name":"obj"},"type":"param","children":[{"attributes":{"text":"<p>object to be inserted</p>"},"type":"desc"},{"attributes":{},"type":"types","children":[{"attributes":{"type":"var"},"type":"entry"}]}]},{"attributes":{"name":"obj2"},"type":"param","children":[{"attributes":{"text":"<p>insert obj1 before this object</p>"},"type":"desc"},{"attributes":{},"type":"types","children":[{"attributes":{"type":"var"},"type":"entry"}]}]}]},{"attributes":{"text":"<p>Insert an element into the array before a given second element.</p>"},"type":"desc"},{"attributes":{"targetMethod":"array.insertBefore","targetClass":"qxWeb","sourceMethod":"insertBefore","sourceClass":"qx.module.util.Array"},"type":"attachStatic"},{"attributes":{},"type":"return","children":[{"attributes":{"text":"<p>The given array.</p>"},"type":"desc"},{"attributes":{},"type":"types","children":[{"attributes":{"type":"Array"},"type":"entry"}]}]}]},{"attributes":{"isStatic":true,"group":"Utilities","name":"max","sourceMethod":"max","line":1,"sourceClass":"qx.module.util.Array"},"type":"method","children":[{"attributes":{},"type":"params","children":[{"attributes":{"name":"arr"},"type":"param","children":[{"attributes":{"text":"<p>Array to process.</p>"},"type":"desc"},{"attributes":{},"type":"types","children":[{"attributes":{"type":"Array"},"type":"entry"}]}]}]},{"attributes":{"text":"<p>Returns the highest value in the given array. Supports\nnumeric values only.</p>"},"type":"desc"},{"attributes":{"targetMethod":"array.max","targetClass":"qxWeb","sourceMethod":"max","sourceClass":"qx.module.util.Array"},"type":"attachStatic"},{"attributes":{},"type":"return","children":[{"attributes":{"text":"<p>The highest of all values or undefined if array is empty.</p>"},"type":"desc"},{"attributes":{},"type":"types","children":[{"attributes":{"type":"Number"},"type":"entry"},{"attributes":{"type":"undefined"},"type":"entry"}]}]}]},{"attributes":{"isStatic":true,"group":"Utilities","name":"min","sourceMethod":"min","line":1,"sourceClass":"qx.module.util.Array"},"type":"method","children":[{"attributes":{},"type":"params","children":[{"attributes":{"name":"arr"},"type":"param","children":[{"attributes":{"text":"<p>Array to process.</p>"},"type":"desc"},{"attributes":{},"type":"types","children":[{"attributes":{"type":"Array"},"type":"entry"}]}]}]},{"attributes":{"text":"<p>Returns the lowest value in the given array. Supports\nnumeric values only.</p>"},"type":"desc"},{"attributes":{"targetMethod":"array.min","targetClass":"qxWeb","sourceMethod":"min","sourceClass":"qx.module.util.Array"},"type":"attachStatic"},{"attributes":{},"type":"return","children":[{"attributes":{"text":"<p>The lowest of all values or undefined if array is empty.</p>"},"type":"desc"},{"attributes":{},"type":"types","children":[{"attributes":{"type":"Number"},"type":"entry"},{"attributes":{"type":"undefined"},"type":"entry"}]}]}]},{"attributes":{"isStatic":true,"group":"Utilities","name":"range","sourceMethod":"range","line":1,"sourceClass":"qx.module.util.Array"},"type":"method","children":[{"attributes":{},"type":"params","children":[{"attributes":{"name":"start"},"type":"param","children":[{"attributes":{"text":"<p>start of the new array, defaults to 0</p>"},"type":"desc"},{"attributes":{},"type":"types","children":[{"attributes":{"type":"Integer"},"type":"entry"}]}]},{"attributes":{"name":"stop"},"type":"param","children":[{"attributes":{"text":"<p>stop of the new array</p>"},"type":"desc"},{"attributes":{},"type":"types","children":[{"attributes":{"type":"Integer"},"type":"entry"}]}]},{"attributes":{"name":"step"},"type":"param","children":[{"attributes":{"text":"<p>increment / decrement &#8211; depends whether you use positive or negative values</p>"},"type":"desc"},{"attributes":{},"type":"types","children":[{"attributes":{"type":"Integer"},"type":"entry"}]}]}]},{"attributes":{"text":"<p>Returns a new array with integers from start to stop incremented or decremented by step.</p>"},"type":"desc"},{"attributes":{"targetMethod":"array.range","targetClass":"qxWeb","sourceMethod":"range","sourceClass":"qx.module.util.Array"},"type":"attachStatic"},{"attributes":{},"type":"return","children":[{"attributes":{"text":"<p>Returns a new array with integers</p>"},"type":"desc"},{"attributes":{},"type":"types","children":[{"attributes":{"type":"Array"},"type":"entry"}]}]}]},{"attributes":{"isStatic":true,"group":"Utilities","name":"remove","sourceMethod":"remove","line":1,"sourceClass":"qx.module.util.Array"},"type":"method","children":[{"attributes":{},"type":"params","children":[{"attributes":{"name":"arr"},"type":"param","children":[{"attributes":{"text":"<p>the array</p>"},"type":"desc"},{"attributes":{},"type":"types","children":[{"attributes":{"type":"Array"},"type":"entry"}]}]},{"attributes":{"name":"obj"},"type":"param","children":[{"attributes":{"text":"<p>element to be removed from the array</p>"},"type":"desc"},{"attributes":{},"type":"types","children":[{"attributes":{"type":"var"},"type":"entry"}]}]}]},{"attributes":{"text":"<p>Remove an element from the array.</p>"},"type":"desc"},{"attributes":{"targetMethod":"array.remove","targetClass":"qxWeb","sourceMethod":"remove","sourceClass":"qx.module.util.Array"},"type":"attachStatic"},{"attributes":{},"type":"return","children":[{"attributes":{"text":"<p>the removed element</p>"},"type":"desc"},{"attributes":{},"type":"types","children":[{"attributes":{"type":"var"},"type":"entry"}]}]}]},{"attributes":{"isStatic":true,"group":"Utilities","name":"removeAll","sourceMethod":"removeAll","line":1,"sourceClass":"qx.module.util.Array"},"type":"method","children":[{"attributes":{},"type":"params","children":[{"attributes":{"name":"arr"},"type":"param","children":[{"attributes":{"text":"<p>the array</p>"},"type":"desc"},{"attributes":{},"type":"types","children":[{"attributes":{"type":"Array"},"type":"entry"}]}]}]},{"attributes":{"text":"<p>Remove all elements from the array</p>"},"type":"desc"},{"attributes":{"targetMethod":"array.removeAll","targetClass":"qxWeb","sourceMethod":"removeAll","sourceClass":"qx.module.util.Array"},"type":"attachStatic"},{"attributes":{},"type":"return","children":[{"attributes":{"text":"<p>empty array</p>"},"type":"desc"},{"attributes":{},"type":"types","children":[{"attributes":{"type":"Array"},"type":"entry"}]}]}]},{"attributes":{"isStatic":true,"group":"Utilities","name":"unique","sourceMethod":"unique","line":1,"sourceClass":"qx.module.util.Array"},"type":"method","children":[{"attributes":{},"type":"params","children":[{"attributes":{"name":"arr"},"type":"param","children":[{"attributes":{"text":"<p>Incoming array</p>"},"type":"desc"},{"attributes":{},"type":"types","children":[{"attributes":{"type":"Array"},"type":"entry"}]}]}]},{"attributes":{"text":"<p>Recreates an array which is free of all duplicate elements from the original.\nThis method do not modifies the original array!\nKeep in mind that this methods deletes undefined indexes.</p>"},"type":"desc"},{"attributes":{"targetMethod":"array.unique","targetClass":"qxWeb","sourceMethod":"unique","sourceClass":"qx.module.util.Array"},"type":"attachStatic"},{"attributes":{},"type":"return","children":[{"attributes":{"text":"<p>Returns a copy with no duplicates or the original array if no duplicates were found.</p>"},"type":"desc"},{"attributes":{},"type":"types","children":[{"attributes":{"type":"Array"},"type":"entry"}]}]}]}],"member":[],"fileName":"qx.module.util.Array","group":"Utilities","desc":"<p>Utility module to give some support to work with arrays.</p>","events":[]},"Event":{"static":[{"attributes":{"isStatic":true,"group":"Core","name":"ready","sourceMethod":"ready","line":58,"sourceClass":"qx.module.Event"},"type":"method","children":[{"attributes":{},"type":"params","children":[{"attributes":{"name":"callback"},"type":"param","children":[{"attributes":{"text":"<p>callback function</p>"},"type":"desc"},{"attributes":{},"type":"types","children":[{"attributes":{"type":"Function"},"type":"entry"}]}]}]},{"attributes":{"text":"<p>Executes the given function once the document is ready.</p>"},"type":"desc"},{"attributes":{"targetMethod":"","targetClass":"qxWeb","sourceMethod":"ready","sourceClass":"qx.module.Event"},"type":"attachStatic"}]}],"member":[{"attributes":{"isStatic":false,"group":"Core","name":"allOff","sourceMethod":"allOff","line":435,"sourceClass":"qx.module.Event"},"type":"method","children":[{"attributes":{},"type":"params","children":[{"attributes":{"optional":true,"name":"type"},"type":"param","children":[{"attributes":{"text":"<p>Event type. All listeners will be removed if this is undefined.</p>"},"type":"desc"},{"attributes":{},"type":"types","children":[{"attributes":{"type":"String"},"type":"entry"}]}]}]},{"attributes":{"text":"<p>Removes all event listeners (or all listeners for a given type) from the\ncollection.</p>"},"type":"desc"},{"attributes":{"targetMethod":"","targetClass":"qxWeb","sourceMethod":"allOff","sourceClass":"qx.module.Event"},"type":"attach"},{"attributes":{},"type":"return","children":[{"attributes":{"text":"<p>The collection for chaining</p>"},"type":"desc"},{"attributes":{},"type":"types","children":[{"attributes":{"type":"qxWeb"},"type":"entry"}]}]}]},{"attributes":{"isStatic":false,"group":"Core","name":"emit","sourceMethod":"emit","line":458,"sourceClass":"qx.module.Event"},"type":"method","children":[{"attributes":{},"type":"params","children":[{"attributes":{"name":"type"},"type":"param","children":[{"attributes":{"text":"<p>Event type</p>"},"type":"desc"},{"attributes":{},"type":"types","children":[{"attributes":{"type":"String"},"type":"entry"}]}]},{"attributes":{"optional":true,"name":"data"},"type":"param","children":[{"attributes":{"text":"<p>Optional data that will be passed to the listener callback function.</p>"},"type":"desc"},{"attributes":{},"type":"types","children":[{"attributes":{"type":"var"},"type":"entry"}]}]}]},{"attributes":{"text":"<p>Fire an event of the given type.</p>"},"type":"desc"},{"attributes":{"targetMethod":"","targetClass":"qxWeb","sourceMethod":"emit","sourceClass":"qx.module.Event"},"type":"attach"},{"attributes":{},"type":"return","children":[{"attributes":{"text":"<p>The collection for chaining</p>"},"type":"desc"},{"attributes":{},"type":"types","children":[{"attributes":{"type":"qxWeb"},"type":"entry"}]}]}]},{"attributes":{"isStatic":false,"group":"Core","name":"hasListener","sourceMethod":"hasListener","line":503,"sourceClass":"qx.module.Event"},"type":"method","children":[{"attributes":{},"type":"params","children":[{"attributes":{"name":"type"},"type":"param","children":[{"attributes":{"text":"<p>Event type, e.g. <code>mousedown</code></p>"},"type":"desc"},{"attributes":{},"type":"types","children":[{"attributes":{"type":"String"},"type":"entry"}]}]},{"attributes":{"optional":true,"name":"listener"},"type":"param","children":[{"attributes":{"text":"<p>Event listener to check for.</p>"},"type":"desc"},{"attributes":{},"type":"types","children":[{"attributes":{"type":"Function"},"type":"entry"}]}]},{"attributes":{"optional":true,"name":"context"},"type":"param","children":[{"attributes":{"text":"<p>Context object listener to check for.</p>"},"type":"desc"},{"attributes":{},"type":"types","children":[{"attributes":{"type":"Object"},"type":"entry"}]}]}]},{"attributes":{"text":"<p>Checks if one or more listeners for the given event type are attached to\nthe first element in the collection.</p>\n\n<p><strong>Important:</strong> Make sure you are handing in the <strong>identical</strong> context object to get\nthe correct result. Especially when using a collection instance this is a common pitfall.</p>"},"type":"desc"},{"attributes":{"targetMethod":"","targetClass":"qxWeb","sourceMethod":"hasListener","sourceClass":"qx.module.Event"},"type":"attach"},{"attributes":{},"type":"return","children":[{"attributes":{"text":"<code>true</code> if one or more listeners are attached"},"type":"desc"},{"attributes":{},"type":"types","children":[{"attributes":{"type":"Boolean"},"type":"entry"}]}]}]},{"attributes":{"isStatic":false,"group":"Core","name":"hover","sourceMethod":"hover","line":602,"sourceClass":"qx.module.Event"},"type":"method","children":[{"attributes":{},"type":"params","children":[{"attributes":{"name":"callbackIn"},"type":"param","children":[{"attributes":{"text":"<p>callback when hovering over</p>"},"type":"desc"},{"attributes":{},"type":"types","children":[{"attributes":{"type":"Function"},"type":"entry"}]}]},{"attributes":{"optional":true,"name":"callbackOut"},"type":"param","children":[{"attributes":{"text":"<p>callback when hovering out</p>"},"type":"desc"},{"attributes":{},"type":"types","children":[{"attributes":{"type":"Function"},"type":"entry"}]}]}]},{"attributes":{"text":"<p>Bind one or two callbacks to the collection.\nIf only the first callback is defined the collection\ndoes react on &#8216;pointerover&#8217; only.</p>"},"type":"desc"},{"attributes":{"targetMethod":"","targetClass":"qxWeb","sourceMethod":"hover","sourceClass":"qx.module.Event"},"type":"attach"},{"attributes":{},"type":"return","children":[{"attributes":{"text":"<p>The collection for chaining</p>"},"type":"desc"},{"attributes":{},"type":"types","children":[{"attributes":{"type":"qxWeb"},"type":"entry"}]}]}]},{"attributes":{"isStatic":false,"group":"Core","name":"off","sourceMethod":"off","line":357,"sourceClass":"qx.module.Event"},"type":"method","children":[{"attributes":{},"type":"params","children":[{"attributes":{"name":"type"},"type":"param","children":[{"attributes":{"text":"<p>Type of the event</p>"},"type":"desc"},{"attributes":{},"type":"types","children":[{"attributes":{"type":"String"},"type":"entry"}]}]},{"attributes":{"name":"listener"},"type":"param","children":[{"attributes":{"text":"<p>Listener callback</p>"},"type":"desc"},{"attributes":{},"type":"types","children":[{"attributes":{"type":"Function"},"type":"entry"}]}]},{"attributes":{"optional":true,"name":"context"},"type":"param","children":[{"attributes":{"text":"<p>Listener callback context</p>"},"type":"desc"},{"attributes":{},"type":"types","children":[{"attributes":{"type":"Object"},"type":"entry"}]}]},{"attributes":{"optional":true,"name":"useCapture"},"type":"param","children":[{"attributes":{"text":"<p>Attach the listener to the capturing phase if true</p>"},"type":"desc"},{"attributes":{},"type":"types","children":[{"attributes":{"type":"Boolean"},"type":"entry"}]}]}]},{"attributes":{"text":"<p>Unregisters event listeners for the given type from each element in the\ncollection.</p>"},"type":"desc"},{"attributes":{"targetMethod":"","targetClass":"qxWeb","sourceMethod":"off","sourceClass":"qx.module.Event"},"type":"attach"},{"attributes":{},"type":"return","children":[{"attributes":{"text":"<p>The collection for chaining</p>"},"type":"desc"},{"attributes":{},"type":"types","children":[{"attributes":{"type":"qxWeb"},"type":"entry"}]}]}]},{"attributes":{"isStatic":false,"group":"Core","name":"offMatchTarget","sourceMethod":"offMatchTarget","line":682,"sourceClass":"qx.module.Event"},"type":"method","children":[{"attributes":{},"type":"params","children":[{"attributes":{"name":"eventType"},"type":"param","children":[{"attributes":{"text":"<p>name of the event to remove for</p>"},"type":"desc"},{"attributes":{},"type":"types","children":[{"attributes":{"type":"String"},"type":"entry"}]}]},{"attributes":{"name":"target"},"type":"param","children":[{"attributes":{"text":"<p>Selector expression, <span class=\"caps\">DOM</span> element, Array of <span class=\"caps\">DOM</span> elements or collection</p>"},"type":"desc"},{"attributes":{},"type":"types","children":[{"attributes":{"type":"String"},"type":"entry"},{"attributes":{"type":"Element"},"type":"entry"},{"attributes":{"type":"Element","dimensions":1},"type":"entry"},{"attributes":{"type":"qxWeb"},"type":"entry"}]}]},{"attributes":{"name":"callback"},"type":"param","children":[{"attributes":{"text":"<p>function to remove</p>"},"type":"desc"},{"attributes":{},"type":"types","children":[{"attributes":{"type":"Function"},"type":"entry"}]}]},{"attributes":{"optional":true,"name":"context"},"type":"param","children":[{"attributes":{"text":"<p>optional context object to remove</p>"},"type":"desc"},{"attributes":{},"type":"types","children":[{"attributes":{"type":"Object"},"type":"entry"}]}]}]},{"attributes":{"text":"<p>Removes a listener for the given type and selector check.</p>"},"type":"desc"},{"attributes":{"targetMethod":"","targetClass":"qxWeb","sourceMethod":"offMatchTarget","sourceClass":"qx.module.Event"},"type":"attach"},{"attributes":{},"type":"return","children":[{"attributes":{"text":"<p>The collection for chaining</p>"},"type":"desc"},{"attributes":{},"type":"types","children":[{"attributes":{"type":"qxWeb"},"type":"entry"}]}]}]},{"attributes":{"isStatic":false,"group":"Core","name":"on","sourceMethod":"on","line":277,"sourceClass":"qx.module.Event"},"type":"method","children":[{"attributes":{},"type":"params","children":[{"attributes":{"name":"type"},"type":"param","children":[{"attributes":{"text":"<p>Type of the event to listen for</p>"},"type":"desc"},{"attributes":{},"type":"types","children":[{"attributes":{"type":"String"},"type":"entry"}]}]},{"attributes":{"name":"listener"},"type":"param","children":[{"attributes":{"text":"<p>Listener callback</p>"},"type":"desc"},{"attributes":{},"type":"types","children":[{"attributes":{"type":"Function"},"type":"entry"}]}]},{"attributes":{"optional":true,"name":"context"},"type":"param","children":[{"attributes":{"text":"<p>Context the callback function will be executed in. Default: The element on which the listener was registered</p>"},"type":"desc"},{"attributes":{},"type":"types","children":[{"attributes":{"type":"Object"},"type":"entry"}]}]},{"attributes":{"optional":true,"name":"useCapture"},"type":"param","children":[{"attributes":{"text":"<p>Attach the listener to the capturing phase if true</p>"},"type":"desc"},{"attributes":{},"type":"types","children":[{"attributes":{"type":"Boolean"},"type":"entry"}]}]}]},{"attributes":{"text":"<p>Registers a listener for the given event type on each item in the\ncollection. This can be either native or custom events.</p>"},"type":"desc"},{"attributes":{"targetMethod":"","targetClass":"qxWeb","sourceMethod":"on","sourceClass":"qx.module.Event"},"type":"attach"},{"attributes":{},"type":"return","children":[{"attributes":{"text":"<p>The collection for chaining</p>"},"type":"desc"},{"attributes":{},"type":"types","children":[{"attributes":{"type":"qxWeb"},"type":"entry"}]}]}]},{"attributes":{"isStatic":false,"group":"Core","name":"onMatchTarget","sourceMethod":"onMatchTarget","line":628,"sourceClass":"qx.module.Event"},"type":"method","children":[{"attributes":{},"type":"params","children":[{"attributes":{"name":"eventType"},"type":"param","children":[{"attributes":{"text":"<p>name of the event to watch out for (attached to the document object)</p>"},"type":"desc"},{"attributes":{},"type":"types","children":[{"attributes":{"type":"String"},"type":"entry"}]}]},{"attributes":{"name":"target"},"type":"param","children":[{"attributes":{"text":"<p>Selector expression, <span class=\"caps\">DOM</span> element, Array of <span class=\"caps\">DOM</span> elements or collection</p>"},"type":"desc"},{"attributes":{},"type":"types","children":[{"attributes":{"type":"String"},"type":"entry"},{"attributes":{"type":"Element"},"type":"entry"},{"attributes":{"type":"Element","dimensions":1},"type":"entry"},{"attributes":{"type":"qxWeb"},"type":"entry"}]}]},{"attributes":{"name":"callback"},"type":"param","children":[{"attributes":{"text":"<p>function to call if the selector matches. The callback will get the target as qxWeb collection and the event as arguments</p>"},"type":"desc"},{"attributes":{},"type":"types","children":[{"attributes":{"type":"Function"},"type":"entry"}]}]},{"attributes":{"optional":true,"name":"context"},"type":"param","children":[{"attributes":{"text":"<p>optional context object to call the callback</p>"},"type":"desc"},{"attributes":{},"type":"types","children":[{"attributes":{"type":"Object"},"type":"entry"}]}]}]},{"attributes":{"text":"<p>Adds a listener for the given type and checks if the target fulfills the selector check.\nIf the check is successful the callback is executed with the target and event as arguments.</p>"},"type":"desc"},{"attributes":{"targetMethod":"","targetClass":"qxWeb","sourceMethod":"onMatchTarget","sourceClass":"qx.module.Event"},"type":"attach"},{"attributes":{},"type":"return","children":[{"attributes":{"text":"<p>The collection for chaining</p>"},"type":"desc"},{"attributes":{},"type":"types","children":[{"attributes":{"type":"qxWeb"},"type":"entry"}]}]}]},{"attributes":{"isStatic":false,"group":"Core","name":"once","sourceMethod":"once","line":479,"sourceClass":"qx.module.Event"},"type":"method","children":[{"attributes":{},"type":"params","children":[{"attributes":{"name":"type"},"type":"param","children":[{"attributes":{"text":"<p>Type of the event to listen for</p>"},"type":"desc"},{"attributes":{},"type":"types","children":[{"attributes":{"type":"String"},"type":"entry"}]}]},{"attributes":{"name":"listener"},"type":"param","children":[{"attributes":{"text":"<p>Listener callback</p>"},"type":"desc"},{"attributes":{},"type":"types","children":[{"attributes":{"type":"Function"},"type":"entry"}]}]},{"attributes":{"optional":true,"name":"context"},"type":"param","children":[{"attributes":{"text":"<p>Context the callback function will be executed in. Default: The element on which the listener was registered</p>"},"type":"desc"},{"attributes":{},"type":"types","children":[{"attributes":{"type":"Object"},"type":"entry"}]}]}]},{"attributes":{"text":"<p>Attaches a listener for the given event that will be executed only once.</p>"},"type":"desc"},{"attributes":{"targetMethod":"","targetClass":"qxWeb","sourceMethod":"once","sourceClass":"qx.module.Event"},"type":"attach"},{"attributes":{},"type":"return","children":[{"attributes":{"text":"<p>The collection for chaining</p>"},"type":"desc"},{"attributes":{},"type":"types","children":[{"attributes":{"type":"qxWeb"},"type":"entry"}]}]}]}],"fileName":"qx.module.Event","group":"Core","desc":"<p>Support for native and custom events.</p>","events":[]},"util.String":{"static":[{"attributes":{"isStatic":true,"group":"Utilities","name":"camelCase","sourceMethod":"camelCase","line":34,"sourceClass":"qx.module.util.String"},"type":"method","children":[{"attributes":{},"type":"params","children":[{"attributes":{"name":"str"},"type":"param","children":[{"attributes":{"text":"<p>hyphenated string</p>"},"type":"desc"},{"attributes":{},"type":"types","children":[{"attributes":{"type":"String"},"type":"entry"}]}]}]},{"attributes":{"text":"<p>Converts a hyphenated string (separated by &#8217;-&#8217;) to camel case.</p>"},"type":"desc"},{"attributes":{"targetMethod":"string.camelCase","targetClass":"qxWeb","sourceMethod":"camelCase","sourceClass":"qx.module.util.String"},"type":"attachStatic"},{"attributes":{},"type":"return","children":[{"attributes":{"text":"<p>camelcase string</p>"},"type":"desc"},{"attributes":{},"type":"types","children":[{"attributes":{"type":"String"},"type":"entry"}]}]}]},{"attributes":{"isStatic":true,"group":"Utilities","name":"endsWith","sourceMethod":"endsWith","line":96,"sourceClass":"qx.module.util.String"},"type":"method","children":[{"attributes":{},"type":"params","children":[{"attributes":{"name":"fullstr"},"type":"param","children":[{"attributes":{"text":"<p>the string to search in</p>"},"type":"desc"},{"attributes":{},"type":"types","children":[{"attributes":{"type":"String"},"type":"entry"}]}]},{"attributes":{"name":"substr"},"type":"param","children":[{"attributes":{"text":"<p>the substring to look for</p>"},"type":"desc"},{"attributes":{},"type":"types","children":[{"attributes":{"type":"String"},"type":"entry"}]}]}]},{"attributes":{"text":"<p>Check whether the string ends with the given substring.</p>"},"type":"desc"},{"attributes":{"targetMethod":"string.endsWith","targetClass":"qxWeb","sourceMethod":"endsWith","sourceClass":"qx.module.util.String"},"type":"attachStatic"},{"attributes":{},"type":"return","children":[{"attributes":{"text":"<p>whether the string ends with the given substring</p>"},"type":"desc"},{"attributes":{},"type":"types","children":[{"attributes":{"type":"Boolean"},"type":"entry"}]}]}]},{"attributes":{"isStatic":true,"group":"Utilities","name":"escapeHtml","sourceMethod":"escapeHtml","line":1,"sourceClass":"qx.module.util.String"},"type":"method","children":[{"attributes":{},"type":"params","children":[{"attributes":{"name":"str"},"type":"param","children":[{"attributes":{"text":"<p>the String to escape</p>"},"type":"desc"},{"attributes":{},"type":"types","children":[{"attributes":{"type":"String"},"type":"entry"}]}]}]},{"attributes":{"text":"<p>Escapes the characters in a <code>String</code> using <span class=\"caps\">HTML</span> entities.\nSupports all known <span class=\"caps\">HTML</span> 4.0 entities, including funky accents.</p>"},"type":"desc"},{"attributes":{"targetMethod":"string.escapeHtml","targetClass":"qxWeb","sourceMethod":"escapeHtml","sourceClass":"qx.module.util.String"},"type":"attachStatic"},{"attributes":{},"type":"return","children":[{"attributes":{"text":"<p>a new escaped String</p>"},"type":"desc"},{"attributes":{},"type":"types","children":[{"attributes":{"type":"String"},"type":"entry"}]}]}]},{"attributes":{"isStatic":true,"group":"Utilities","name":"escapeRegexpChars","sourceMethod":"escapeRegexpChars","line":1,"sourceClass":"qx.module.util.String"},"type":"method","children":[{"attributes":{},"type":"params","children":[{"attributes":{"name":"str"},"type":"param","children":[{"attributes":{"text":"<p>the string where to escape the chars.</p>"},"type":"desc"},{"attributes":{},"type":"types","children":[{"attributes":{"type":"String"},"type":"entry"}]}]}]},{"attributes":{"text":"<p>Escapes all chars that have a special meaning in regular expressions.</p>"},"type":"desc"},{"attributes":{"targetMethod":"string.escapeRegexpChars","targetClass":"qxWeb","sourceMethod":"escapeRegexpChars","sourceClass":"qx.module.util.String"},"type":"attachStatic"},{"attributes":{},"type":"return","children":[{"attributes":{"text":"<p>the string with the escaped chars.</p>"},"type":"desc"},{"attributes":{},"type":"types","children":[{"attributes":{"type":"String"},"type":"entry"}]}]}]},{"attributes":{"isStatic":true,"group":"Utilities","name":"firstLow","sourceMethod":"firstLow","line":1,"sourceClass":"qx.module.util.String"},"type":"method","children":[{"attributes":{},"type":"params","children":[{"attributes":{"name":"str"},"type":"param","children":[{"attributes":{"text":"<p>the string</p>"},"type":"desc"},{"attributes":{},"type":"types","children":[{"attributes":{"type":"String"},"type":"entry"}]}]}]},{"attributes":{"text":"<p>Convert the first character of the string to lower case.</p>"},"type":"desc"},{"attributes":{"targetMethod":"string.firstLow","targetClass":"qxWeb","sourceMethod":"firstLow","sourceClass":"qx.module.util.String"},"type":"attachStatic"},{"attributes":{},"type":"return","children":[{"attributes":{"text":"<p>the string with a lower case first character</p>"},"type":"desc"},{"attributes":{},"type":"types","children":[{"attributes":{"type":"String"},"type":"entry"}]}]}]},{"attributes":{"isStatic":true,"group":"Utilities","name":"firstUp","sourceMethod":"firstUp","line":1,"sourceClass":"qx.module.util.String"},"type":"method","children":[{"attributes":{},"type":"params","children":[{"attributes":{"name":"str"},"type":"param","children":[{"attributes":{"text":"<p>the string</p>"},"type":"desc"},{"attributes":{},"type":"types","children":[{"attributes":{"type":"String"},"type":"entry"}]}]}]},{"attributes":{"text":"<p>Convert the first character of the string to upper case.</p>"},"type":"desc"},{"attributes":{"targetMethod":"string.firstUp","targetClass":"qxWeb","sourceMethod":"firstUp","sourceClass":"qx.module.util.String"},"type":"attachStatic"},{"attributes":{},"type":"return","children":[{"attributes":{"text":"<p>the string with an upper case first character</p>"},"type":"desc"},{"attributes":{},"type":"types","children":[{"attributes":{"type":"String"},"type":"entry"}]}]}]},{"attributes":{"isStatic":true,"group":"Utilities","name":"hyphenate","sourceMethod":"hyphenate","line":46,"sourceClass":"qx.module.util.String"},"type":"method","children":[{"attributes":{},"type":"params","children":[{"attributes":{"name":"str"},"type":"param","children":[{"attributes":{"text":"<p>camelcased string</p>"},"type":"desc"},{"attributes":{},"type":"types","children":[{"attributes":{"type":"String"},"type":"entry"}]}]}]},{"attributes":{"text":"<p>Converts a camelcased string to a hyphenated (separated by &#8217;-&#8217;) string.</p>"},"type":"desc"},{"attributes":{"targetMethod":"string.hyphenate","targetClass":"qxWeb","sourceMethod":"hyphenate","sourceClass":"qx.module.util.String"},"type":"attachStatic"},{"attributes":{},"type":"return","children":[{"attributes":{"text":"<p>hyphenated string</p>"},"type":"desc"},{"attributes":{},"type":"types","children":[{"attributes":{"type":"String"},"type":"entry"}]}]}]},{"attributes":{"isStatic":true,"group":"Utilities","name":"startsWith","sourceMethod":"startsWith","line":82,"sourceClass":"qx.module.util.String"},"type":"method","children":[{"attributes":{},"type":"params","children":[{"attributes":{"name":"fullstr"},"type":"param","children":[{"attributes":{"text":"<p>the string to search in</p>"},"type":"desc"},{"attributes":{},"type":"types","children":[{"attributes":{"type":"String"},"type":"entry"}]}]},{"attributes":{"name":"substr"},"type":"param","children":[{"attributes":{"text":"<p>the substring to look for</p>"},"type":"desc"},{"attributes":{},"type":"types","children":[{"attributes":{"type":"String"},"type":"entry"}]}]}]},{"attributes":{"text":"<p>Check whether the string starts with the given substring.</p>"},"type":"desc"},{"attributes":{"targetMethod":"string.startsWith","targetClass":"qxWeb","sourceMethod":"startsWith","sourceClass":"qx.module.util.String"},"type":"attachStatic"},{"attributes":{},"type":"return","children":[{"attributes":{"text":"<p>whether the string starts with the given substring</p>"},"type":"desc"},{"attributes":{},"type":"types","children":[{"attributes":{"type":"Boolean"},"type":"entry"}]}]}]}],"member":[],"fileName":"qx.module.util.String","group":"Utilities","desc":"<p>Utility module to give some support to work with strings.</p>\n\n<p><strong>Info:</strong> The</p>\n\n<pre class=\"javascript\">trim</pre>\n\n<p>method is available as <a href=\"#String\">Polyfill</a>.</p>","events":[]},"Environment":{"static":[{"attributes":{"isStatic":true,"group":"Core","name":"add","sourceMethod":"add","line":62,"sourceClass":"qx.module.Environment"},"type":"method","children":[{"attributes":{},"type":"params","children":[{"attributes":{"name":"key"},"type":"param","children":[{"attributes":{"text":"<p>The key to store the value for.</p>"},"type":"desc"},{"attributes":{},"type":"types","children":[{"attributes":{"type":"String"},"type":"entry"}]}]},{"attributes":{"name":"value"},"type":"param","children":[{"attributes":{"text":"<p>The value to store.</p>"},"type":"desc"},{"attributes":{},"type":"types","children":[{"attributes":{"type":"var"},"type":"entry"}]}]}]},{"attributes":{"text":"<p>Adds a new environment setting which can be queried via {@link #get}.</p>"},"type":"desc"},{"attributes":{"targetMethod":"env.add","targetClass":"qxWeb","sourceMethod":"add","sourceClass":"qx.module.Environment"},"type":"attachStatic"},{"attributes":{},"type":"return","children":[{"attributes":{"text":"<p>The collection for chaining.</p>"},"type":"desc"},{"attributes":{},"type":"types","children":[{"attributes":{"type":"qxWeb"},"type":"entry"}]}]}]},{"attributes":{"isStatic":true,"group":"Core","name":"get","sourceMethod":"get","line":50,"sourceClass":"qx.module.Environment"},"type":"method","children":[{"attributes":{},"type":"params","children":[{"attributes":{"name":"key"},"type":"param","children":[{"attributes":{"text":"<p>The key to check for.</p>"},"type":"desc"},{"attributes":{},"type":"types","children":[{"attributes":{"type":"String"},"type":"entry"}]}]}]},{"attributes":{"text":"<p>Get the value stored for the given key.</p>"},"type":"desc"},{"attributes":{"targetMethod":"env.get","targetClass":"qxWeb","sourceMethod":"get","sourceClass":"qx.module.Environment"},"type":"attachStatic"},{"attributes":{},"type":"return","children":[{"attributes":{"text":"<p>The value stored for the given key.</p>"},"type":"desc"},{"attributes":{},"type":"types","children":[{"attributes":{"type":"var"},"type":"entry"}]}]}]}],"member":[],"fileName":"qx.module.Environment","group":"Core","desc":"<p>Module for querying information about the environment / runtime.\nIt adds a static key <code>env</code> to qxWeb and offers the given methods.</p>\n\n<p>The following values are predefined:</p>\n\n<ul>\n<li><code>browser.name</code> : The name of the browser</li>\n<li><code>browser.version</code> : The version of the browser</li>\n<li><code>browser.quirksmode</code>  : <code>true</code> if the browser is in quirksmode</li>\n<li><code>browser.documentmode</code> : The document mode of the browser</li>\n</ul>\n\n<ul>\n<li><code>device.name</code> : The name of the device e.g. <code>iPad</code>.</li>\n<li><code>device.type</code> : Either <code>desktop</code>, <code>tablet</code> or <code>mobile</code>.</li>\n</ul>\n\n<ul>\n<li><code>engine.name</code> : The name of the browser engine</li>\n<li><code>engine.version</code> : The version of the browser engine</li>\n</ul>\n\n<ul>\n<li><code>event.touch</code> : Checks if touch events are supported</li>\n<li><code>event.mspointer</code> : Checks if MSPointer events are available</li>\n</ul>","events":[]},"Widget":{"static":[{"attributes":{"isStatic":true,"group":"Widget","name":"initWidgets","sourceMethod":"initWidgets","line":74,"sourceClass":"qx.ui.website.Widget"},"type":"method","children":[{"attributes":{},"type":"params","children":[{"attributes":{"optional":true,"name":"selector"},"type":"param","children":[{"attributes":{"text":"<p>Optional selector expression or filter function to restrict the list of elements</p>"},"type":"desc"},{"attributes":{},"type":"types","children":[{"attributes":{"type":"String"},"type":"entry"}]}]}]},{"attributes":{"text":"<p>Fetches elements with a data attribute named <code>data-qx-class</code>\ncontaining the class name of the desired widget and initializes them as\nwidgets.</p>"},"type":"desc"},{"attributes":{"targetMethod":"","targetClass":"qxWeb","sourceMethod":"initWidgets","sourceClass":"qx.ui.website.Widget"},"type":"attachStatic"}]}],"member":[{"attributes":{"isStatic":false,"group":"Widget","name":"toWidgetCollection","sourceMethod":"toWidgetCollection","line":93,"sourceClass":"qx.ui.website.Widget","prefixedMethodName":".toWidgetCollection"},"type":"method","children":[{"attributes":{"text":"<p>Returns a wrapper Array that maps the widget <span class=\"caps\">API</span> available on\nthe first item in the current collection to all items in the\ncollection.</p>"},"type":"desc"},{"attributes":{"targetMethod":"","targetClass":"qxWeb","sourceMethod":"toWidgetCollection","sourceClass":"qx.ui.website.Widget"},"type":"attach"},{"attributes":{},"type":"return","children":[{"attributes":{"text":"<p>Collection of widgets</p>"},"type":"desc"},{"attributes":{},"type":"types","children":[{"attributes":{"type":"qxWeb","dimensions":1},"type":"entry"}]}]}]},{"attributes":{"isStatic":false,"group":"Widget","name":"widget","sourceMethod":"widget","line":46,"sourceClass":"qx.ui.website.Widget","prefixedMethodName":".widget"},"type":"method","children":[{"attributes":{"text":"<p>Factory method for the widget which converts a standard\ncollection into a collection of widgets.</p>"},"type":"desc"},{"attributes":{},"type":"return","children":[{"attributes":{"text":"<p>A widget.</p>"},"type":"desc"},{"attributes":{},"type":"types","children":[{"attributes":{"type":"qx.ui.website.Widget"},"type":"entry"}]}]},{"attributes":{"targetMethod":"","targetClass":"qxWeb","sourceMethod":"widget","sourceClass":"qx.ui.website.Widget"},"type":"attach"}]},{"attributes":{"line":319,"name":"dispose","prefixedMethodName":"widget.dispose"},"type":"method","children":[{"attributes":{"text":"<p>Dispose the widget, making sure all objects are ready for\ngarbage collection. This mainly means deleting connections to the\n<span class=\"caps\">DOM</span> including event listeners.</p>"},"type":"desc"},{"attributes":{},"type":"return","children":[{"attributes":{"text":"<p>Plain qxWeb collection</p>"},"type":"desc"},{"attributes":{},"type":"types","children":[{"attributes":{"type":"qxWeb"},"type":"entry"}]}]}]},{"attributes":{"line":255,"name":"getConfig","prefixedMethodName":"widget.getConfig"},"type":"method","children":[{"attributes":{},"type":"params","children":[{"attributes":{"name":"name"},"type":"param","children":[{"attributes":{"text":"<p>The name of the config.</p>"},"type":"desc"},{"attributes":{},"type":"types","children":[{"attributes":{"type":"String"},"type":"entry"}]}]}]},{"attributes":{"text":"<p>Returns the config setting currently in use for the given widget.\nThis can either be the user set config value, the value set in\nthe markup via data-attribute, the widgets default config value or\n<code>undefined</code>, if non is set.</p>"},"type":"desc"},{"attributes":{},"type":"return","children":[{"attributes":{"text":"<p>The value of the config or <code>undefined</code>.</p>"},"type":"desc"},{"attributes":{},"type":"types","children":[{"attributes":{"type":"var"},"type":"entry"}]}]}]},{"attributes":{"line":145,"name":"getCssPrefix","prefixedMethodName":"widget.getCssPrefix"},"type":"method","children":[{"attributes":{"text":"<p>Return the proper <span class=\"caps\">CSS</span> prefix for the current widget. This prefix is\nbased on the current classname.</p>"},"type":"desc"},{"attributes":{},"type":"return","children":[{"attributes":{"text":"<p>The <span class=\"caps\">CSS</span> prefix for the current object.</p>"},"type":"desc"},{"attributes":{},"type":"types","children":[{"attributes":{"type":"String"},"type":"entry"}]}]}]},{"attributes":{"line":174,"name":"getEnabled","prefixedMethodName":"widget.getEnabled"},"type":"method","children":[{"attributes":{"text":"<p>Returns weather the first widget in the collection is enabled or not.</p>"},"type":"desc"},{"attributes":{},"type":"return","children":[{"attributes":{"text":"<p>The enabled state of the collection.</p>"},"type":"desc"},{"attributes":{},"type":"types","children":[{"attributes":{"type":"Boolean"},"type":"entry"}]}]}]},{"attributes":{"line":241,"name":"getTemplate","prefixedMethodName":"widget.getTemplate"},"type":"method","children":[{"attributes":{},"type":"params","children":[{"attributes":{"name":"name"},"type":"param","children":[{"attributes":{"text":"<p>The name of the template.</p>"},"type":"desc"},{"attributes":{},"type":"types","children":[{"attributes":{"type":"String"},"type":"entry"}]}]}]},{"attributes":{"text":"<p>Returns the used template. This includes custom templates\nas the default templates defined by the widgets.</p>"},"type":"desc"},{"attributes":{},"type":"return","children":[{"attributes":{"text":"<p>The template string or <code>undefined</code>.</p>"},"type":"desc"},{"attributes":{},"type":"types","children":[{"attributes":{"type":"String"},"type":"entry"}]}]}]},{"attributes":{"line":124,"name":"init","prefixedMethodName":"widget.init"},"type":"method","children":[{"attributes":{"text":"<p>Responsible for initializing of the widget. This checks for the data attribute\nnamed <code>data-qx-class</code> and initializes the widget if necessary.</p>"},"type":"desc"},{"attributes":{},"type":"return","children":[{"attributes":{"text":"<code>true</code> if the widget has been initialized"},"type":"desc"},{"attributes":{},"type":"types","children":[{"attributes":{"type":"Boolean"},"type":"entry"}]}]}]},{"attributes":{"line":307,"name":"render","prefixedMethodName":"widget.render"},"type":"method","children":[{"attributes":{"text":"<p>The render method is responsible for applying changed config\nand template settings. This method is usually overridden and specified\nby the subclassing widgets like the slider or tabs.</p>"},"type":"desc"},{"attributes":{},"type":"return","children":[{"attributes":{"text":"<p>The widget collection for chaining.</p>"},"type":"desc"},{"attributes":{},"type":"types","children":[{"attributes":{"type":"qx.ui.website.Widget"},"type":"entry"}]}]}]},{"attributes":{"line":211,"name":"setConfig","prefixedMethodName":"widget.setConfig"},"type":"method","children":[{"attributes":{},"type":"params","children":[{"attributes":{"name":"name"},"type":"param","children":[{"attributes":{"text":"<p>The name of the config setting.</p>"},"type":"desc"},{"attributes":{},"type":"types","children":[{"attributes":{"type":"String"},"type":"entry"}]}]},{"attributes":{"name":"config"},"type":"param","children":[{"attributes":{"text":"<p>The value of the config setting.</p>"},"type":"desc"},{"attributes":{},"type":"types","children":[{"attributes":{"type":"var"},"type":"entry"}]}]}]},{"attributes":{"text":"<p>Setter for the widget-specific config. The available config settings can\nbe found in the documentation of the corresponding widget. Each config\nsetting can be set in the markup as data-attribute, prefixed with\n<code>data-qx</code> e.g. <code>data-qx-length=&#8220;5&#8221;</code>.</p>\n\n<p>Please keep in mind to call {@link #render} after you change any\ntemplate or config setting.</p>"},"type":"desc"},{"attributes":{},"type":"return","children":[{"attributes":{"text":"<p>The widget instance for chaining.</p>"},"type":"desc"},{"attributes":{},"type":"types","children":[{"attributes":{"type":"qx.ui.website.Widget"},"type":"entry"}]}]}]},{"attributes":{"line":162,"name":"setEnabled","prefixedMethodName":"widget.setEnabled"},"type":"method","children":[{"attributes":{},"type":"params","children":[{"attributes":{"name":"value"},"type":"param","children":[{"attributes":{"text":"<p>The enabled value.</p>"},"type":"desc"},{"attributes":{},"type":"types","children":[{"attributes":{"type":"Boolean"},"type":"entry"}]}]}]},{"attributes":{"text":"<p>Changes the enabled state of the current collection, which means all\nwidgets in the collection. This sets the disabled attribute on the\nelements and all its children.</p>"},"type":"desc"},{"attributes":{},"type":"return","children":[{"attributes":{"text":"<p>The collection for chaining</p>"},"type":"desc"},{"attributes":{},"type":"types","children":[{"attributes":{"type":"qx.ui.website.Widget"},"type":"entry"}]}]}]},{"attributes":{"line":193,"name":"setTemplate","prefixedMethodName":"widget.setTemplate"},"type":"method","children":[{"attributes":{},"type":"params","children":[{"attributes":{"name":"name"},"type":"param","children":[{"attributes":{"text":"<p>The name of the template.</p>"},"type":"desc"},{"attributes":{},"type":"types","children":[{"attributes":{"type":"String"},"type":"entry"}]}]},{"attributes":{"name":"template"},"type":"param","children":[{"attributes":{"text":"<p>The template string.</p>"},"type":"desc"},{"attributes":{},"type":"types","children":[{"attributes":{"type":"String"},"type":"entry"}]}]}]},{"attributes":{"text":"<p>Setter for the widget-specific templates. The available templates can\nbe found in the documentation of the corresponding widget. The templates\nwill be rendered using\n<a href=\"https://github.com/janl/mustache.js/\">mustache.js</a>.</p>\n\n<p>Please keep in mind to call {@link #render} after you change any\ntemplate or config setting.</p>"},"type":"desc"},{"attributes":{},"type":"return","children":[{"attributes":{"text":"<p>The widget instance for chaining.</p>"},"type":"desc"},{"attributes":{},"type":"types","children":[{"attributes":{"type":"qx.ui.website.Widget"},"type":"entry"}]}]}]}],"fileName":"qx.ui.website.Widget","events":[],"desc":"<p>This is the base collection for all widgets and offers a good foundation\nfor all widgets including enabled state handling, config and template storage\nand event handling to name a few key features.</p>","superClass":"qxWeb","group":"Widget"},"Messaging":{"static":[{"attributes":{"line":1,"sourceMethod":"emit","isStatic":true,"sourceClass":"qx.module.Messaging","name":"emit"},"type":"method","children":[{"attributes":{},"type":"params","children":[{"attributes":{"name":"channel"},"type":"param","children":[{"attributes":{"text":"<p>The channel of the message.</p>"},"type":"desc"},{"attributes":{},"type":"types","children":[{"attributes":{"type":"String"},"type":"entry"}]}]},{"attributes":{"name":"path"},"type":"param","children":[{"attributes":{"text":"<p>The path to execute</p>"},"type":"desc"},{"attributes":{},"type":"types","children":[{"attributes":{"type":"String"},"type":"entry"}]}]},{"attributes":{"name":"params"},"type":"param","children":[{"attributes":{"text":"<p>The given parameters that should be propagated</p>"},"type":"desc"},{"attributes":{},"type":"types","children":[{"attributes":{"type":"Map"},"type":"entry"}]}]},{"attributes":{"name":"customData"},"type":"param","children":[{"attributes":{"text":"<p>The given custom data that should be propagated</p>"},"type":"desc"},{"attributes":{},"type":"types","children":[{"attributes":{"type":"var"},"type":"entry"}]}]}]},{"attributes":{"text":"<p>Sends a message on the given channel and informs all matching route handlers.</p>"},"type":"desc"},{"attributes":{"targetMethod":"messaging.emit","targetClass":"qxWeb","sourceMethod":"emit","sourceClass":"qx.module.Messaging"},"type":"attachStatic"}]},{"attributes":{"line":1,"sourceMethod":"on","isStatic":true,"sourceClass":"qx.module.Messaging","name":"on"},"type":"method","children":[{"attributes":{},"type":"params","children":[{"attributes":{"name":"channel"},"type":"param","children":[{"attributes":{"text":"<p>The channel of the message.</p>"},"type":"desc"},{"attributes":{},"type":"types","children":[{"attributes":{"type":"String"},"type":"entry"}]}]},{"attributes":{"name":"type"},"type":"param","children":[{"attributes":{"text":"<p>The type, used for checking if the executed path matches.</p>"},"type":"desc"},{"attributes":{},"type":"types","children":[{"attributes":{"type":"String"},"type":"entry"},{"attributes":{"type":"RegExp"},"type":"entry"}]}]},{"attributes":{"name":"handler"},"type":"param","children":[{"attributes":{"text":"<p>The handler to call if the route matches the executed path.</p>"},"type":"desc"},{"attributes":{},"type":"types","children":[{"attributes":{"type":"Function"},"type":"entry"}]}]},{"attributes":{"defaultValue":"null","optional":true,"name":"scope"},"type":"param","children":[{"attributes":{"text":"<p>The scope of the handler.</p>"},"type":"desc"},{"attributes":{},"type":"types","children":[{"attributes":{"type":"var"},"type":"entry"}]}]}]},{"attributes":{"text":"<p>Adds a route handler for the given channel. The route is called\nif the {@link #emit} method finds a match.</p>"},"type":"desc"},{"attributes":{"targetMethod":"messaging.on","targetClass":"qxWeb","sourceMethod":"on","sourceClass":"qx.module.Messaging"},"type":"attachStatic"},{"attributes":{},"type":"return","children":[{"attributes":{"text":"<p>The id of the route used to remove the route.</p>"},"type":"desc"},{"attributes":{},"type":"types","children":[{"attributes":{"type":"String"},"type":"entry"}]}]}]},{"attributes":{"line":1,"sourceMethod":"onAny","isStatic":true,"sourceClass":"qx.module.Messaging","name":"onAny"},"type":"method","children":[{"attributes":{},"type":"params","children":[{"attributes":{"name":"type"},"type":"param","children":[{"attributes":{"text":"<p>The route, used for checking if the executed path matches</p>"},"type":"desc"},{"attributes":{},"type":"types","children":[{"attributes":{"type":"String"},"type":"entry"},{"attributes":{"type":"RegExp"},"type":"entry"}]}]},{"attributes":{"name":"handler"},"type":"param","children":[{"attributes":{"text":"<p>The handler to call if the route matches the executed path</p>"},"type":"desc"},{"attributes":{},"type":"types","children":[{"attributes":{"type":"Function"},"type":"entry"}]}]},{"attributes":{"defaultValue":"null","optional":true,"name":"scope"},"type":"param","children":[{"attributes":{"text":"<p>The scope of the handler.</p>"},"type":"desc"},{"attributes":{},"type":"types","children":[{"attributes":{"type":"var"},"type":"entry"}]}]}]},{"attributes":{"text":"<p>Adds a handler for the &#8220;any&#8221; channel. The &#8220;any&#8221; channel is called\nbefore all other channels.</p>"},"type":"desc"},{"attributes":{"targetMethod":"messaging.onAny","targetClass":"qxWeb","sourceMethod":"onAny","sourceClass":"qx.module.Messaging"},"type":"attachStatic"},{"attributes":{},"type":"return","children":[{"attributes":{"text":"<p>The id of the route used to remove the route.</p>"},"type":"desc"},{"attributes":{},"type":"types","children":[{"attributes":{"type":"String"},"type":"entry"}]}]}]},{"attributes":{"line":1,"sourceMethod":"remove","isStatic":true,"sourceClass":"qx.module.Messaging","name":"remove"},"type":"method","children":[{"attributes":{},"type":"params","children":[{"attributes":{"name":"id"},"type":"param","children":[{"attributes":{"text":"<p>The id of the registered listener.</p>"},"type":"desc"},{"attributes":{},"type":"types","children":[{"attributes":{"type":"String"},"type":"entry"}]}]}]},{"attributes":{"text":"<p>Removes a registered listener by the given id.</p>"},"type":"desc"},{"attributes":{"targetMethod":"messaging.remove","targetClass":"qxWeb","sourceMethod":"remove","sourceClass":"qx.module.Messaging"},"type":"attachStatic"}]}],"member":[],"fileName":"qx.module.Messaging","group":"Extras","desc":"<p>Define messages to react on certain channels.</p>\n\n<p>The channel names will be used in the q.messaging.on method to define handlers which will\nbe called on certain channels and routes. The q.messaging.emit method can be used\nto execute a given route on a channel. q.messaging.onAny defines a handler on any channel.</p>","events":[]},"dev.FakeServer":{"static":[{"attributes":{"isStatic":true,"group":"IO","name":"addFilter","sourceMethod":"addFilter","line":85,"sourceClass":"qx.module.dev.FakeServer"},"type":"method","children":[{"attributes":{},"type":"params","children":[{"attributes":{"name":"filter"},"type":"param","children":[{"attributes":{"text":"<p><span class=\"caps\">URL</span> filter function. Will be called with the following arguments: <code>method</code>, <code>url</code>, <code>async</code>, <code>username</code>, <code>password</code>. Must return <code>true</code> if the request should not be faked.</p>"},"type":"desc"},{"attributes":{},"type":"types","children":[{"attributes":{"type":"Function"},"type":"entry"}]}]}]},{"attributes":{"text":"<p>Adds a <span class=\"caps\">URL</span> filtering function to decide whether a request should be handled\nby the FakeServer or passed to the regular XMLHttp implementation.\nSee <a href=\"http://sinonjs.org/docs/#filtered-requests\">Sinon.JS: Filtered Requests</a>\nfor details.</p>"},"type":"desc"},{"attributes":{"targetMethod":"dev.fakeServer.addFilter","targetClass":"qxWeb","sourceMethod":"addFilter","sourceClass":"qx.module.dev.FakeServer"},"type":"attachStatic"}]},{"attributes":{"isStatic":true,"group":"IO","name":"configure","sourceMethod":"configure","line":57,"sourceClass":"qx.module.dev.FakeServer"},"type":"method","children":[{"attributes":{},"type":"params","children":[{"attributes":{"name":"responseData"},"type":"param","children":[{"attributes":{"text":"<p>An array of response description maps.</p>"},"type":"desc"},{"attributes":{},"type":"types","children":[{"attributes":{"type":"Map","dimensions":1},"type":"entry"}]}]}]},{"attributes":{"text":"<p>Configures a set of fake <span class=\"caps\">HTTP</span> responses. Each response is defined as a map\nthat must provide the following keys:\n<ul>\n  <li><code>method</code> <span class=\"caps\">HTTP</span> method to respond to, e.g. <code><span class=\"caps\">PUT</span></code></li>\n  <li><code>url</code> <span class=\"caps\">URL</span> used to match requests to fake responses. Can be\n  a RegExp or a String. <span class=\"caps\">REST</span>-style parameter placeholders in curly braces\n  will be replaced with wildcards, e.g. the string &#8221;/resource/{resourceId}&#8221;\n  is interpreted as the RegExp <code>/\\/resource\\/\\{.*?\\}/</code>\n  <li><code>response</code> This can be either:\n    <ul>\n      <li>a string: This will be the response body, status code will be 200</li>\n      <li>an array containing the status code, a map of response headers and\n        the response text, e.g. <code>[200, { &#8220;Content-Type&#8221;: &#8220;text/html&#8221; }, &#8220;OK&#8221;]</code>\n      </li>\n      <li>a function: This will be called with a FakeXMLHttpRequest object as\n      the only argument. Its <code>respond</code> method must be called to send a response.\n      See <a href=\"http://sinonjs.org/docs/#respond\">Sinon.JS: Respond</a> for details.\n      </li>\n    </ul>\n  </li>\n</ul></p>"},"type":"desc"},{"attributes":{"targetMethod":"dev.fakeServer.configure","targetClass":"qxWeb","sourceMethod":"configure","sourceClass":"qx.module.dev.FakeServer"},"type":"attachStatic"}]},{"attributes":{"isStatic":true,"group":"IO","name":"getFakeServer","sourceMethod":"getFakeServer","line":121,"sourceClass":"qx.module.dev.FakeServer"},"type":"method","children":[{"attributes":{"text":"<p>Creates and configures a FakeServer if necessary and returns it.</p>"},"type":"desc"},{"attributes":{"targetMethod":"dev.fakeServer.getFakeServer","targetClass":"qxWeb","sourceMethod":"getFakeServer","sourceClass":"qx.module.dev.FakeServer"},"type":"attachStatic"},{"attributes":{},"type":"return","children":[{"attributes":{"text":"<p>FakeServer object</p>"},"type":"desc"},{"attributes":{},"type":"types","children":[{"attributes":{"type":"Object"},"type":"entry"}]}]}]},{"attributes":{"isStatic":true,"group":"IO","name":"removeFilter","sourceMethod":"removeFilter","line":96,"sourceClass":"qx.module.dev.FakeServer"},"type":"method","children":[{"attributes":{},"type":"params","children":[{"attributes":{"name":"filter"},"type":"param","children":[{"attributes":{"text":"<p>filter function to remove</p>"},"type":"desc"},{"attributes":{},"type":"types","children":[{"attributes":{"type":"Function"},"type":"entry"}]}]}]},{"attributes":{"text":"<p>Remove a filter that was added with {@link #addFilter}</p>"},"type":"desc"},{"attributes":{"targetMethod":"dev.fakeServer.removeFilter","targetClass":"qxWeb","sourceMethod":"removeFilter","sourceClass":"qx.module.dev.FakeServer"},"type":"attachStatic"}]},{"attributes":{"isStatic":true,"group":"IO","name":"removeResponse","sourceMethod":"removeResponse","line":69,"sourceClass":"qx.module.dev.FakeServer"},"type":"method","children":[{"attributes":{},"type":"params","children":[{"attributes":{"name":"method"},"type":"param","children":[{"attributes":{"text":"<p><span class=\"caps\">HTTP</span> method of the response</p>"},"type":"desc"},{"attributes":{},"type":"types","children":[{"attributes":{"type":"String"},"type":"entry"}]}]},{"attributes":{"name":"url"},"type":"param","children":[{"attributes":{"text":"<p><span class=\"caps\">URL</span> of the response</p>"},"type":"desc"},{"attributes":{},"type":"types","children":[{"attributes":{"type":"String"},"type":"entry"},{"attributes":{"type":"RegExp"},"type":"entry"}]}]}]},{"attributes":{"text":"<p>Removes a response that was configured with {@link #configure}</p>"},"type":"desc"},{"attributes":{"targetMethod":"dev.fakeServer.removeResponse","targetClass":"qxWeb","sourceMethod":"removeResponse","sourceClass":"qx.module.dev.FakeServer"},"type":"attachStatic"}]},{"attributes":{"isStatic":true,"group":"IO","name":"respondWith","sourceMethod":"respondWith","line":110,"sourceClass":"qx.module.dev.FakeServer"},"type":"method","children":[{"attributes":{},"type":"params","children":[{"attributes":{"name":"method"},"type":"param","children":[{"attributes":{"text":"<p><span class=\"caps\">HTTP</span> method to respond to, e.g. &#8220;GET&#8221;</p>"},"type":"desc"},{"attributes":{},"type":"types","children":[{"attributes":{"type":"String"},"type":"entry"}]}]},{"attributes":{"name":"urlRegExp"},"type":"param","children":[{"attributes":{"text":"<p>Request <span class=\"caps\">URL</span> must match match this expression</p>"},"type":"desc"},{"attributes":{},"type":"types","children":[{"attributes":{"type":"RegExp"},"type":"entry"}]}]},{"attributes":{"name":"response"},"type":"param","children":[{"attributes":{"text":"<p>Response to send. See <a href=\"http://sinonjs.org/docs/#fakeServer\">Sinon.JS: Fake Server</a> for details.</p>"},"type":"desc"},{"attributes":{},"type":"types","children":[{"attributes":{"type":"Function"},"type":"entry"},{"attributes":{"type":"Array"},"type":"entry"},{"attributes":{"type":"String"},"type":"entry"}]}]}]},{"attributes":{"text":"<p>Defines a fake <span class=\"caps\">XHR</span> response to a matching request.</p>"},"type":"desc"},{"attributes":{"targetMethod":"dev.fakeServer.respondWith","targetClass":"qxWeb","sourceMethod":"respondWith","sourceClass":"qx.module.dev.FakeServer"},"type":"attachStatic"}]},{"attributes":{"isStatic":true,"group":"IO","name":"restore","sourceMethod":"restore","line":131,"sourceClass":"qx.module.dev.FakeServer"},"type":"method","children":[{"attributes":{"text":"<p>Stops the FakeServer and removes all configured responses and/or filters.</p>"},"type":"desc"},{"attributes":{"targetMethod":"dev.fakeServer.restore","targetClass":"qxWeb","sourceMethod":"restore","sourceClass":"qx.module.dev.FakeServer"},"type":"attachStatic"}]}],"member":[],"fileName":"qx.module.dev.FakeServer","group":"IO","desc":"<p>A wrapper around Sinon.JS&#8217;s FakeXMLHttpRequest and FakeServer features that\nallows quick and simple configuration of mock <span class=\"caps\">HTTP</span> backends for testing and\ndevelopment.\nAutomatically creates <span class=\"caps\">URL</span> filtering rules to ensure that only configured\nrequests are faked while others will be processed normally by the browser&#8217;s\n<span class=\"caps\">XHR</span> implementation.</p>","events":[]},"Storage":{"static":[{"attributes":{"line":88,"sourceMethod":"clearLocal","isStatic":true,"sourceClass":"qx.module.Storage","name":"clearLocal"},"type":"method","children":[{"attributes":{"text":"<p>Deletes every stored item in the storage.</p>"},"type":"desc"},{"attributes":{"targetMethod":"localStorage.clear","targetClass":"qxWeb","sourceMethod":"clearLocal","sourceClass":"qx.module.Storage"},"type":"attachStatic"}]},{"attributes":{"line":102,"sourceMethod":"forEachLocal","isStatic":true,"sourceClass":"qx.module.Storage","name":"forEachLocal"},"type":"method","children":[{"attributes":{},"type":"params","children":[{"attributes":{"name":"callback"},"type":"param","children":[{"attributes":{"text":"<p>A function which will be called for every item. The function will have two arguments, first the key and second the value of the stored data.</p>"},"type":"desc"},{"attributes":{},"type":"types","children":[{"attributes":{"type":"Function"},"type":"entry"}]}]},{"attributes":{"name":"scope"},"type":"param","children":[{"attributes":{"text":"<p>The scope of the function.</p>"},"type":"desc"},{"attributes":{},"type":"types","children":[{"attributes":{"type":"var"},"type":"entry"}]}]}]},{"attributes":{"text":"<p>Helper to access every stored item.</p>"},"type":"desc"},{"attributes":{"targetMethod":"localStorage.forEach","targetClass":"qxWeb","sourceMethod":"forEachLocal","sourceClass":"qx.module.Storage"},"type":"attachStatic"}]},{"attributes":{"line":48,"sourceMethod":"getLocalItem","isStatic":true,"sourceClass":"qx.module.Storage","name":"getLocalItem"},"type":"method","children":[{"attributes":{},"type":"params","children":[{"attributes":{"name":"key"},"type":"param","children":[{"attributes":{"text":"<p>The identifier to get the data.</p>"},"type":"desc"},{"attributes":{},"type":"types","children":[{"attributes":{"type":"String"},"type":"entry"}]}]}]},{"attributes":{"text":"<p>Returns the stored item.</p>"},"type":"desc"},{"attributes":{"targetMethod":"localStorage.getItem","targetClass":"qxWeb","sourceMethod":"getLocalItem","sourceClass":"qx.module.Storage"},"type":"attachStatic"},{"attributes":{},"type":"return","children":[{"attributes":{"text":"<p>The stored data.</p>"},"type":"desc"},{"attributes":{},"type":"types","children":[{"attributes":{"type":"var"},"type":"entry"}]}]}]},{"attributes":{"line":79,"sourceMethod":"getLocalKey","isStatic":true,"sourceClass":"qx.module.Storage","name":"getLocalKey"},"type":"method","children":[{"attributes":{},"type":"params","children":[{"attributes":{"name":"index"},"type":"param","children":[{"attributes":{"text":"<p>The index in the storage.</p>"},"type":"desc"},{"attributes":{},"type":"types","children":[{"attributes":{"type":"Number"},"type":"entry"}]}]}]},{"attributes":{"text":"<p>Returns the named key at the given index.</p>"},"type":"desc"},{"attributes":{"targetMethod":"localStorage.getKey","targetClass":"qxWeb","sourceMethod":"getLocalKey","sourceClass":"qx.module.Storage"},"type":"attachStatic"},{"attributes":{},"type":"return","children":[{"attributes":{"text":"<p>The key stored at the given index.</p>"},"type":"desc"},{"attributes":{},"type":"types","children":[{"attributes":{"type":"String"},"type":"entry"}]}]}]},{"attributes":{"line":68,"sourceMethod":"getLocalLength","isStatic":true,"sourceClass":"qx.module.Storage","name":"getLocalLength"},"type":"method","children":[{"attributes":{"text":"<p>Returns the amount of key-value pairs stored.</p>"},"type":"desc"},{"attributes":{"targetMethod":"localStorage.getLength","targetClass":"qxWeb","sourceMethod":"getLocalLength","sourceClass":"qx.module.Storage"},"type":"attachStatic"},{"attributes":{},"type":"return","children":[{"attributes":{"text":"<p>The length of the storage.</p>"},"type":"desc"},{"attributes":{},"type":"types","children":[{"attributes":{"type":"Number"},"type":"entry"}]}]}]},{"attributes":{"line":58,"sourceMethod":"removeLocalItem","isStatic":true,"sourceClass":"qx.module.Storage","name":"removeLocalItem"},"type":"method","children":[{"attributes":{},"type":"params","children":[{"attributes":{"name":"key"},"type":"param","children":[{"attributes":{"text":"<p>The identifier.</p>"},"type":"desc"},{"attributes":{},"type":"types","children":[{"attributes":{"type":"String"},"type":"entry"}]}]}]},{"attributes":{"text":"<p>Removes an item form the storage.</p>"},"type":"desc"},{"attributes":{"targetMethod":"localStorage.removeItem","targetClass":"qxWeb","sourceMethod":"removeLocalItem","sourceClass":"qx.module.Storage"},"type":"attachStatic"}]},{"attributes":{"line":36,"sourceMethod":"setLocalItem","isStatic":true,"sourceClass":"qx.module.Storage","name":"setLocalItem"},"type":"method","children":[{"attributes":{},"type":"params","children":[{"attributes":{"name":"key"},"type":"param","children":[{"attributes":{"text":"<p>The identifier key.</p>"},"type":"desc"},{"attributes":{},"type":"types","children":[{"attributes":{"type":"String"},"type":"entry"}]}]},{"attributes":{"name":"value"},"type":"param","children":[{"attributes":{"text":"<p>The data, which will be stored as <span class=\"caps\">JSON</span>.</p>"},"type":"desc"},{"attributes":{},"type":"types","children":[{"attributes":{"type":"var"},"type":"entry"}]}]}]},{"attributes":{"text":"<p>Store an item in the storage.</p>"},"type":"desc"},{"attributes":{"targetMethod":"localStorage.setItem","targetClass":"qxWeb","sourceMethod":"setLocalItem","sourceClass":"qx.module.Storage"},"type":"attachStatic"}]},{"attributes":{"line":166,"sourceMethod":"clearSession","isStatic":true,"sourceClass":"qx.module.Storage","name":"clearSession"},"type":"method","children":[{"attributes":{"text":"<p>Deletes every stored item in the storage.</p>"},"type":"desc"},{"attributes":{"targetMethod":"sessionStorage.clear","targetClass":"qxWeb","sourceMethod":"clearSession","sourceClass":"qx.module.Storage"},"type":"attachStatic"}]},{"attributes":{"line":180,"sourceMethod":"forEachSession","isStatic":true,"sourceClass":"qx.module.Storage","name":"forEachSession"},"type":"method","children":[{"attributes":{},"type":"params","children":[{"attributes":{"name":"callback"},"type":"param","children":[{"attributes":{"text":"<p>A function which will be called for every item. The function will have two arguments, first the key and second the value of the stored data.</p>"},"type":"desc"},{"attributes":{},"type":"types","children":[{"attributes":{"type":"Function"},"type":"entry"}]}]},{"attributes":{"name":"scope"},"type":"param","children":[{"attributes":{"text":"<p>The scope of the function.</p>"},"type":"desc"},{"attributes":{},"type":"types","children":[{"attributes":{"type":"var"},"type":"entry"}]}]}]},{"attributes":{"text":"<p>Helper to access every stored item.</p>"},"type":"desc"},{"attributes":{"targetMethod":"sessionStorage.forEach","targetClass":"qxWeb","sourceMethod":"forEachSession","sourceClass":"qx.module.Storage"},"type":"attachStatic"}]},{"attributes":{"line":126,"sourceMethod":"getSessionItem","isStatic":true,"sourceClass":"qx.module.Storage","name":"getSessionItem"},"type":"method","children":[{"attributes":{},"type":"params","children":[{"attributes":{"name":"key"},"type":"param","children":[{"attributes":{"text":"<p>The identifier to get the data.</p>"},"type":"desc"},{"attributes":{},"type":"types","children":[{"attributes":{"type":"String"},"type":"entry"}]}]}]},{"attributes":{"text":"<p>Returns the stored item.</p>"},"type":"desc"},{"attributes":{"targetMethod":"sessionStorage.getItem","targetClass":"qxWeb","sourceMethod":"getSessionItem","sourceClass":"qx.module.Storage"},"type":"attachStatic"},{"attributes":{},"type":"return","children":[{"attributes":{"text":"<p>The stored data.</p>"},"type":"desc"},{"attributes":{},"type":"types","children":[{"attributes":{"type":"var"},"type":"entry"}]}]}]},{"attributes":{"line":157,"sourceMethod":"getSessionKey","isStatic":true,"sourceClass":"qx.module.Storage","name":"getSessionKey"},"type":"method","children":[{"attributes":{},"type":"params","children":[{"attributes":{"name":"index"},"type":"param","children":[{"attributes":{"text":"<p>The index in the storage.</p>"},"type":"desc"},{"attributes":{},"type":"types","children":[{"attributes":{"type":"Number"},"type":"entry"}]}]}]},{"attributes":{"text":"<p>Returns the named key at the given index.</p>"},"type":"desc"},{"attributes":{"targetMethod":"sessionStorage.getKey","targetClass":"qxWeb","sourceMethod":"getSessionKey","sourceClass":"qx.module.Storage"},"type":"attachStatic"},{"attributes":{},"type":"return","children":[{"attributes":{"text":"<p>The key stored at the given index.</p>"},"type":"desc"},{"attributes":{},"type":"types","children":[{"attributes":{"type":"String"},"type":"entry"}]}]}]},{"attributes":{"line":146,"sourceMethod":"getSessionLength","isStatic":true,"sourceClass":"qx.module.Storage","name":"getSessionLength"},"type":"method","children":[{"attributes":{"text":"<p>Returns the amount of key-value pairs stored.</p>"},"type":"desc"},{"attributes":{"targetMethod":"sessionStorage.getLength","targetClass":"qxWeb","sourceMethod":"getSessionLength","sourceClass":"qx.module.Storage"},"type":"attachStatic"},{"attributes":{},"type":"return","children":[{"attributes":{"text":"<p>The length of the storage.</p>"},"type":"desc"},{"attributes":{},"type":"types","children":[{"attributes":{"type":"Number"},"type":"entry"}]}]}]},{"attributes":{"line":136,"sourceMethod":"removeSessionItem","isStatic":true,"sourceClass":"qx.module.Storage","name":"removeSessionItem"},"type":"method","children":[{"attributes":{},"type":"params","children":[{"attributes":{"name":"key"},"type":"param","children":[{"attributes":{"text":"<p>The identifier.</p>"},"type":"desc"},{"attributes":{},"type":"types","children":[{"attributes":{"type":"String"},"type":"entry"}]}]}]},{"attributes":{"text":"<p>Removes an item form the storage.</p>"},"type":"desc"},{"attributes":{"targetMethod":"sessionStorage.removeItem","targetClass":"qxWeb","sourceMethod":"removeSessionItem","sourceClass":"qx.module.Storage"},"type":"attachStatic"}]},{"attributes":{"line":114,"sourceMethod":"setSessionItem","isStatic":true,"sourceClass":"qx.module.Storage","name":"setSessionItem"},"type":"method","children":[{"attributes":{},"type":"params","children":[{"attributes":{"name":"key"},"type":"param","children":[{"attributes":{"text":"<p>The identifier key.</p>"},"type":"desc"},{"attributes":{},"type":"types","children":[{"attributes":{"type":"String"},"type":"entry"}]}]},{"attributes":{"name":"value"},"type":"param","children":[{"attributes":{"text":"<p>The data, which will be stored as <span class=\"caps\">JSON</span>.</p>"},"type":"desc"},{"attributes":{},"type":"types","children":[{"attributes":{"type":"var"},"type":"entry"}]}]}]},{"attributes":{"text":"<p>Store an item in the storage.</p>"},"type":"desc"},{"attributes":{"targetMethod":"sessionStorage.setItem","targetClass":"qxWeb","sourceMethod":"setSessionItem","sourceClass":"qx.module.Storage"},"type":"attachStatic"}]}],"member":[],"fileName":"qx.module.Storage","group":"Extras","desc":"<p>This module offers a cross browser storage implementation. The <span class=\"caps\">API</span> is aligned\nwith the <span class=\"caps\">API</span> of the <span class=\"caps\">HTML</span> web storage (<a href=\"http://www.w3.org/TR/webstorage/\">http://www.w3.org/TR/webstorage/</a>) which is\nalso the preferred implementation used. As fallback for IE < 8, we use user data.\nIf both techniques are unsupported, we supply a in memory storage, which is\nof course, not persistent.</p>","events":[]},"util.Function":{"static":[{"attributes":{"isStatic":true,"group":"Utilities","name":"debounce","sourceMethod":"debounce","line":1,"sourceClass":"qx.module.util.Function"},"type":"method","children":[{"attributes":{},"type":"params","children":[{"attributes":{"name":"callback"},"type":"param","children":[{"attributes":{"text":"<p>the callback which should be executed after the given delay if the wrapper method is <strong>not</strong> called during this delay.</p>"},"type":"desc"},{"attributes":{},"type":"types","children":[{"attributes":{"type":"Function"},"type":"entry"}]}]},{"attributes":{"name":"delay"},"type":"param","children":[{"attributes":{"text":"<p>Delay in milliseconds</p>"},"type":"desc"},{"attributes":{},"type":"types","children":[{"attributes":{"type":"Number"},"type":"entry"}]}]},{"attributes":{"optional":true,"name":"immediate"},"type":"param","children":[{"attributes":{"text":"<p>whether to run the callback at the beginning and then debounce, default is <code>false</code></p>"},"type":"desc"},{"attributes":{},"type":"types","children":[{"attributes":{"type":"Boolean"},"type":"entry"}]}]}]},{"attributes":{"text":"<p>Returns a debounced version of the given callback. The execution of the callback\nis delayed by the given delay and after no events were triggered anymore.\nThis mechanism is very useful for event handling: only after a specified delay\nthe event should be handled (e.g. at keyboard input by the user) to prevent flooding\nthe handler with a large amounts of events.</p>"},"type":"desc"},{"attributes":{"targetMethod":"func.debounce","targetClass":"qxWeb","sourceMethod":"debounce","sourceClass":"qx.module.util.Function"},"type":"attachStatic"},{"attributes":{},"type":"return","children":[{"attributes":{"text":"<p>a wrapper function which <em>shields</em> the given callback function</p>"},"type":"desc"},{"attributes":{},"type":"types","children":[{"attributes":{"type":"Function"},"type":"entry"}]}]}]},{"attributes":{"isStatic":true,"group":"Utilities","name":"throttle","sourceMethod":"throttle","line":1,"sourceClass":"qx.module.util.Function"},"type":"method","children":[{"attributes":{},"type":"params","children":[{"attributes":{"name":"callback"},"type":"param","children":[{"attributes":{"text":"<p>the callback which should be executed in the given interval</p>"},"type":"desc"},{"attributes":{},"type":"types","children":[{"attributes":{"type":"Function"},"type":"entry"}]}]},{"attributes":{"name":"interval"},"type":"param","children":[{"attributes":{"text":"<p>Interval in milliseconds</p>"},"type":"desc"},{"attributes":{},"type":"types","children":[{"attributes":{"type":"Number"},"type":"entry"}]}]},{"attributes":{"name":"options"},"type":"param","children":[{"attributes":{"text":"<p>the keys are <code>leading</code> and <code>trailing</code> to control the executing of the callback precisely. Default values are <code>true</code> for both options.</p>"},"type":"desc"},{"attributes":{},"type":"types","children":[{"attributes":{"type":"Map"},"type":"entry"}]}]}]},{"attributes":{"text":"<p>Returns a throttled version of the given callback. The execution of the callback\nis throttled which means it is only executed in the given interval.\nThis mechanism is very useful for event handling: only in specified intervals\nthe event should be handled (e.g. at resize of the browser window) to prevent flooding\nthe handler with a large amounts of events.\nAs default the <code>leading</code> and <code>trailing</code> calls are executed.</p>"},"type":"desc"},{"attributes":{"targetMethod":"func.throttle","targetClass":"qxWeb","sourceMethod":"throttle","sourceClass":"qx.module.util.Function"},"type":"attachStatic"},{"attributes":{},"type":"return","children":[{"attributes":{"text":"<p>a wrapper function which <em>shields</em> the given callback function</p>"},"type":"desc"},{"attributes":{},"type":"types","children":[{"attributes":{"type":"Function"},"type":"entry"}]}]}]}],"member":[],"fileName":"qx.module.util.Function","group":"Utilities","desc":"<p>Utility module to give some support to work with functions.</p>","events":[]},"util.Object":{"static":[{"attributes":{"isStatic":true,"group":"Utilities","name":"clone","sourceMethod":"clone","line":1,"sourceClass":"qx.module.util.Object"},"type":"method","children":[{"attributes":{},"type":"params","children":[{"attributes":{"name":"source"},"type":"param","children":[{"attributes":{"text":"<p>Object to copy</p>"},"type":"desc"},{"attributes":{},"type":"types","children":[{"attributes":{"type":"Object"},"type":"entry"}]}]},{"attributes":{"name":"deep"},"type":"param","children":[{"attributes":{"text":"<p>If the clone should be a deep clone.</p>"},"type":"desc"},{"attributes":{},"type":"types","children":[{"attributes":{"type":"Boolean"},"type":"entry"}]}]}]},{"attributes":{"text":"<p>Return a copy of an Object</p>"},"type":"desc"},{"attributes":{"targetMethod":"object.clone","targetClass":"qxWeb","sourceMethod":"clone","sourceClass":"qx.module.util.Object"},"type":"attachStatic"},{"attributes":{},"type":"return","children":[{"attributes":{"text":"<p>A copy of the object</p>"},"type":"desc"},{"attributes":{},"type":"types","children":[{"attributes":{"type":"Object"},"type":"entry"}]}]}]},{"attributes":{"isStatic":true,"group":"Utilities","name":"contains","sourceMethod":"contains","line":1,"sourceClass":"qx.module.util.Object"},"type":"method","children":[{"attributes":{},"type":"params","children":[{"attributes":{"name":"map"},"type":"param","children":[{"attributes":{"text":"<p>Map to search for the value</p>"},"type":"desc"},{"attributes":{},"type":"types","children":[{"attributes":{"type":"Object"},"type":"entry"}]}]},{"attributes":{"name":"value"},"type":"param","children":[{"attributes":{"text":"<p>Value to look for</p>"},"type":"desc"},{"attributes":{},"type":"types","children":[{"attributes":{"type":"var"},"type":"entry"}]}]}]},{"attributes":{"text":"<p>Whether the map contains the given value.</p>"},"type":"desc"},{"attributes":{"targetMethod":"object.contains","targetClass":"qxWeb","sourceMethod":"contains","sourceClass":"qx.module.util.Object"},"type":"attachStatic"},{"attributes":{},"type":"return","children":[{"attributes":{"text":"<p>Whether the value was found in the map.</p>"},"type":"desc"},{"attributes":{},"type":"types","children":[{"attributes":{"type":"Boolean"},"type":"entry"}]}]}]},{"attributes":{"isStatic":true,"group":"Utilities","name":"getValues","sourceMethod":"getValues","line":1,"sourceClass":"qx.module.util.Object"},"type":"method","children":[{"attributes":{},"type":"params","children":[{"attributes":{"name":"map"},"type":"param","children":[{"attributes":{"text":"<p>the map</p>"},"type":"desc"},{"attributes":{},"type":"types","children":[{"attributes":{"type":"Object"},"type":"entry"}]}]}]},{"attributes":{"text":"<p>Get the values of a map as array</p>"},"type":"desc"},{"attributes":{"targetMethod":"object.getValues","targetClass":"qxWeb","sourceMethod":"getValues","sourceClass":"qx.module.util.Object"},"type":"attachStatic"},{"attributes":{},"type":"return","children":[{"attributes":{"text":"<p>array of the values of the map</p>"},"type":"desc"},{"attributes":{},"type":"types","children":[{"attributes":{"type":"Array"},"type":"entry"}]}]}]},{"attributes":{"isStatic":true,"group":"Utilities","name":"invert","sourceMethod":"invert","line":1,"sourceClass":"qx.module.util.Object"},"type":"method","children":[{"attributes":{},"type":"params","children":[{"attributes":{"name":"map"},"type":"param","children":[{"attributes":{"text":"<p>Map to invert</p>"},"type":"desc"},{"attributes":{},"type":"types","children":[{"attributes":{"type":"Object"},"type":"entry"}]}]}]},{"attributes":{"text":"<p>Inverts a map by exchanging the keys with the values.</p>"},"type":"desc"},{"attributes":{"targetMethod":"object.invert","targetClass":"qxWeb","sourceMethod":"invert","sourceClass":"qx.module.util.Object"},"type":"attachStatic"},{"attributes":{},"type":"return","children":[{"attributes":{"text":"<p>inverted Map</p>"},"type":"desc"},{"attributes":{},"type":"types","children":[{"attributes":{"type":"Object"},"type":"entry"}]}]}]},{"attributes":{"isStatic":true,"group":"Utilities","name":"merge","sourceMethod":"merge","line":88,"sourceClass":"qx.module.util.Object"},"type":"method","children":[{"attributes":{},"type":"params","children":[{"attributes":{"name":"target"},"type":"param","children":[{"attributes":{"text":"<p>target object to merge into</p>"},"type":"desc"},{"attributes":{},"type":"types","children":[{"attributes":{"type":"Object"},"type":"entry"}]}]},{"attributes":{"name":"varargs"},"type":"param","children":[{"attributes":{"text":"<p>As many items as you want to merge.</p>"},"type":"desc"},{"attributes":{},"type":"types","children":[{"attributes":{"type":"var"},"type":"entry"}]}]}]},{"attributes":{"text":"<p>Merges one or more objects into the &#8216;target&#8217; object.\n<strong>The objects are merged by overwriting existing keys.</strong></p>"},"type":"desc"},{"attributes":{"targetMethod":"object.merge","targetClass":"qxWeb","sourceMethod":"merge","sourceClass":"qx.module.util.Object"},"type":"attachStatic"},{"attributes":{},"type":"return","children":[{"attributes":{"text":"<p>the merged object</p>"},"type":"desc"},{"attributes":{},"type":"types","children":[{"attributes":{"type":"Object"},"type":"entry"}]}]}]}],"member":[],"fileName":"qx.module.util.Object","group":"Utilities","desc":"<p>Helper functions to handle an Object as a Hash map.</p>","events":[]},"Traversing":{"static":[{"attributes":{"isStatic":true,"group":"Core","name":"equalNodes","sourceMethod":"equalNodes","line":340,"sourceClass":"qx.module.Traversing"},"type":"method","children":[{"attributes":{},"type":"params","children":[{"attributes":{"name":"node1"},"type":"param","children":[{"attributes":{"text":"<p>first object to compare</p>"},"type":"desc"},{"attributes":{},"type":"types","children":[{"attributes":{"type":"String"},"type":"entry"},{"attributes":{"type":"Element"},"type":"entry"},{"attributes":{"type":"Element","dimensions":1},"type":"entry"},{"attributes":{"type":"qxWeb"},"type":"entry"}]}]},{"attributes":{"name":"node2"},"type":"param","children":[{"attributes":{"text":"<p>second object to compare</p>"},"type":"desc"},{"attributes":{},"type":"types","children":[{"attributes":{"type":"String"},"type":"entry"},{"attributes":{"type":"Element"},"type":"entry"},{"attributes":{"type":"Element","dimensions":1},"type":"entry"},{"attributes":{"type":"qxWeb"},"type":"entry"}]}]}]},{"attributes":{"text":"<p>Determines if two <span class=\"caps\">DOM</span> nodes are equal as defined in the\n<a href=\"http://www.w3.org/TR/DOM-Level-3-Core/core.html#Node3-isEqualNode\"><span class=\"caps\">DOM</span> Level 3 isEqualNode spec</a>.\nAlso works in legacy browsers without native <em>isEqualNode</em> support.</p>"},"type":"desc"},{"attributes":{"targetMethod":"","targetClass":"qxWeb","sourceMethod":"equalNodes","sourceClass":"qx.module.Traversing"},"type":"attachStatic"},{"attributes":{},"type":"return","children":[{"attributes":{"text":"<code>true</code> if the nodes are equal"},"type":"desc"},{"attributes":{},"type":"types","children":[{"attributes":{"type":"Boolean"},"type":"entry"}]}]}]},{"attributes":{"isStatic":true,"group":"Core","name":"getDocument","sourceMethod":"getDocument","line":289,"sourceClass":"qx.module.Traversing"},"type":"method","children":[{"attributes":{},"type":"params","children":[{"attributes":{"name":"selector"},"type":"param","children":[{"attributes":{"text":"<p>Node to get the document for</p>"},"type":"desc"},{"attributes":{},"type":"types","children":[{"attributes":{"type":"Node"},"type":"entry"},{"attributes":{"type":"String"},"type":"entry"},{"attributes":{"type":"qxWeb"},"type":"entry"}]}]}]},{"attributes":{"text":"<p>Returns the owner document of the given node</p>"},"type":"desc"},{"attributes":{"targetMethod":"","targetClass":"qxWeb","sourceMethod":"getDocument","sourceClass":"qx.module.Traversing"},"type":"attachStatic"},{"attributes":{},"type":"return","children":[{"attributes":{"text":"<p>The document of the given <span class=\"caps\">DOM</span> node</p>"},"type":"desc"},{"attributes":{},"type":"types","children":[{"attributes":{"type":"Document"},"type":"entry"},{"attributes":{"type":"null"},"type":"entry"}]}]}]},{"attributes":{"isStatic":true,"group":"Core","name":"getNodeName","sourceMethod":"getNodeName","line":300,"sourceClass":"qx.module.Traversing"},"type":"method","children":[{"attributes":{},"type":"params","children":[{"attributes":{"name":"selector"},"type":"param","children":[{"attributes":{"text":"<p><span class=\"caps\">DOM</span> Node</p>"},"type":"desc"},{"attributes":{},"type":"types","children":[{"attributes":{"type":"Node"},"type":"entry"},{"attributes":{"type":"String"},"type":"entry"},{"attributes":{"type":"qxWeb"},"type":"entry"}]}]}]},{"attributes":{"text":"<p>Get the <span class=\"caps\">DOM</span> node&#8217;s name as a lowercase string</p>"},"type":"desc"},{"attributes":{"targetMethod":"","targetClass":"qxWeb","sourceMethod":"getNodeName","sourceClass":"qx.module.Traversing"},"type":"attachStatic"},{"attributes":{},"type":"return","children":[{"attributes":{"text":"<p>node name</p>"},"type":"desc"},{"attributes":{},"type":"types","children":[{"attributes":{"type":"String"},"type":"entry"}]}]}]},{"attributes":{"isStatic":true,"group":"Core","name":"getNodeText","sourceMethod":"getNodeText","line":314,"sourceClass":"qx.module.Traversing"},"type":"method","children":[{"attributes":{},"type":"params","children":[{"attributes":{"name":"selector"},"type":"param","children":[{"attributes":{"text":"<p>the node from where the search should start. If the node has subnodes the text contents are recursively retrieved and joined</p>"},"type":"desc"},{"attributes":{},"type":"types","children":[{"attributes":{"type":"Node"},"type":"entry"},{"attributes":{"type":"String"},"type":"entry"},{"attributes":{"type":"qxWeb"},"type":"entry"}]}]}]},{"attributes":{"text":"<p>Returns the text content of a node where the node type may be one of\nNODE_ELEMENT, NODE_ATTRIBUTE, NODE_TEXT, NODE_CDATA</p>"},"type":"desc"},{"attributes":{"targetMethod":"","targetClass":"qxWeb","sourceMethod":"getNodeText","sourceClass":"qx.module.Traversing"},"type":"attachStatic"},{"attributes":{},"type":"return","children":[{"attributes":{"text":"<p>the joined text content of the given node or null if not appropriate.</p>"},"type":"desc"},{"attributes":{},"type":"types","children":[{"attributes":{"type":"String"},"type":"entry"}]}]}]},{"attributes":{"isStatic":true,"group":"Core","name":"getWindow","sourceMethod":"getWindow","line":250,"sourceClass":"qx.module.Traversing"},"type":"method","children":[{"attributes":{},"type":"params","children":[{"attributes":{"name":"selector"},"type":"param","children":[{"attributes":{"text":"<p>Node to inspect</p>"},"type":"desc"},{"attributes":{},"type":"types","children":[{"attributes":{"type":"Node"},"type":"entry"},{"attributes":{"type":"Document"},"type":"entry"},{"attributes":{"type":"Window"},"type":"entry"},{"attributes":{"type":"String"},"type":"entry"},{"attributes":{"type":"qxWeb"},"type":"entry"}]}]}]},{"attributes":{"text":"<p>Returns the DOM2 <code>defaultView</code> (window) for the given node.</p>"},"type":"desc"},{"attributes":{"targetMethod":"","targetClass":"qxWeb","sourceMethod":"getWindow","sourceClass":"qx.module.Traversing"},"type":"attachStatic"},{"attributes":{},"type":"return","children":[{"attributes":{"text":"<p>the <code>defaultView</code> for the given node</p>"},"type":"desc"},{"attributes":{},"type":"types","children":[{"attributes":{"type":"Window"},"type":"entry"}]}]}]},{"attributes":{"isStatic":true,"group":"Core","name":"isBlockNode","sourceMethod":"isBlockNode","line":325,"sourceClass":"qx.module.Traversing"},"type":"method","children":[{"attributes":{},"type":"params","children":[{"attributes":{"name":"selector"},"type":"param","children":[{"attributes":{"text":"<p>the node to check</p>"},"type":"desc"},{"attributes":{},"type":"types","children":[{"attributes":{"type":"Node"},"type":"entry"},{"attributes":{"type":"String"},"type":"entry"},{"attributes":{"type":"qxWeb"},"type":"entry"}]}]}]},{"attributes":{"text":"<p>Checks if the given node is a block node</p>"},"type":"desc"},{"attributes":{"targetMethod":"","targetClass":"qxWeb","sourceMethod":"isBlockNode","sourceClass":"qx.module.Traversing"},"type":"attachStatic"},{"attributes":{},"type":"return","children":[{"attributes":{"text":"<code>true</code> if the node is a block node"},"type":"desc"},{"attributes":{},"type":"types","children":[{"attributes":{"type":"Boolean"},"type":"entry"}]}]}]},{"attributes":{"isStatic":true,"group":"Core","name":"isDocument","sourceMethod":"isDocument","line":219,"sourceClass":"qx.module.Traversing"},"type":"method","children":[{"attributes":{},"type":"params","children":[{"attributes":{"name":"node"},"type":"param","children":[{"attributes":{"text":"<p>Object to check. If the value is a qxWeb collection, isDocument will check the first item.</p>"},"type":"desc"},{"attributes":{},"type":"types","children":[{"attributes":{"type":"Object"},"type":"entry"},{"attributes":{"type":"qxWeb"},"type":"entry"}]}]}]},{"attributes":{"text":"<p>Checks if the given object is a <span class=\"caps\">DOM</span> document object</p>"},"type":"desc"},{"attributes":{"targetMethod":"","targetClass":"qxWeb","sourceMethod":"isDocument","sourceClass":"qx.module.Traversing"},"type":"attachStatic"},{"attributes":{},"type":"return","children":[{"attributes":{"text":"<code>true</code> if the object is a DOM document"},"type":"desc"},{"attributes":{},"type":"types","children":[{"attributes":{"type":"Boolean"},"type":"entry"}]}]}]},{"attributes":{"isStatic":true,"group":"Core","name":"isDocumentFragment","sourceMethod":"isDocumentFragment","line":235,"sourceClass":"qx.module.Traversing"},"type":"method","children":[{"attributes":{},"type":"params","children":[{"attributes":{"name":"node"},"type":"param","children":[{"attributes":{"text":"<p>Object to check. If the value is a qxWeb collection, isDocumentFragment will check the first item.</p>"},"type":"desc"},{"attributes":{},"type":"types","children":[{"attributes":{"type":"Object"},"type":"entry"},{"attributes":{"type":"qxWeb"},"type":"entry"}]}]}]},{"attributes":{"text":"<p>Checks if the given object is a <span class=\"caps\">DOM</span> document fragment object</p>"},"type":"desc"},{"attributes":{"targetMethod":"","targetClass":"qxWeb","sourceMethod":"isDocumentFragment","sourceClass":"qx.module.Traversing"},"type":"attachStatic"},{"attributes":{},"type":"return","children":[{"attributes":{"text":"<code>true</code> if the object is a DOM document fragment"},"type":"desc"},{"attributes":{},"type":"types","children":[{"attributes":{"type":"Boolean"},"type":"entry"}]}]}]},{"attributes":{"isStatic":true,"group":"Core","name":"isElement","sourceMethod":"isElement","line":181,"sourceClass":"qx.module.Traversing"},"type":"method","children":[{"attributes":{},"type":"params","children":[{"attributes":{"name":"selector"},"type":"param","children":[{"attributes":{"text":"<p>Object to check</p>"},"type":"desc"},{"attributes":{},"type":"types","children":[{"attributes":{"type":"Object"},"type":"entry"},{"attributes":{"type":"String"},"type":"entry"},{"attributes":{"type":"qxWeb"},"type":"entry"}]}]}]},{"attributes":{"text":"<p>Checks if the given object is a <span class=\"caps\">DOM</span> element</p>"},"type":"desc"},{"attributes":{"targetMethod":"","targetClass":"qxWeb","sourceMethod":"isElement","sourceClass":"qx.module.Traversing"},"type":"attachStatic"},{"attributes":{},"type":"return","children":[{"attributes":{"text":"<code>true</code> if the object is a DOM element"},"type":"desc"},{"attributes":{},"type":"types","children":[{"attributes":{"type":"Boolean"},"type":"entry"}]}]}]},{"attributes":{"isStatic":true,"group":"Core","name":"isNode","sourceMethod":"isNode","line":193,"sourceClass":"qx.module.Traversing"},"type":"method","children":[{"attributes":{},"type":"params","children":[{"attributes":{"name":"selector"},"type":"param","children":[{"attributes":{"text":"<p>Object to check</p>"},"type":"desc"},{"attributes":{},"type":"types","children":[{"attributes":{"type":"Node"},"type":"entry"},{"attributes":{"type":"String"},"type":"entry"},{"attributes":{"type":"qxWeb"},"type":"entry"}]}]}]},{"attributes":{"text":"<p>Checks if the given object is a <span class=\"caps\">DOM</span> node</p>"},"type":"desc"},{"attributes":{"targetMethod":"","targetClass":"qxWeb","sourceMethod":"isNode","sourceClass":"qx.module.Traversing"},"type":"attachStatic"},{"attributes":{},"type":"return","children":[{"attributes":{"text":"<code>true</code> if the object is a DOM node"},"type":"desc"},{"attributes":{},"type":"types","children":[{"attributes":{"type":"Boolean"},"type":"entry"}]}]}]},{"attributes":{"isStatic":true,"group":"Core","name":"isNodeName","sourceMethod":"isNodeName","line":206,"sourceClass":"qx.module.Traversing"},"type":"method","children":[{"attributes":{},"type":"params","children":[{"attributes":{"name":"selector"},"type":"param","children":[{"attributes":{"text":"<p>the node to check</p>"},"type":"desc"},{"attributes":{},"type":"types","children":[{"attributes":{"type":"Node"},"type":"entry"},{"attributes":{"type":"String"},"type":"entry"},{"attributes":{"type":"qxWeb"},"type":"entry"}]}]},{"attributes":{"name":"nodeName"},"type":"param","children":[{"attributes":{"text":"<p>the node name to check for</p>"},"type":"desc"},{"attributes":{},"type":"types","children":[{"attributes":{"type":"String"},"type":"entry"}]}]}]},{"attributes":{"text":"<p>Whether the node has the given node name</p>"},"type":"desc"},{"attributes":{"targetMethod":"","targetClass":"qxWeb","sourceMethod":"isNodeName","sourceClass":"qx.module.Traversing"},"type":"attachStatic"},{"attributes":{},"type":"return","children":[{"attributes":{"text":"<code>true</code> if the node has the given name"},"type":"desc"},{"attributes":{},"type":"types","children":[{"attributes":{"type":"Boolean"},"type":"entry"}]}]}]},{"attributes":{"isStatic":true,"group":"Core","name":"isTextNode","sourceMethod":"isTextNode","line":261,"sourceClass":"qx.module.Traversing"},"type":"method","children":[{"attributes":{},"type":"params","children":[{"attributes":{"name":"obj"},"type":"param","children":[{"attributes":{"text":"<p>the object to be tested</p>"},"type":"desc"},{"attributes":{},"type":"types","children":[{"attributes":{"type":"Object"},"type":"entry"}]}]}]},{"attributes":{"text":"<p>Checks whether the given object is a <span class=\"caps\">DOM</span> text node</p>"},"type":"desc"},{"attributes":{"targetMethod":"","targetClass":"qxWeb","sourceMethod":"isTextNode","sourceClass":"qx.module.Traversing"},"type":"attachStatic"},{"attributes":{},"type":"return","children":[{"attributes":{"text":"<code>true</code> if the object is a textNode"},"type":"desc"},{"attributes":{},"type":"types","children":[{"attributes":{"type":"Boolean"},"type":"entry"}]}]}]},{"attributes":{"isStatic":true,"group":"Core","name":"isWindow","sourceMethod":"isWindow","line":274,"sourceClass":"qx.module.Traversing"},"type":"method","children":[{"attributes":{},"type":"params","children":[{"attributes":{"name":"obj"},"type":"param","children":[{"attributes":{"text":"<p>the object to be tested. If the value is a qxWeb collection, isDocument will check the first item.</p>"},"type":"desc"},{"attributes":{},"type":"types","children":[{"attributes":{"type":"Object"},"type":"entry"},{"attributes":{"type":"qxWeb"},"type":"entry"}]}]}]},{"attributes":{"text":"<p>Check whether the given object is a browser window object.</p>"},"type":"desc"},{"attributes":{"targetMethod":"","targetClass":"qxWeb","sourceMethod":"isWindow","sourceClass":"qx.module.Traversing"},"type":"attachStatic"},{"attributes":{},"type":"return","children":[{"attributes":{"text":"<code>true</code> if the object is a window object"},"type":"desc"},{"attributes":{},"type":"types","children":[{"attributes":{"type":"Boolean"},"type":"entry"}]}]}]}],"member":[{"attributes":{"isStatic":false,"group":"Core","name":"add","sourceMethod":"add","line":419,"sourceClass":"qx.module.Traversing"},"type":"method","children":[{"attributes":{},"type":"params","children":[{"attributes":{"name":"el"},"type":"param","children":[{"attributes":{"text":"<p><span class=\"caps\">DOM</span> element to add to the collection. If a collection is given, only the first element will be added</p>"},"type":"desc"},{"attributes":{},"type":"types","children":[{"attributes":{"type":"Element"},"type":"entry"},{"attributes":{"type":"qxWeb"},"type":"entry"}]}]}]},{"attributes":{"text":"<p>Adds an element to the collection</p>"},"type":"desc"},{"attributes":{"targetMethod":"","targetClass":"qxWeb","sourceMethod":"add","sourceClass":"qx.module.Traversing"},"type":"attach"},{"attributes":{},"type":"return","children":[{"attributes":{"text":"<p>The collection for chaining</p>"},"type":"desc"},{"attributes":{},"type":"types","children":[{"attributes":{"type":"qxWeb"},"type":"entry"}]}]}]},{"attributes":{"isStatic":false,"group":"Core","name":"contains","sourceMethod":"contains","line":710,"sourceClass":"qx.module.Traversing"},"type":"method","children":[{"attributes":{},"type":"params","children":[{"attributes":{"name":"element"},"type":"param","children":[{"attributes":{"text":"<p>element to check for.</p>"},"type":"desc"},{"attributes":{},"type":"types","children":[{"attributes":{"type":"Element"},"type":"entry"},{"attributes":{"type":"Window"},"type":"entry"},{"attributes":{"type":"Element","dimensions":1},"type":"entry"},{"attributes":{"type":"qxWeb"},"type":"entry"}]}]}]},{"attributes":{"text":"<p>Returns a new collection containing only those nodes that\ncontain the given element. Also accepts a qxWeb\ncollection or an Array of elements. In those cases, the first element\nin the list is used.</p>"},"type":"desc"},{"attributes":{"targetMethod":"","targetClass":"qxWeb","sourceMethod":"contains","sourceClass":"qx.module.Traversing"},"type":"attach"},{"attributes":{},"type":"return","children":[{"attributes":{"text":"<p>Collection with matching items</p>"},"type":"desc"},{"attributes":{},"type":"types","children":[{"attributes":{"type":"qxWeb"},"type":"entry"}]}]}]},{"attributes":{"isStatic":false,"group":"Core","name":"eq","sourceMethod":"eq","line":652,"sourceClass":"qx.module.Traversing"},"type":"method","children":[{"attributes":{},"type":"params","children":[{"attributes":{"name":"index"},"type":"param","children":[{"attributes":{"text":"<p>The position of the element in the collection</p>"},"type":"desc"},{"attributes":{},"type":"types","children":[{"attributes":{"type":"Number"},"type":"entry"}]}]}]},{"attributes":{"text":"<p>Reduce the set of matched elements to a single element.</p>"},"type":"desc"},{"attributes":{"targetMethod":"","targetClass":"qxWeb","sourceMethod":"eq","sourceClass":"qx.module.Traversing"},"type":"attach"},{"attributes":{},"type":"return","children":[{"attributes":{"text":"<p>A new collection containing one element</p>"},"type":"desc"},{"attributes":{},"type":"types","children":[{"attributes":{"type":"qxWeb"},"type":"entry"}]}]}]},{"attributes":{"isStatic":false,"group":"Core","name":"find","sourceMethod":"find","line":603,"sourceClass":"qx.module.Traversing"},"type":"method","children":[{"attributes":{},"type":"params","children":[{"attributes":{"name":"selector"},"type":"param","children":[{"attributes":{"text":"<p>Selector expression to match the child elements against</p>"},"type":"desc"},{"attributes":{},"type":"types","children":[{"attributes":{"type":"String"},"type":"entry"}]}]}]},{"attributes":{"text":"<p>Searches the child elements of each item in the collection and returns\na new collection containing the children that match the provided selector</p>"},"type":"desc"},{"attributes":{"targetMethod":"","targetClass":"qxWeb","sourceMethod":"find","sourceClass":"qx.module.Traversing"},"type":"attach"},{"attributes":{},"type":"return","children":[{"attributes":{"text":"<p>New collection containing the matching child elements</p>"},"type":"desc"},{"attributes":{},"type":"types","children":[{"attributes":{"type":"qxWeb"},"type":"entry"}]}]}]},{"attributes":{"isStatic":false,"group":"Core","name":"forEach","sourceMethod":"forEach","line":470,"sourceClass":"qx.module.Traversing"},"type":"method","children":[{"attributes":{},"type":"params","children":[{"attributes":{"name":"fn"},"type":"param","children":[{"attributes":{"text":"<p>Callback function which is called with two parameters <ul> <li>current item &#8211; <span class=\"caps\">DOM</span> node</li> <li>current index &#8211; Number</li> </ul></p>"},"type":"desc"},{"attributes":{},"type":"types","children":[{"attributes":{"type":"Function"},"type":"entry"}]}]},{"attributes":{"name":"ctx"},"type":"param","children":[{"attributes":{"text":"<p>Context object</p>"},"type":"desc"},{"attributes":{},"type":"types","children":[{"attributes":{"type":"Object"},"type":"entry"}]}]}]},{"attributes":{"text":"<p>Executes the provided callback function once for each item in the\ncollection.</p>"},"type":"desc"},{"attributes":{"targetMethod":"","targetClass":"qxWeb","sourceMethod":"forEach","sourceClass":"qx.module.Traversing"},"type":"attach"},{"attributes":{},"type":"return","children":[{"attributes":{"text":"<p>The collection for chaining</p>"},"type":"desc"},{"attributes":{},"type":"types","children":[{"attributes":{"type":"qxWeb"},"type":"entry"}]}]}]},{"attributes":{"isStatic":false,"group":"Core","name":"getAncestors","sourceMethod":"getAncestors","line":538,"sourceClass":"qx.module.Traversing"},"type":"method","children":[{"attributes":{},"type":"params","children":[{"attributes":{"defaultValue":"null","optional":true,"name":"filter"},"type":"param","children":[{"attributes":{"text":"<p>Optional selector to match</p>"},"type":"desc"},{"attributes":{},"type":"types","children":[{"attributes":{"type":"String"},"type":"entry"}]}]}]},{"attributes":{"text":"<p>Gets a set of elements containing all ancestors of each element in the\ncollection.\nThis set can be filtered with an optional expression that will cause only\nelements matching the selector to be collected.</p>"},"type":"desc"},{"attributes":{"targetMethod":"","targetClass":"qxWeb","sourceMethod":"getAncestors","sourceClass":"qx.module.Traversing"},"type":"attach"},{"attributes":{},"type":"return","children":[{"attributes":{"text":"<p>Collection containing the ancestor elements</p>"},"type":"desc"},{"attributes":{},"type":"types","children":[{"attributes":{"type":"qxWeb"},"type":"entry"}]}]}]},{"attributes":{"isStatic":false,"group":"Core","name":"getAncestorsUntil","sourceMethod":"getAncestorsUntil","line":556,"sourceClass":"qx.module.Traversing"},"type":"method","children":[{"attributes":{},"type":"params","children":[{"attributes":{"name":"selector"},"type":"param","children":[{"attributes":{"text":"<p>Selector that indicates where to stop including ancestor elements</p>"},"type":"desc"},{"attributes":{},"type":"types","children":[{"attributes":{"type":"String"},"type":"entry"}]}]},{"attributes":{"defaultValue":"null","optional":true,"name":"filter"},"type":"param","children":[{"attributes":{"text":"<p>Optional selector to match</p>"},"type":"desc"},{"attributes":{},"type":"types","children":[{"attributes":{"type":"String"},"type":"entry"}]}]}]},{"attributes":{"text":"<p>Gets a set of elements containing all ancestors of each element in the\ncollection, up to (but not including) the element matched by the provided\nselector.\nThis set can be filtered with an optional expression that will cause only\nelements matching the selector to be collected.</p>"},"type":"desc"},{"attributes":{"targetMethod":"","targetClass":"qxWeb","sourceMethod":"getAncestorsUntil","sourceClass":"qx.module.Traversing"},"type":"attach"},{"attributes":{},"type":"return","children":[{"attributes":{"text":"<p>Collection containing the ancestor elements</p>"},"type":"desc"},{"attributes":{},"type":"types","children":[{"attributes":{"type":"qxWeb"},"type":"entry"}]}]}]},{"attributes":{"isStatic":false,"group":"Core","name":"getChildren","sourceMethod":"getChildren","line":444,"sourceClass":"qx.module.Traversing"},"type":"method","children":[{"attributes":{},"type":"params","children":[{"attributes":{"defaultValue":"null","optional":true,"name":"selector"},"type":"param","children":[{"attributes":{"text":"<p>Optional selector to match</p>"},"type":"desc"},{"attributes":{},"type":"types","children":[{"attributes":{"type":"String"},"type":"entry"}]}]}]},{"attributes":{"text":"<p>Gets a set of elements containing all of the unique immediate children of\neach of the matched set of elements.\nThis set can be filtered with an optional expression that will cause only\nelements matching the selector to be collected.</p>"},"type":"desc"},{"attributes":{"targetMethod":"","targetClass":"qxWeb","sourceMethod":"getChildren","sourceClass":"qx.module.Traversing"},"type":"attach"},{"attributes":{},"type":"return","children":[{"attributes":{"text":"<p>Collection containing the child elements</p>"},"type":"desc"},{"attributes":{},"type":"types","children":[{"attributes":{"type":"qxWeb"},"type":"entry"}]}]}]},{"attributes":{"isStatic":false,"group":"Core","name":"getClosest","sourceMethod":"getClosest","line":571,"sourceClass":"qx.module.Traversing"},"type":"method","children":[{"attributes":{},"type":"params","children":[{"attributes":{"name":"selector"},"type":"param","children":[{"attributes":{"text":"<p>Selector expression to match</p>"},"type":"desc"},{"attributes":{},"type":"types","children":[{"attributes":{"type":"String"},"type":"entry"}]}]}]},{"attributes":{"text":"<p>Gets a set containing the closest matching ancestor for each item in\nthe collection.\nIf the item itself matches, it is added to the new set. Otherwise, the\nitem&#8217;s parent chain will be traversed until a match is found.</p>"},"type":"desc"},{"attributes":{"targetMethod":"","targetClass":"qxWeb","sourceMethod":"getClosest","sourceClass":"qx.module.Traversing"},"type":"attach"},{"attributes":{},"type":"return","children":[{"attributes":{"text":"<p>New collection containing the closest matching ancestors</p>"},"type":"desc"},{"attributes":{},"type":"types","children":[{"attributes":{"type":"qxWeb"},"type":"entry"}]}]}]},{"attributes":{"isStatic":false,"group":"Core","name":"getContents","sourceMethod":"getContents","line":619,"sourceClass":"qx.module.Traversing"},"type":"method","children":[{"attributes":{"text":"<p>Gets a new set of elements containing the child nodes of each item in the\ncurrent set.</p>"},"type":"desc"},{"attributes":{"targetMethod":"","targetClass":"qxWeb","sourceMethod":"getContents","sourceClass":"qx.module.Traversing"},"type":"attach"},{"attributes":{},"type":"return","children":[{"attributes":{"text":"<p>New collection containing the child nodes</p>"},"type":"desc"},{"attributes":{},"type":"types","children":[{"attributes":{"type":"qxWeb"},"type":"entry"}]}]}]},{"attributes":{"isStatic":false,"group":"Core","name":"getFirst","sourceMethod":"getFirst","line":663,"sourceClass":"qx.module.Traversing"},"type":"method","children":[{"attributes":{"text":"<p>Reduces the collection to the first element.</p>"},"type":"desc"},{"attributes":{"targetMethod":"","targetClass":"qxWeb","sourceMethod":"getFirst","sourceClass":"qx.module.Traversing"},"type":"attach"},{"attributes":{},"type":"return","children":[{"attributes":{"text":"<p>A new collection containing one element</p>"},"type":"desc"},{"attributes":{},"type":"types","children":[{"attributes":{"type":"qxWeb"},"type":"entry"}]}]}]},{"attributes":{"isStatic":false,"group":"Core","name":"getLast","sourceMethod":"getLast","line":674,"sourceClass":"qx.module.Traversing"},"type":"method","children":[{"attributes":{"text":"<p>Reduces the collection to the last element.</p>"},"type":"desc"},{"attributes":{"targetMethod":"","targetClass":"qxWeb","sourceMethod":"getLast","sourceClass":"qx.module.Traversing"},"type":"attach"},{"attributes":{},"type":"return","children":[{"attributes":{"text":"<p>A new collection containing one element</p>"},"type":"desc"},{"attributes":{},"type":"types","children":[{"attributes":{"type":"qxWeb"},"type":"entry"}]}]}]},{"attributes":{"isStatic":false,"group":"Core","name":"getNext","sourceMethod":"getNext","line":743,"sourceClass":"qx.module.Traversing"},"type":"method","children":[{"attributes":{},"type":"params","children":[{"attributes":{"optional":true,"name":"selector"},"type":"param","children":[{"attributes":{"text":"<p>Optional selector expression</p>"},"type":"desc"},{"attributes":{},"type":"types","children":[{"attributes":{"type":"String"},"type":"entry"}]}]}]},{"attributes":{"text":"<p>Gets a collection containing the next sibling element of each item in\nthe current set.\nThis set can be filtered with an optional expression that will cause only\nelements matching the selector to be collected.</p>"},"type":"desc"},{"attributes":{"targetMethod":"","targetClass":"qxWeb","sourceMethod":"getNext","sourceClass":"qx.module.Traversing"},"type":"attach"},{"attributes":{},"type":"return","children":[{"attributes":{"text":"<p>New set containing next siblings</p>"},"type":"desc"},{"attributes":{},"type":"types","children":[{"attributes":{"type":"qxWeb"},"type":"entry"}]}]}]},{"attributes":{"isStatic":false,"group":"Core","name":"getNextAll","sourceMethod":"getNextAll","line":762,"sourceClass":"qx.module.Traversing"},"type":"method","children":[{"attributes":{},"type":"params","children":[{"attributes":{"optional":true,"name":"selector"},"type":"param","children":[{"attributes":{"text":"<p>Optional selector expression</p>"},"type":"desc"},{"attributes":{},"type":"types","children":[{"attributes":{"type":"String"},"type":"entry"}]}]}]},{"attributes":{"text":"<p>Gets a collection containing all following sibling elements of each\nitem in the current set.\nThis set can be filtered with an optional expression that will cause only\nelements matching the selector to be collected.</p>"},"type":"desc"},{"attributes":{"targetMethod":"","targetClass":"qxWeb","sourceMethod":"getNextAll","sourceClass":"qx.module.Traversing"},"type":"attach"},{"attributes":{},"type":"return","children":[{"attributes":{"text":"<p>New set containing following siblings</p>"},"type":"desc"},{"attributes":{},"type":"types","children":[{"attributes":{"type":"qxWeb"},"type":"entry"}]}]}]},{"attributes":{"isStatic":false,"group":"Core","name":"getNextUntil","sourceMethod":"getNextUntil","line":777,"sourceClass":"qx.module.Traversing"},"type":"method","children":[{"attributes":{},"type":"params","children":[{"attributes":{"optional":true,"name":"selector"},"type":"param","children":[{"attributes":{"text":"<p>Optional selector expression</p>"},"type":"desc"},{"attributes":{},"type":"types","children":[{"attributes":{"type":"String"},"type":"entry"}]}]}]},{"attributes":{"text":"<p>Gets a collection containing the following sibling elements of each\nitem in the current set up to but not including any element that matches\nthe given selector.</p>"},"type":"desc"},{"attributes":{"targetMethod":"","targetClass":"qxWeb","sourceMethod":"getNextUntil","sourceClass":"qx.module.Traversing"},"type":"attach"},{"attributes":{},"type":"return","children":[{"attributes":{"text":"<p>New set containing following siblings</p>"},"type":"desc"},{"attributes":{},"type":"types","children":[{"attributes":{"type":"qxWeb"},"type":"entry"}]}]}]},{"attributes":{"isStatic":false,"group":"Core","name":"getOffsetParent","sourceMethod":"getOffsetParent","line":898,"sourceClass":"qx.module.Traversing"},"type":"method","children":[{"attributes":{"text":"<p>Gets a new collection containing the offset parent of each item in the\ncurrent set.</p>"},"type":"desc"},{"attributes":{"targetMethod":"","targetClass":"qxWeb","sourceMethod":"getOffsetParent","sourceClass":"qx.module.Traversing"},"type":"attach"},{"attributes":{},"type":"return","children":[{"attributes":{"text":"<p>New collection containing offset parents</p>"},"type":"desc"},{"attributes":{},"type":"types","children":[{"attributes":{"type":"qxWeb"},"type":"entry"}]}]}]},{"attributes":{"isStatic":false,"group":"Core","name":"getParents","sourceMethod":"getParents","line":488,"sourceClass":"qx.module.Traversing"},"type":"method","children":[{"attributes":{},"type":"params","children":[{"attributes":{"defaultValue":"null","optional":true,"name":"selector"},"type":"param","children":[{"attributes":{"text":"<p>Optional selector to match</p>"},"type":"desc"},{"attributes":{},"type":"types","children":[{"attributes":{"type":"String"},"type":"entry"}]}]}]},{"attributes":{"text":"<p>Gets a set of elements containing the parent of each element in the\ncollection.\nThis set can be filtered with an optional expression that will cause only\nelements matching the selector to be collected.</p>"},"type":"desc"},{"attributes":{"targetMethod":"","targetClass":"qxWeb","sourceMethod":"getParents","sourceClass":"qx.module.Traversing"},"type":"attach"},{"attributes":{},"type":"return","children":[{"attributes":{"text":"<p>Collection containing the parent elements</p>"},"type":"desc"},{"attributes":{},"type":"types","children":[{"attributes":{"type":"qxWeb"},"type":"entry"}]}]}]},{"attributes":{"isStatic":false,"group":"Core","name":"getPrev","sourceMethod":"getPrev","line":803,"sourceClass":"qx.module.Traversing"},"type":"method","children":[{"attributes":{},"type":"params","children":[{"attributes":{"optional":true,"name":"selector"},"type":"param","children":[{"attributes":{"text":"<p>Optional selector expression</p>"},"type":"desc"},{"attributes":{},"type":"types","children":[{"attributes":{"type":"String"},"type":"entry"}]}]}]},{"attributes":{"text":"<p>Gets a collection containing the previous sibling element of each item in\nthe current set.\nThis set can be filtered with an optional expression that will cause only\nelements matching the selector to be collected.</p>"},"type":"desc"},{"attributes":{"targetMethod":"","targetClass":"qxWeb","sourceMethod":"getPrev","sourceClass":"qx.module.Traversing"},"type":"attach"},{"attributes":{},"type":"return","children":[{"attributes":{"text":"<p>New set containing previous siblings</p>"},"type":"desc"},{"attributes":{},"type":"types","children":[{"attributes":{"type":"qxWeb"},"type":"entry"}]}]}]},{"attributes":{"isStatic":false,"group":"Core","name":"getPrevAll","sourceMethod":"getPrevAll","line":822,"sourceClass":"qx.module.Traversing"},"type":"method","children":[{"attributes":{},"type":"params","children":[{"attributes":{"optional":true,"name":"selector"},"type":"param","children":[{"attributes":{"text":"<p>Optional selector expression</p>"},"type":"desc"},{"attributes":{},"type":"types","children":[{"attributes":{"type":"String"},"type":"entry"}]}]}]},{"attributes":{"text":"<p>Gets a collection containing all preceding sibling elements of each\nitem in the current set.\nThis set can be filtered with an optional expression that will cause only\nelements matching the selector to be collected.</p>"},"type":"desc"},{"attributes":{"targetMethod":"","targetClass":"qxWeb","sourceMethod":"getPrevAll","sourceClass":"qx.module.Traversing"},"type":"attach"},{"attributes":{},"type":"return","children":[{"attributes":{"text":"<p>New set containing preceding siblings</p>"},"type":"desc"},{"attributes":{},"type":"types","children":[{"attributes":{"type":"qxWeb"},"type":"entry"}]}]}]},{"attributes":{"isStatic":false,"group":"Core","name":"getPrevUntil","sourceMethod":"getPrevUntil","line":837,"sourceClass":"qx.module.Traversing"},"type":"method","children":[{"attributes":{},"type":"params","children":[{"attributes":{"optional":true,"name":"selector"},"type":"param","children":[{"attributes":{"text":"<p>Optional selector expression</p>"},"type":"desc"},{"attributes":{},"type":"types","children":[{"attributes":{"type":"String"},"type":"entry"}]}]}]},{"attributes":{"text":"<p>Gets a collection containing the preceding sibling elements of each\nitem in the current set up to but not including any element that matches\nthe given selector.</p>"},"type":"desc"},{"attributes":{"targetMethod":"","targetClass":"qxWeb","sourceMethod":"getPrevUntil","sourceClass":"qx.module.Traversing"},"type":"attach"},{"attributes":{},"type":"return","children":[{"attributes":{"text":"<p>New set containing preceding siblings</p>"},"type":"desc"},{"attributes":{},"type":"types","children":[{"attributes":{"type":"qxWeb"},"type":"entry"}]}]}]},{"attributes":{"isStatic":false,"group":"Core","name":"getSiblings","sourceMethod":"getSiblings","line":863,"sourceClass":"qx.module.Traversing"},"type":"method","children":[{"attributes":{},"type":"params","children":[{"attributes":{"optional":true,"name":"selector"},"type":"param","children":[{"attributes":{"text":"<p>Optional selector expression</p>"},"type":"desc"},{"attributes":{},"type":"types","children":[{"attributes":{"type":"String"},"type":"entry"}]}]}]},{"attributes":{"text":"<p>Gets a collection containing all sibling elements of the items in the\ncurrent set.\nThis set can be filtered with an optional expression that will cause only\nelements matching the selector to be collected.</p>"},"type":"desc"},{"attributes":{"targetMethod":"","targetClass":"qxWeb","sourceMethod":"getSiblings","sourceClass":"qx.module.Traversing"},"type":"attach"},{"attributes":{},"type":"return","children":[{"attributes":{"text":"<p>New set containing sibling elements</p>"},"type":"desc"},{"attributes":{},"type":"types","children":[{"attributes":{"type":"qxWeb"},"type":"entry"}]}]}]},{"attributes":{"isStatic":false,"group":"Core","name":"has","sourceMethod":"has","line":687,"sourceClass":"qx.module.Traversing"},"type":"method","children":[{"attributes":{},"type":"params","children":[{"attributes":{"name":"selector"},"type":"param","children":[{"attributes":{"text":"<p>Selector expression</p>"},"type":"desc"},{"attributes":{},"type":"types","children":[{"attributes":{"type":"String"},"type":"entry"}]}]}]},{"attributes":{"text":"<p>Gets a collection containing only the elements that have descendants\nmatching the given selector</p>"},"type":"desc"},{"attributes":{"targetMethod":"","targetClass":"qxWeb","sourceMethod":"has","sourceClass":"qx.module.Traversing"},"type":"attach"},{"attributes":{},"type":"return","children":[{"attributes":{"text":"<p>a new collection containing only elements with matching descendants</p>"},"type":"desc"},{"attributes":{},"type":"types","children":[{"attributes":{"type":"qxWeb"},"type":"entry"}]}]}]},{"attributes":{"isStatic":false,"group":"Core","name":"is","sourceMethod":"is","line":637,"sourceClass":"qx.module.Traversing"},"type":"method","children":[{"attributes":{},"type":"params","children":[{"attributes":{"name":"selector"},"type":"param","children":[{"attributes":{"text":"<p>Selector expression or filter function</p>"},"type":"desc"},{"attributes":{},"type":"types","children":[{"attributes":{"type":"String"},"type":"entry"},{"attributes":{"type":"Function"},"type":"entry"}]}]}]},{"attributes":{"text":"<p>Checks if at least one element in the collection passes the provided\nfilter. This can be either a selector expression or a filter\nfunction</p>"},"type":"desc"},{"attributes":{"targetMethod":"","targetClass":"qxWeb","sourceMethod":"is","sourceClass":"qx.module.Traversing"},"type":"attach"},{"attributes":{},"type":"return","children":[{"attributes":{"text":"<code>true</code> if at least one element matches"},"type":"desc"},{"attributes":{},"type":"types","children":[{"attributes":{"type":"Boolean"},"type":"entry"}]}]}]},{"attributes":{"isStatic":false,"group":"Core","name":"isChildOf","sourceMethod":"isChildOf","line":510,"sourceClass":"qx.module.Traversing"},"type":"method","children":[{"attributes":{},"type":"params","children":[{"attributes":{"name":"parent"},"type":"param","children":[{"attributes":{"text":"<p>Collection or selector of the parent collection to check.</p>"},"type":"desc"},{"attributes":{},"type":"types","children":[{"attributes":{"type":"qxWeb"},"type":"entry"},{"attributes":{"type":"String"},"type":"entry"}]}]}]},{"attributes":{"text":"<p>Checks if any element of the current collection is child of any element of a given\nparent collection.</p>"},"type":"desc"},{"attributes":{"targetMethod":"","targetClass":"qxWeb","sourceMethod":"isChildOf","sourceClass":"qx.module.Traversing"},"type":"attach"},{"attributes":{},"type":"return","children":[{"attributes":{"text":"<p>Returns true if at least one element of the current collection is child of the parent collection</p>"},"type":"desc"},{"attributes":{},"type":"types","children":[{"attributes":{"type":"Boolean"},"type":"entry"}]}]}]},{"attributes":{"isStatic":false,"group":"Core","name":"isRendered","sourceMethod":"isRendered","line":911,"sourceClass":"qx.module.Traversing"},"type":"method","children":[{"attributes":{"text":"<p>Whether the first element in the collection is inserted into\nthe document for which it was created.</p>"},"type":"desc"},{"attributes":{"targetMethod":"","targetClass":"qxWeb","sourceMethod":"isRendered","sourceClass":"qx.module.Traversing"},"type":"attach"},{"attributes":{},"type":"return","children":[{"attributes":{"text":"<code>true</code> when the element is inserted into the document."},"type":"desc"},{"attributes":{},"type":"types","children":[{"attributes":{"type":"Boolean"},"type":"entry"}]}]}]},{"attributes":{"isStatic":false,"group":"Core","name":"not","sourceMethod":"not","line":877,"sourceClass":"qx.module.Traversing"},"type":"method","children":[{"attributes":{},"type":"params","children":[{"attributes":{"name":"selector"},"type":"param","children":[{"attributes":{"text":"<p>Selector or filter function</p>"},"type":"desc"},{"attributes":{},"type":"types","children":[{"attributes":{"type":"String"},"type":"entry"},{"attributes":{"type":"Function"},"type":"entry"}]}]}]},{"attributes":{"text":"<p>Remove elements from the collection that do not pass the given filter.\nThis can be either a selector expression or a filter function</p>"},"type":"desc"},{"attributes":{"targetMethod":"","targetClass":"qxWeb","sourceMethod":"not","sourceClass":"qx.module.Traversing"},"type":"attach"},{"attributes":{},"type":"return","children":[{"attributes":{"text":"<p>Reduced collection</p>"},"type":"desc"},{"attributes":{},"type":"types","children":[{"attributes":{"type":"qxWeb"},"type":"entry"}]}]}]}],"fileName":"qx.module.Traversing","group":"Core","desc":"<p><span class=\"caps\">DOM</span> traversal module</p>","events":[]},"Css":{"static":[{"attributes":{"isStatic":true,"group":"Core","name":"includeStylesheet","sourceMethod":"includeStylesheet","line":236,"sourceClass":"qx.module.Css"},"type":"method","children":[{"attributes":{},"type":"params","children":[{"attributes":{"name":"uri"},"type":"param","children":[{"attributes":{"text":"<p>The stylesheet&#8217;s <span class=\"caps\">URI</span></p>"},"type":"desc"},{"attributes":{},"type":"types","children":[{"attributes":{"type":"String"},"type":"entry"}]}]},{"attributes":{"optional":true,"name":"doc"},"type":"param","children":[{"attributes":{"text":"<p>Document to modify</p>"},"type":"desc"},{"attributes":{},"type":"types","children":[{"attributes":{"type":"Document"},"type":"entry"}]}]}]},{"attributes":{"text":"<p>Includes a Stylesheet file</p>"},"type":"desc"},{"attributes":{"targetMethod":"","targetClass":"qxWeb","sourceMethod":"includeStylesheet","sourceClass":"qx.module.Css"},"type":"attachStatic"}]}],"member":[{"attributes":{"isStatic":false,"group":"Core","name":"addClass","sourceMethod":"addClass","line":466,"sourceClass":"qx.module.Css"},"type":"method","children":[{"attributes":{},"type":"params","children":[{"attributes":{"name":"name"},"type":"param","children":[{"attributes":{"text":"<p>Class name</p>"},"type":"desc"},{"attributes":{},"type":"types","children":[{"attributes":{"type":"String"},"type":"entry"}]}]}]},{"attributes":{"text":"<p>Adds a class name to each element in the collection</p>"},"type":"desc"},{"attributes":{"targetMethod":"","targetClass":"qxWeb","sourceMethod":"addClass","sourceClass":"qx.module.Css"},"type":"attach"},{"attributes":{},"type":"return","children":[{"attributes":{"text":"<p>The collection for chaining</p>"},"type":"desc"},{"attributes":{},"type":"types","children":[{"attributes":{"type":"qxWeb"},"type":"entry"}]}]}]},{"attributes":{"isStatic":false,"group":"Core","name":"addClasses","sourceMethod":"addClasses","line":481,"sourceClass":"qx.module.Css"},"type":"method","children":[{"attributes":{},"type":"params","children":[{"attributes":{"name":"names"},"type":"param","children":[{"attributes":{"text":"<p>List of class names to add</p>"},"type":"desc"},{"attributes":{},"type":"types","children":[{"attributes":{"type":"String","dimensions":1},"type":"entry"}]}]}]},{"attributes":{"text":"<p>Adds multiple class names to each element in the collection</p>"},"type":"desc"},{"attributes":{"targetMethod":"","targetClass":"qxWeb","sourceMethod":"addClasses","sourceClass":"qx.module.Css"},"type":"attach"},{"attributes":{},"type":"return","children":[{"attributes":{"text":"<p>The collection for chaining</p>"},"type":"desc"},{"attributes":{},"type":"types","children":[{"attributes":{"type":"qxWeb"},"type":"entry"}]}]}]},{"attributes":{"isStatic":false,"group":"Core","name":"getClass","sourceMethod":"getClass","line":541,"sourceClass":"qx.module.Css"},"type":"method","children":[{"attributes":{"text":"<p>Returns the class name of the first element in the collection</p>"},"type":"desc"},{"attributes":{"targetMethod":"","targetClass":"qxWeb","sourceMethod":"getClass","sourceClass":"qx.module.Css"},"type":"attach"},{"attributes":{},"type":"return","children":[{"attributes":{"text":"<p>Class name</p>"},"type":"desc"},{"attributes":{},"type":"types","children":[{"attributes":{"type":"String"},"type":"entry"}]}]}]},{"attributes":{"isStatic":false,"group":"Core","name":"getContentHeight","sourceMethod":"getContentHeight","line":273,"sourceClass":"qx.module.Css"},"type":"method","children":[{"attributes":{},"type":"params","children":[{"attributes":{"defaultValue":"false","optional":true,"name":"force"},"type":"param","children":[{"attributes":{"text":"<p>When true also get the content height of a <em>non displayed</em> element</p>"},"type":"desc"},{"attributes":{},"type":"types","children":[{"attributes":{"type":"Boolean"},"type":"entry"}]}]}]},{"attributes":{"text":"<p>Returns the content height of the first element in the collection.\nThis is the maximum height the element can use, excluding borders,\nmargins, padding or scroll bars.</p>"},"type":"desc"},{"attributes":{"targetMethod":"","targetClass":"qxWeb","sourceMethod":"getContentHeight","sourceClass":"qx.module.Css"},"type":"attach"},{"attributes":{},"type":"return","children":[{"attributes":{"text":"<p>Computed content height</p>"},"type":"desc"},{"attributes":{},"type":"types","children":[{"attributes":{"type":"Number"},"type":"entry"}]}]}]},{"attributes":{"isStatic":false,"group":"Core","name":"getContentWidth","sourceMethod":"getContentWidth","line":285,"sourceClass":"qx.module.Css"},"type":"method","children":[{"attributes":{},"type":"params","children":[{"attributes":{"defaultValue":"false","optional":true,"name":"force"},"type":"param","children":[{"attributes":{"text":"<p>When true also get the content width of a <em>non displayed</em> element</p>"},"type":"desc"},{"attributes":{},"type":"types","children":[{"attributes":{"type":"Boolean"},"type":"entry"}]}]}]},{"attributes":{"text":"<p>Returns the content width of the first element in the collection.\nThis is the maximum width the element can use, excluding borders,\nmargins, padding or scroll bars.</p>"},"type":"desc"},{"attributes":{"targetMethod":"","targetClass":"qxWeb","sourceMethod":"getContentWidth","sourceClass":"qx.module.Css"},"type":"attach"},{"attributes":{},"type":"return","children":[{"attributes":{"text":"<p>Computed content width</p>"},"type":"desc"},{"attributes":{},"type":"types","children":[{"attributes":{"type":"Number"},"type":"entry"}]}]}]},{"attributes":{"isStatic":false,"group":"Core","name":"getHeight","sourceMethod":"getHeight","line":250,"sourceClass":"qx.module.Css"},"type":"method","children":[{"attributes":{},"type":"params","children":[{"attributes":{"defaultValue":"false","optional":true,"name":"force"},"type":"param","children":[{"attributes":{"text":"<p>When true also get the height of a <em>non displayed</em> element</p>"},"type":"desc"},{"attributes":{},"type":"types","children":[{"attributes":{"type":"Boolean"},"type":"entry"}]}]}]},{"attributes":{"text":"<p>Returns the rendered height of the first element in the collection.</p>"},"type":"desc"},{"attributes":{"targetMethod":"","targetClass":"qxWeb","sourceMethod":"getHeight","sourceClass":"qx.module.Css"},"type":"attach"},{"attributes":{},"type":"return","children":[{"attributes":{"text":"<p>The first item&#8217;s rendered height</p>"},"type":"desc"},{"attributes":{},"type":"types","children":[{"attributes":{"type":"Number"},"type":"entry"}]}]}]},{"attributes":{"isStatic":false,"group":"Core","name":"getOffset","sourceMethod":"getOffset","line":378,"sourceClass":"qx.module.Css"},"type":"method","children":[{"attributes":{},"type":"params","children":[{"attributes":{"defaultValue":"box","optional":true,"name":"mode"},"type":"param","children":[{"attributes":{"text":"<p>A supported option. See comment above.</p>"},"type":"desc"},{"attributes":{},"type":"types","children":[{"attributes":{"type":"String"},"type":"entry"}]}]}]},{"attributes":{"text":"<p>Returns the computed location of the given element in the context of the\ndocument dimensions.</p>\n\n<p>Supported modes:</p>\n\n<ul>\n<li><code>margin</code>: Calculate from the margin box of the element (bigger than the visual appearance: including margins of given element)</li>\n<li><code>box</code>: Calculates the offset box of the element (default, uses the same size as visible)</li>\n<li><code>border</code>: Calculate the border box (useful to align to border edges of two elements).</li>\n<li><code>scroll</code>: Calculate the scroll box (relevant for absolute positioned content).</li>\n<li><code>padding</code>: Calculate the padding box (relevant for static/relative positioned content).</li>\n</ul>"},"type":"desc"},{"attributes":{"targetMethod":"","targetClass":"qxWeb","sourceMethod":"getOffset","sourceClass":"qx.module.Css"},"type":"attach"},{"attributes":{},"type":"return","children":[{"attributes":{"text":"<p>A map with the keys <code>left</code>, <code>top</code>, <code>right</code> and <code>bottom</code> which contains the distance of the element relative to the document.</p>"},"type":"desc"},{"attributes":{},"type":"types","children":[{"attributes":{"type":"Map"},"type":"entry"}]}]}]},{"attributes":{"isStatic":false,"group":"Core","name":"getPosition","sourceMethod":"getPosition","line":349,"sourceClass":"qx.module.Css"},"type":"method","children":[{"attributes":{"text":"<p>Returns the distance between the first element in the collection and its\noffset parent</p>"},"type":"desc"},{"attributes":{"targetMethod":"","targetClass":"qxWeb","sourceMethod":"getPosition","sourceClass":"qx.module.Css"},"type":"attach"},{"attributes":{},"type":"return","children":[{"attributes":{"text":"<p>a map with the keys <code>left</code> and <code>top</code> containing the distance between the elements</p>"},"type":"desc"},{"attributes":{},"type":"types","children":[{"attributes":{"type":"Map"},"type":"entry"}]}]}]},{"attributes":{"isStatic":false,"group":"Core","name":"getStyle","sourceMethod":"getStyle","line":416,"sourceClass":"qx.module.Css"},"type":"method","children":[{"attributes":{},"type":"params","children":[{"attributes":{"name":"name"},"type":"param","children":[{"attributes":{"text":"<p>Style property name</p>"},"type":"desc"},{"attributes":{},"type":"types","children":[{"attributes":{"type":"String"},"type":"entry"}]}]}]},{"attributes":{"text":"<p>Returns the value of the given style property for the first item in the\ncollection.</p>"},"type":"desc"},{"attributes":{"targetMethod":"","targetClass":"qxWeb","sourceMethod":"getStyle","sourceClass":"qx.module.Css"},"type":"attach"},{"attributes":{},"type":"return","children":[{"attributes":{"text":"<p>Style property value</p>"},"type":"desc"},{"attributes":{},"type":"types","children":[{"attributes":{"type":"var"},"type":"entry"}]}]}]},{"attributes":{"isStatic":false,"group":"Core","name":"getStyles","sourceMethod":"getStyles","line":450,"sourceClass":"qx.module.Css"},"type":"method","children":[{"attributes":{},"type":"params","children":[{"attributes":{"name":"names"},"type":"param","children":[{"attributes":{"text":"<p>List of style property names</p>"},"type":"desc"},{"attributes":{},"type":"types","children":[{"attributes":{"type":"String","dimensions":1},"type":"entry"}]}]}]},{"attributes":{"text":"<p>Returns the values of multiple style properties for each item in the\ncollection</p>"},"type":"desc"},{"attributes":{"targetMethod":"","targetClass":"qxWeb","sourceMethod":"getStyles","sourceClass":"qx.module.Css"},"type":"attach"},{"attributes":{},"type":"return","children":[{"attributes":{"text":"<p>Map of style property name/value pairs</p>"},"type":"desc"},{"attributes":{},"type":"types","children":[{"attributes":{"type":"Map"},"type":"entry"}]}]}]},{"attributes":{"isStatic":false,"group":"Core","name":"getWidth","sourceMethod":"getWidth","line":261,"sourceClass":"qx.module.Css"},"type":"method","children":[{"attributes":{},"type":"params","children":[{"attributes":{"defaultValue":"false","optional":true,"name":"force"},"type":"param","children":[{"attributes":{"text":"<p>When true also get the width of a <em>non displayed</em> element</p>"},"type":"desc"},{"attributes":{},"type":"types","children":[{"attributes":{"type":"Boolean"},"type":"entry"}]}]}]},{"attributes":{"text":"<p>Returns the rendered width of the first element in the collection</p>"},"type":"desc"},{"attributes":{"targetMethod":"","targetClass":"qxWeb","sourceMethod":"getWidth","sourceClass":"qx.module.Css"},"type":"attach"},{"attributes":{},"type":"return","children":[{"attributes":{"text":"<p>The first item&#8217;s rendered width</p>"},"type":"desc"},{"attributes":{},"type":"types","children":[{"attributes":{"type":"Number"},"type":"entry"}]}]}]},{"attributes":{"isStatic":false,"group":"Core","name":"hasClass","sourceMethod":"hasClass","line":527,"sourceClass":"qx.module.Css"},"type":"method","children":[{"attributes":{},"type":"params","children":[{"attributes":{"name":"name"},"type":"param","children":[{"attributes":{"text":"<p>Class name to check for</p>"},"type":"desc"},{"attributes":{},"type":"types","children":[{"attributes":{"type":"String"},"type":"entry"}]}]}]},{"attributes":{"text":"<p>Checks if the first element in the collection has the given class name</p>"},"type":"desc"},{"attributes":{"targetMethod":"","targetClass":"qxWeb","sourceMethod":"hasClass","sourceClass":"qx.module.Css"},"type":"attach"},{"attributes":{},"type":"return","children":[{"attributes":{"text":"<code>true</code> if the first item has the given class name"},"type":"desc"},{"attributes":{},"type":"types","children":[{"attributes":{"type":"Boolean"},"type":"entry"}]}]}]},{"attributes":{"isStatic":false,"group":"Core","name":"hide","sourceMethod":"hide","line":328,"sourceClass":"qx.module.Css"},"type":"method","children":[{"attributes":{"text":"<p>Hides all elements in the collection by setting their &#8220;display&#8221;\nstyle to &#8220;none&#8221;. The previous value is stored so it can be re-applied\nwhen {@link #show} is called.</p>"},"type":"desc"},{"attributes":{"targetMethod":"","targetClass":"qxWeb","sourceMethod":"hide","sourceClass":"qx.module.Css"},"type":"attach"},{"attributes":{},"type":"return","children":[{"attributes":{"text":"<p>The collection for chaining</p>"},"type":"desc"},{"attributes":{},"type":"types","children":[{"attributes":{"type":"qxWeb"},"type":"entry"}]}]}]},{"attributes":{"isStatic":false,"group":"Core","name":"removeClass","sourceMethod":"removeClass","line":496,"sourceClass":"qx.module.Css"},"type":"method","children":[{"attributes":{},"type":"params","children":[{"attributes":{"name":"name"},"type":"param","children":[{"attributes":{"text":"<p>The class name to remove</p>"},"type":"desc"},{"attributes":{},"type":"types","children":[{"attributes":{"type":"String"},"type":"entry"}]}]}]},{"attributes":{"text":"<p>Removes a class name from each element in the collection</p>"},"type":"desc"},{"attributes":{"targetMethod":"","targetClass":"qxWeb","sourceMethod":"removeClass","sourceClass":"qx.module.Css"},"type":"attach"},{"attributes":{},"type":"return","children":[{"attributes":{"text":"<p>The collection for chaining</p>"},"type":"desc"},{"attributes":{},"type":"types","children":[{"attributes":{"type":"qxWeb"},"type":"entry"}]}]}]},{"attributes":{"isStatic":false,"group":"Core","name":"removeClasses","sourceMethod":"removeClasses","line":512,"sourceClass":"qx.module.Css"},"type":"method","children":[{"attributes":{},"type":"params","children":[{"attributes":{"name":"names"},"type":"param","children":[{"attributes":{"text":"<p>List of class names to remove</p>"},"type":"desc"},{"attributes":{},"type":"types","children":[{"attributes":{"type":"String","dimensions":1},"type":"entry"}]}]}]},{"attributes":{"text":"<p>Removes multiple class names from each element in the collection.\nUse {@link qx.module.Attribute#removeAttribute} to remove all classes.</p>"},"type":"desc"},{"attributes":{"targetMethod":"","targetClass":"qxWeb","sourceMethod":"removeClasses","sourceClass":"qx.module.Css"},"type":"attach"},{"attributes":{},"type":"return","children":[{"attributes":{"text":"<p>The collection for chaining</p>"},"type":"desc"},{"attributes":{},"type":"types","children":[{"attributes":{"type":"qxWeb"},"type":"entry"}]}]}]},{"attributes":{"isStatic":false,"group":"Core","name":"replaceClass","sourceMethod":"replaceClass","line":590,"sourceClass":"qx.module.Css"},"type":"method","children":[{"attributes":{},"type":"params","children":[{"attributes":{"name":"oldName"},"type":"param","children":[{"attributes":{"text":"<p>Class name to remove</p>"},"type":"desc"},{"attributes":{},"type":"types","children":[{"attributes":{"type":"String"},"type":"entry"}]}]},{"attributes":{"name":"newName"},"type":"param","children":[{"attributes":{"text":"<p>Class name to add</p>"},"type":"desc"},{"attributes":{},"type":"types","children":[{"attributes":{"type":"String"},"type":"entry"}]}]}]},{"attributes":{"text":"<p>Replaces a class name on each element in the collection</p>"},"type":"desc"},{"attributes":{"targetMethod":"","targetClass":"qxWeb","sourceMethod":"replaceClass","sourceClass":"qx.module.Css"},"type":"attach"},{"attributes":{},"type":"return","children":[{"attributes":{"text":"<p>The collection for chaining</p>"},"type":"desc"},{"attributes":{},"type":"types","children":[{"attributes":{"type":"qxWeb"},"type":"entry"}]}]}]},{"attributes":{"isStatic":false,"group":"Core","name":"setStyle","sourceMethod":"setStyle","line":397,"sourceClass":"qx.module.Css"},"type":"method","children":[{"attributes":{},"type":"params","children":[{"attributes":{"name":"name"},"type":"param","children":[{"attributes":{"text":"<p>Name of the style property to modify</p>"},"type":"desc"},{"attributes":{},"type":"types","children":[{"attributes":{"type":"String"},"type":"entry"}]}]},{"attributes":{"name":"value"},"type":"param","children":[{"attributes":{"text":"<p>The value to apply</p>"},"type":"desc"},{"attributes":{},"type":"types","children":[{"attributes":{"type":"var"},"type":"entry"}]}]}]},{"attributes":{"text":"<p>Modifies the given style property on all elements in the collection.</p>"},"type":"desc"},{"attributes":{"targetMethod":"","targetClass":"qxWeb","sourceMethod":"setStyle","sourceClass":"qx.module.Css"},"type":"attach"},{"attributes":{},"type":"return","children":[{"attributes":{"text":"<p>The collection for chaining</p>"},"type":"desc"},{"attributes":{},"type":"types","children":[{"attributes":{"type":"qxWeb"},"type":"entry"}]}]}]},{"attributes":{"isStatic":false,"group":"Core","name":"setStyles","sourceMethod":"setStyles","line":434,"sourceClass":"qx.module.Css"},"type":"method","children":[{"attributes":{},"type":"params","children":[{"attributes":{"name":"styles"},"type":"param","children":[{"attributes":{"text":"<p>A map of style property name/value pairs</p>"},"type":"desc"},{"attributes":{},"type":"types","children":[{"attributes":{"type":"Map"},"type":"entry"}]}]}]},{"attributes":{"text":"<p>Sets multiple style properties for each item in the collection.</p>"},"type":"desc"},{"attributes":{"targetMethod":"","targetClass":"qxWeb","sourceMethod":"setStyles","sourceClass":"qx.module.Css"},"type":"attach"},{"attributes":{},"type":"return","children":[{"attributes":{"text":"<p>The collection for chaining</p>"},"type":"desc"},{"attributes":{},"type":"types","children":[{"attributes":{"type":"qxWeb"},"type":"entry"}]}]}]},{"attributes":{"isStatic":false,"group":"Core","name":"show","sourceMethod":"show","line":298,"sourceClass":"qx.module.Css"},"type":"method","children":[{"attributes":{"text":"<p>Shows any elements with &#8220;display: none&#8221; in the collection. If an element\nwas hidden by using the {@link #hide} method, its previous\n&#8220;display&#8221; style value will be re-applied. Otherwise, the\ndefault &#8220;display&#8221; value for the element type will be applied.</p>"},"type":"desc"},{"attributes":{"targetMethod":"","targetClass":"qxWeb","sourceMethod":"show","sourceClass":"qx.module.Css"},"type":"attach"},{"attributes":{},"type":"return","children":[{"attributes":{"text":"<p>The collection for chaining</p>"},"type":"desc"},{"attributes":{},"type":"types","children":[{"attributes":{"type":"qxWeb"},"type":"entry"}]}]}]},{"attributes":{"isStatic":false,"group":"Core","name":"toggleClass","sourceMethod":"toggleClass","line":556,"sourceClass":"qx.module.Css"},"type":"method","children":[{"attributes":{},"type":"params","children":[{"attributes":{"name":"name"},"type":"param","children":[{"attributes":{"text":"<p>Class name</p>"},"type":"desc"},{"attributes":{},"type":"types","children":[{"attributes":{"type":"String"},"type":"entry"}]}]}]},{"attributes":{"text":"<p>Toggles the given class name on each item in the collection</p>"},"type":"desc"},{"attributes":{"targetMethod":"","targetClass":"qxWeb","sourceMethod":"toggleClass","sourceClass":"qx.module.Css"},"type":"attach"},{"attributes":{},"type":"return","children":[{"attributes":{"text":"<p>The collection for chaining</p>"},"type":"desc"},{"attributes":{},"type":"types","children":[{"attributes":{"type":"qxWeb"},"type":"entry"}]}]}]},{"attributes":{"isStatic":false,"group":"Core","name":"toggleClasses","sourceMethod":"toggleClasses","line":574,"sourceClass":"qx.module.Css"},"type":"method","children":[{"attributes":{},"type":"params","children":[{"attributes":{"name":"names"},"type":"param","children":[{"attributes":{"text":"<p>Class names</p>"},"type":"desc"},{"attributes":{},"type":"types","children":[{"attributes":{"type":"String","dimensions":1},"type":"entry"}]}]}]},{"attributes":{"text":"<p>Toggles the given list of class names on each item in the collection</p>"},"type":"desc"},{"attributes":{"targetMethod":"","targetClass":"qxWeb","sourceMethod":"toggleClasses","sourceClass":"qx.module.Css"},"type":"attach"},{"attributes":{},"type":"return","children":[{"attributes":{"text":"<p>The collection for chaining</p>"},"type":"desc"},{"attributes":{},"type":"types","children":[{"attributes":{"type":"qxWeb"},"type":"entry"}]}]}]}],"fileName":"qx.module.Css","group":"Core","desc":"<p><span class=\"caps\">CSS</span>/Style property manipulation module</p>","events":[]},"Template":{"static":[{"attributes":{"line":46,"sourceMethod":"get","isStatic":true,"sourceClass":"qx.module.Template","name":"get"},"type":"method","children":[{"attributes":{},"type":"params","children":[{"attributes":{"name":"id"},"type":"param","children":[{"attributes":{"text":"<p>The id of the <span class=\"caps\">HTML</span> template in the <span class=\"caps\">DOM</span>.</p>"},"type":"desc"},{"attributes":{},"type":"types","children":[{"attributes":{"type":"String"},"type":"entry"}]}]},{"attributes":{"name":"view"},"type":"param","children":[{"attributes":{"text":"<p>The object holding the data to render.</p>"},"type":"desc"},{"attributes":{},"type":"types","children":[{"attributes":{"type":"Object"},"type":"entry"}]}]},{"attributes":{"name":"partials"},"type":"param","children":[{"attributes":{"text":"<p>Object holding parts of a template.</p>"},"type":"desc"},{"attributes":{},"type":"types","children":[{"attributes":{"type":"Object"},"type":"entry"}]}]}]},{"attributes":{"text":"<p>Helper method which provides direct access to templates stored as <span class=\"caps\">HTML</span> in\nthe <span class=\"caps\">DOM</span>. The <span class=\"caps\">DOM</span> node with the given ID will be treated as a template,\nparsed and a new <span class=\"caps\">DOM</span> element will be returned containing the parsed data.\nKeep in mind that templates can only have one root element.\nAdditionally, you should not put the template into a regular, hidden\n<span class=\"caps\">DOM</span> element because the template may not be valid <span class=\"caps\">HTML</span> due to the containing\nmustache tags. We suggest to put it into a script tag with the type\n<code>text/template</code>.</p>"},"type":"desc"},{"attributes":{"targetMethod":"template.get","targetClass":"qxWeb","sourceMethod":"get","sourceClass":"qx.module.Template"},"type":"attachStatic"},{"attributes":{},"type":"return","children":[{"attributes":{"text":"<p>Collection containing a single <span class=\"caps\">DOM</span> element with the parsed template data.</p>"},"type":"desc"},{"attributes":{},"type":"types","children":[{"attributes":{"type":"qxWeb"},"type":"entry"}]}]}]},{"attributes":{"line":62,"sourceMethod":"render","isStatic":true,"sourceClass":"qx.module.Template","name":"render"},"type":"method","children":[{"attributes":{},"type":"params","children":[{"attributes":{"name":"template"},"type":"param","children":[{"attributes":{"text":"<p>The String containing the template.</p>"},"type":"desc"},{"attributes":{},"type":"types","children":[{"attributes":{"type":"String"},"type":"entry"}]}]},{"attributes":{"name":"view"},"type":"param","children":[{"attributes":{"text":"<p>The object holding the data to render.</p>"},"type":"desc"},{"attributes":{},"type":"types","children":[{"attributes":{"type":"Object"},"type":"entry"}]}]},{"attributes":{"name":"partials"},"type":"param","children":[{"attributes":{"text":"<p>Object holding parts of a template.</p>"},"type":"desc"},{"attributes":{},"type":"types","children":[{"attributes":{"type":"Object"},"type":"entry"}]}]}]},{"attributes":{"text":"<p>Original and only template method of mustache.js. For further\ndocumentation, please visit <a href=\"https://github.com/janl/mustache.js\">mustache.js</a>.</p>"},"type":"desc"},{"attributes":{"targetMethod":"template.render","targetClass":"qxWeb","sourceMethod":"render","sourceClass":"qx.module.Template"},"type":"attachStatic"},{"attributes":{},"type":"return","children":[{"attributes":{"text":"<p>The parsed template.</p>"},"type":"desc"},{"attributes":{},"type":"types","children":[{"attributes":{"type":"String"},"type":"entry"}]}]}]},{"attributes":{"line":80,"sourceMethod":"renderToNode","isStatic":true,"sourceClass":"qx.module.Template","name":"renderToNode"},"type":"method","children":[{"attributes":{},"type":"params","children":[{"attributes":{"name":"template"},"type":"param","children":[{"attributes":{"text":"<p>The String containing the template.</p>"},"type":"desc"},{"attributes":{},"type":"types","children":[{"attributes":{"type":"String"},"type":"entry"}]}]},{"attributes":{"name":"view"},"type":"param","children":[{"attributes":{"text":"<p>The object holding the data to render.</p>"},"type":"desc"},{"attributes":{},"type":"types","children":[{"attributes":{"type":"Object"},"type":"entry"}]}]},{"attributes":{"name":"partials"},"type":"param","children":[{"attributes":{"text":"<p>Object holding parts of a template.</p>"},"type":"desc"},{"attributes":{},"type":"types","children":[{"attributes":{"type":"Object"},"type":"entry"}]}]}]},{"attributes":{"text":"<p>Combines {@link #render} and {@link #get}. Input is equal to {@link #render}\nand output is equal to {@link #get}. The advantage over {@link #get}\nis that you don&#8217;t need a <span class=\"caps\">HTML</span> template but can use a template\nstring and still get a collection. Keep in mind that templates\ncan only have one root element.</p>"},"type":"desc"},{"attributes":{"targetMethod":"template.renderToNode","targetClass":"qxWeb","sourceMethod":"renderToNode","sourceClass":"qx.module.Template"},"type":"attachStatic"},{"attributes":{},"type":"return","children":[{"attributes":{"text":"<p>Collection containing a single <span class=\"caps\">DOM</span> element with the parsed template data.</p>"},"type":"desc"},{"attributes":{},"type":"types","children":[{"attributes":{"type":"qxWeb"},"type":"entry"}]}]}]}],"member":[],"fileName":"qx.module.Template","group":"Extras","desc":"<p><span class=\"caps\">HTML</span> templating module. This is a wrapper for mustache.js which is a\n&#8220;framework-agnostic way to render logic-free views&#8221;.</p>\n\n<p>For further details, please visit the mustache.js documentation here:\n  <a href=\"https://github.com/janl/mustache.js/blob/master/README.md\">https://github.com/janl/mustache.js/blob/master/README.md</a></p>","events":[]},"Io":{"static":[{"attributes":{"isStatic":true,"group":"IO","name":"jsonp","sourceMethod":"jsonp","line":95,"sourceClass":"qx.module.Io"},"type":"method","children":[{"attributes":{},"type":"params","children":[{"attributes":{"name":"url"},"type":"param","children":[{"attributes":{"text":"<p>Mandatory <span class=\"caps\">URL</span> to load the data from.</p>"},"type":"desc"},{"attributes":{},"type":"types","children":[{"attributes":{"type":"String"},"type":"entry"}]}]},{"attributes":{"optional":true,"name":"settings"},"type":"param","children":[{"attributes":{"text":"<p>Optional settings map which may contain one of the following settings: * <code>callbackName</code>: The name of the callback which will be called by the loaded script. * <code>callbackParam</code>: The name of the callback expected by the server</p>"},"type":"desc"},{"attributes":{},"type":"types","children":[{"attributes":{"type":"Map"},"type":"entry"}]}]}]},{"attributes":{"text":"<p>Returns a predefined script tag wrapper which can be used to load data\nfrom cross-domain origins via <span class=\"caps\">JSONP</span>.</p>"},"type":"desc"},{"attributes":{"targetMethod":"io.jsonp","targetClass":"qxWeb","sourceMethod":"jsonp","sourceClass":"qx.module.Io"},"type":"attachStatic"},{"attributes":{},"type":"return","children":[{"attributes":{"text":"<p>The request object.</p>"},"type":"desc"},{"attributes":{},"type":"types","children":[{"attributes":{"type":"qx.bom.request.Jsonp"},"type":"entry"}]}]}]},{"attributes":{"isStatic":true,"group":"IO","name":"script","sourceMethod":"script","line":74,"sourceClass":"qx.module.Io"},"type":"method","children":[{"attributes":{},"type":"params","children":[{"attributes":{"name":"url"},"type":"param","children":[{"attributes":{"text":"<p>Mandatory <span class=\"caps\">URL</span> to load the data from.</p>"},"type":"desc"},{"attributes":{},"type":"types","children":[{"attributes":{"type":"String"},"type":"entry"}]}]}]},{"attributes":{"text":"<p>Returns a predefined script tag wrapper which can be used to load data\nfrom cross-domain origins.</p>"},"type":"desc"},{"attributes":{"targetMethod":"io.script","targetClass":"qxWeb","sourceMethod":"script","sourceClass":"qx.module.Io"},"type":"attachStatic"},{"attributes":{},"type":"return","children":[{"attributes":{"text":"<p>The request object.</p>"},"type":"desc"},{"attributes":{},"type":"types","children":[{"attributes":{"type":"qx.bom.request.Script"},"type":"entry"}]}]}]},{"attributes":{"isStatic":true,"group":"IO","name":"xhr","sourceMethod":"xhr","line":50,"sourceClass":"qx.module.Io"},"type":"method","children":[{"attributes":{},"type":"params","children":[{"attributes":{"name":"url"},"type":"param","children":[{"attributes":{"text":"<p>Mandatory <span class=\"caps\">URL</span> to load the data from.</p>"},"type":"desc"},{"attributes":{},"type":"types","children":[{"attributes":{"type":"String"},"type":"entry"}]}]},{"attributes":{"optional":true,"name":"settings"},"type":"param","children":[{"attributes":{"text":"<p>Optional settings map which may contain one of the following settings: <ul> <li><code>method</code> The method of the request. Default: <code><span class=\"caps\">GET</span></code></li> <li><code>async</code> flag to mark the request as asynchronous. Default: <code>true</code></li> <li><code>header</code> A map of request headers.</li> </ul></p>"},"type":"desc"},{"attributes":{},"type":"types","children":[{"attributes":{"type":"Map"},"type":"entry"}]}]}]},{"attributes":{"text":"<p>Returns a configured XMLHttpRequest object. Using the send method will\nfinally send the request.</p>"},"type":"desc"},{"attributes":{"targetMethod":"io.xhr","targetClass":"qxWeb","sourceMethod":"xhr","sourceClass":"qx.module.Io"},"type":"attachStatic"},{"attributes":{},"type":"return","children":[{"attributes":{"text":"<p>The request object.</p>"},"type":"desc"},{"attributes":{},"type":"types","children":[{"attributes":{"type":"qx.bom.request.Xhr"},"type":"entry"}]}]}]}],"member":[],"fileName":"qx.module.Io","group":"IO","desc":"<p>This module provides basic IO functionality. It contains three ways to load\ndata:</p>\n\n<ul>\n<li>XMLHttpRequest</li>\n<li>Script tag</li>\n<li>Script tag using <span class=\"caps\">JSONP</span></li>\n</ul>","events":[]},"Placeholder":{"static":[{"attributes":{"line":53,"sourceMethod":"update","isStatic":true,"sourceClass":"qx.module.Placeholder","name":"update"},"type":"method","children":[{"attributes":{"text":"<p>Queries for all input and textarea elements on the page and updates\ntheir placeholder.</p>"},"type":"desc"},{"attributes":{"targetMethod":"placeholder.update","targetClass":"qxWeb","sourceMethod":"update","sourceClass":"qx.module.Placeholder"},"type":"attachStatic"}]}],"member":[{"attributes":{"line":139,"sourceMethod":"updatePlaceholder","isStatic":false,"sourceClass":"qx.module.Placeholder","name":"updatePlaceholder"},"type":"method","children":[{"attributes":{"text":"<p>Updates the placeholders for input&#8217;s and textarea&#8217;s in the collection.\nThis includes positioning, styles and <span class=\"caps\">DOM</span> positioning.\nIn case the browser supports native placeholders, this methods simply\ndoes nothing.</p>"},"type":"desc"},{"attributes":{"targetMethod":"","targetClass":"qxWeb","sourceMethod":"updatePlaceholder","sourceClass":"qx.module.Placeholder"},"type":"attach"},{"attributes":{},"type":"return","children":[{"attributes":{"text":"<p>The collection for chaining</p>"},"type":"desc"},{"attributes":{},"type":"types","children":[{"attributes":{"type":"qxWeb"},"type":"entry"}]}]}]}],"fileName":"qx.module.Placeholder","group":"Extras","desc":"<p>The module supplies a fallback implementation for placeholders, which is\nused on input and textarea elements. If the browser supports native placeholders\nthe <span class=\"caps\">API</span> silently ignores all calls. If not, an element will be created for every\ngiven input element and acts as placeholder. Most modern browsers support\nplaceholders which makes the fallback only relevant for IE < 10 and FF < 4.</p>\n\n<ul>\n<li><a href=\"http://dev.w3.org/html5/spec/single-page.html#the-placeholder-attribute\"><span class=\"caps\">HTML</span> Spec</a></li>\n</ul>\n\n<ul>\n<li><a href=\"http://caniuse.com/#feat=input-placeholder\">Browser Support</a></li>\n</ul>","events":[]},"util.Type":{"static":[{"attributes":{"isStatic":true,"group":"Utilities","name":"get","sourceMethod":"get","line":1,"sourceClass":"qx.module.util.Type"},"type":"method","children":[{"attributes":{},"type":"params","children":[{"attributes":{"name":"value"},"type":"param","children":[{"attributes":{"text":"<p>Value to get the class for.</p>"},"type":"desc"},{"attributes":{},"type":"types","children":[{"attributes":{"type":"var"},"type":"entry"}]}]}]},{"attributes":{"text":"<p>Get the internal class of the value. The following classes are possible:</p>\n\n<pre>\n<code>\"String\"</code>,\n<code>\"Array\"</code>,\n<code>\"Object\"</code>,\n<code>\"RegExp\"</code>,\n<code>\"Number\"</code>,\n<code>\"Boolean\"</code>,\n<code>\"Date\"</code>,\n<code>\"Function\"</code>,\n<code>\"Error\"</code>\n</pre>"},"type":"desc"},{"attributes":{"targetMethod":"type.get","targetClass":"qxWeb","sourceMethod":"get","sourceClass":"qx.module.util.Type"},"type":"attachStatic"},{"attributes":{},"type":"return","children":[{"attributes":{"text":"<p>The internal class of the value.</p>"},"type":"desc"},{"attributes":{},"type":"types","children":[{"attributes":{"type":"String"},"type":"entry"}]}]}]}],"member":[],"fileName":"qx.module.util.Type","group":"Utilities","desc":"<p>Utility for checking the type of a variable.\nIt adds a <code>type</code> key static to q and offers the given method.</p>","events":[]},"Manipulating":{"static":[{"attributes":{"isStatic":true,"group":"Core","name":"create","sourceMethod":"create","line":149,"sourceClass":"qx.module.Manipulating"},"type":"method","children":[{"attributes":{},"type":"params","children":[{"attributes":{"name":"html"},"type":"param","children":[{"attributes":{"text":"<p><span class=\"caps\">HTML</span> string or <span class=\"caps\">DOM</span> element(s)</p>"},"type":"desc"},{"attributes":{},"type":"types","children":[{"attributes":{"type":"String"},"type":"entry"},{"attributes":{"type":"Element","dimensions":1},"type":"entry"}]}]},{"attributes":{"defaultValue":"document","optional":true,"name":"context"},"type":"param","children":[{"attributes":{"text":"<p>Context in which the elements should be created</p>"},"type":"desc"},{"attributes":{},"type":"types","children":[{"attributes":{"type":"Document"},"type":"entry"}]}]}]},{"attributes":{"text":"<p>Creates a new collection from the given argument. This can either be an\n<span class=\"caps\">HTML</span> string, a single <span class=\"caps\">DOM</span> element or an array of elements</p>\n\n<p>When no <code>context</code> is given the global document is used to\ncreate new <span class=\"caps\">DOM</span> elements.</p>\n\n<strong>Note:</strong> When a complex HTML string is provided the <code>innerHTML</code>\nmechanism of the browser is used. Some browsers do filter out elements like <code>&lt;html&gt;</code>,\n<code>&lt;head&gt;</code> or <code>&lt;body&gt;</code>. The better approach is to create\na single element and the appending the child nodes."},"type":"desc"},{"attributes":{"targetMethod":"","targetClass":"qxWeb","sourceMethod":"create","sourceClass":"qx.module.Manipulating"},"type":"attachStatic"},{"attributes":{},"type":"return","children":[{"attributes":{"text":"<p>Collection of elements</p>"},"type":"desc"},{"attributes":{},"type":"types","children":[{"attributes":{"type":"qxWeb"},"type":"entry"}]}]}]}],"member":[{"attributes":{"isStatic":false,"group":"Core","name":"after","sourceMethod":"after","line":407,"sourceClass":"qx.module.Manipulating"},"type":"method","children":[{"attributes":{},"type":"params","children":[{"attributes":{"name":"content"},"type":"param","children":[{"attributes":{"text":"<p><span class=\"caps\">HTML</span> string(s), <span class=\"caps\">DOM</span> element(s) or collection to insert</p>"},"type":"desc"},{"attributes":{},"type":"types","children":[{"attributes":{"type":"String"},"type":"entry"},{"attributes":{"type":"String","dimensions":1},"type":"entry"},{"attributes":{"type":"Element"},"type":"entry"},{"attributes":{"type":"Element","dimensions":1},"type":"entry"},{"attributes":{"type":"qxWeb"},"type":"entry"}]}]}]},{"attributes":{"text":"<p>Inserts content after each element in the collection. This can either\nbe an <span class=\"caps\">HTML</span> string, an array of <span class=\"caps\">HTML</span> strings, a single <span class=\"caps\">DOM</span> element or an\narray of elements.</p>"},"type":"desc"},{"attributes":{"targetMethod":"","targetClass":"qxWeb","sourceMethod":"after","sourceClass":"qx.module.Manipulating"},"type":"attach"},{"attributes":{},"type":"return","children":[{"attributes":{"text":"<p>The collection for chaining</p>"},"type":"desc"},{"attributes":{},"type":"types","children":[{"attributes":{"type":"qxWeb"},"type":"entry"}]}]}]},{"attributes":{"isStatic":false,"group":"Core","name":"append","sourceMethod":"append","line":190,"sourceClass":"qx.module.Manipulating"},"type":"method","children":[{"attributes":{},"type":"params","children":[{"attributes":{"name":"html"},"type":"param","children":[{"attributes":{"text":"<p><span class=\"caps\">HTML</span> string or <span class=\"caps\">DOM</span> element(s) to append</p>"},"type":"desc"},{"attributes":{},"type":"types","children":[{"attributes":{"type":"String"},"type":"entry"},{"attributes":{"type":"Element","dimensions":1},"type":"entry"},{"attributes":{"type":"qxWeb"},"type":"entry"}]}]}]},{"attributes":{"text":"<p>Appends content to each element in the current set. Accepts an <span class=\"caps\">HTML</span> string,\na single <span class=\"caps\">DOM</span> element or an array of elements</p>"},"type":"desc"},{"attributes":{"targetMethod":"","targetClass":"qxWeb","sourceMethod":"append","sourceClass":"qx.module.Manipulating"},"type":"attach"},{"attributes":{},"type":"return","children":[{"attributes":{"text":"<p>The collection for chaining</p>"},"type":"desc"},{"attributes":{},"type":"types","children":[{"attributes":{"type":"qxWeb"},"type":"entry"}]}]}]},{"attributes":{"isStatic":false,"group":"Core","name":"appendTo","sourceMethod":"appendTo","line":220,"sourceClass":"qx.module.Manipulating"},"type":"method","children":[{"attributes":{},"type":"params","children":[{"attributes":{"name":"parent"},"type":"param","children":[{"attributes":{"text":"<p>Parent selector expression or list of parent elements</p>"},"type":"desc"},{"attributes":{},"type":"types","children":[{"attributes":{"type":"String"},"type":"entry"},{"attributes":{"type":"Element","dimensions":1},"type":"entry"},{"attributes":{"type":"qxWeb"},"type":"entry"}]}]}]},{"attributes":{"text":"<p>Appends all items in the collection to the specified parents. If multiple\nparents are given, the items will be moved to the first parent, while\nclones of the items will be appended to subsequent parents.</p>"},"type":"desc"},{"attributes":{"targetMethod":"","targetClass":"qxWeb","sourceMethod":"appendTo","sourceClass":"qx.module.Manipulating"},"type":"attach"},{"attributes":{},"type":"return","children":[{"attributes":{"text":"<p>The collection for chaining</p>"},"type":"desc"},{"attributes":{},"type":"types","children":[{"attributes":{"type":"qxWeb"},"type":"entry"}]}]}]},{"attributes":{"isStatic":false,"group":"Core","name":"before","sourceMethod":"before","line":373,"sourceClass":"qx.module.Manipulating"},"type":"method","children":[{"attributes":{},"type":"params","children":[{"attributes":{"name":"content"},"type":"param","children":[{"attributes":{"text":"<p><span class=\"caps\">HTML</span> string(s), <span class=\"caps\">DOM</span> element(s) or collection to insert</p>"},"type":"desc"},{"attributes":{},"type":"types","children":[{"attributes":{"type":"String"},"type":"entry"},{"attributes":{"type":"String","dimensions":1},"type":"entry"},{"attributes":{"type":"Element"},"type":"entry"},{"attributes":{"type":"Element","dimensions":1},"type":"entry"},{"attributes":{"type":"qxWeb"},"type":"entry"}]}]}]},{"attributes":{"text":"<p>Inserts content before each element in the collection. This can either\nbe an <span class=\"caps\">HTML</span> string, an array of <span class=\"caps\">HTML</span> strings, a single <span class=\"caps\">DOM</span> element or an\narray of elements.</p>"},"type":"desc"},{"attributes":{"targetMethod":"","targetClass":"qxWeb","sourceMethod":"before","sourceClass":"qx.module.Manipulating"},"type":"attach"},{"attributes":{},"type":"return","children":[{"attributes":{"text":"<p>The collection for chaining</p>"},"type":"desc"},{"attributes":{},"type":"types","children":[{"attributes":{"type":"qxWeb"},"type":"entry"}]}]}]},{"attributes":{"isStatic":false,"group":"Core","name":"blur","sourceMethod":"blur","line":570,"sourceClass":"qx.module.Manipulating"},"type":"method","children":[{"attributes":{"text":"<p>Blurs each element in the collection</p>"},"type":"desc"},{"attributes":{"targetMethod":"","targetClass":"qxWeb","sourceMethod":"blur","sourceClass":"qx.module.Manipulating"},"type":"attach"},{"attributes":{},"type":"return","children":[{"attributes":{"text":"<p>The collection for chaining</p>"},"type":"desc"},{"attributes":{},"type":"types","children":[{"attributes":{"type":"qxWeb"},"type":"entry"}]}]}]},{"attributes":{"isStatic":false,"group":"Core","name":"clone","sourceMethod":"clone","line":165,"sourceClass":"qx.module.Manipulating"},"type":"method","children":[{"attributes":{},"type":"params","children":[{"attributes":{"name":"events"},"type":"param","children":[{"attributes":{"text":"<p>clone event listeners. Default: <code>false</code></p>"},"type":"desc"},{"attributes":{},"type":"types","children":[{"attributes":{"type":"Boolean"},"type":"entry"}]}]}]},{"attributes":{"text":"<p>Clones the items in the current collection and returns them in a new set.\nEvent listeners can also be cloned.</p>"},"type":"desc"},{"attributes":{"targetMethod":"","targetClass":"qxWeb","sourceMethod":"clone","sourceClass":"qx.module.Manipulating"},"type":"attach"},{"attributes":{},"type":"return","children":[{"attributes":{"text":"<p>New collection with clones</p>"},"type":"desc"},{"attributes":{},"type":"types","children":[{"attributes":{"type":"qxWeb"},"type":"entry"}]}]}]},{"attributes":{"isStatic":false,"group":"Core","name":"empty","sourceMethod":"empty","line":351,"sourceClass":"qx.module.Manipulating"},"type":"method","children":[{"attributes":{"text":"<p>Removes all content from the elements in the collection</p>"},"type":"desc"},{"attributes":{"targetMethod":"","targetClass":"qxWeb","sourceMethod":"empty","sourceClass":"qx.module.Manipulating"},"type":"attach"},{"attributes":{},"type":"return","children":[{"attributes":{"text":"<p>The collection for chaining</p>"},"type":"desc"},{"attributes":{},"type":"types","children":[{"attributes":{"type":"qxWeb"},"type":"entry"}]}]}]},{"attributes":{"isStatic":false,"group":"Core","name":"focus","sourceMethod":"focus","line":553,"sourceClass":"qx.module.Manipulating"},"type":"method","children":[{"attributes":{"text":"<p>Focuses the first element in the collection</p>"},"type":"desc"},{"attributes":{"targetMethod":"","targetClass":"qxWeb","sourceMethod":"focus","sourceClass":"qx.module.Manipulating"},"type":"attach"},{"attributes":{},"type":"return","children":[{"attributes":{"text":"<p>The collection for chaining</p>"},"type":"desc"},{"attributes":{},"type":"types","children":[{"attributes":{"type":"qxWeb"},"type":"entry"}]}]}]},{"attributes":{"isStatic":false,"group":"Core","name":"getScrollLeft","sourceMethod":"getScrollLeft","line":437,"sourceClass":"qx.module.Manipulating"},"type":"method","children":[{"attributes":{"text":"<p>Returns the left scroll position of the first element in the collection.</p>"},"type":"desc"},{"attributes":{"targetMethod":"","targetClass":"qxWeb","sourceMethod":"getScrollLeft","sourceClass":"qx.module.Manipulating"},"type":"attach"},{"attributes":{},"type":"return","children":[{"attributes":{"text":"<p>Current left scroll position</p>"},"type":"desc"},{"attributes":{},"type":"types","children":[{"attributes":{"type":"Number"},"type":"entry"}]}]}]},{"attributes":{"isStatic":false,"group":"Core","name":"getScrollTop","sourceMethod":"getScrollTop","line":459,"sourceClass":"qx.module.Manipulating"},"type":"method","children":[{"attributes":{"text":"<p>Returns the top scroll position of the first element in the collection.</p>"},"type":"desc"},{"attributes":{"targetMethod":"","targetClass":"qxWeb","sourceMethod":"getScrollTop","sourceClass":"qx.module.Manipulating"},"type":"attach"},{"attributes":{},"type":"return","children":[{"attributes":{"text":"<p>Current top scroll position</p>"},"type":"desc"},{"attributes":{},"type":"types","children":[{"attributes":{"type":"Number"},"type":"entry"}]}]}]},{"attributes":{"isStatic":false,"group":"Core","name":"insertAfter","sourceMethod":"insertAfter","line":280,"sourceClass":"qx.module.Manipulating"},"type":"method","children":[{"attributes":{},"type":"params","children":[{"attributes":{"name":"target"},"type":"param","children":[{"attributes":{"text":"<p>Selector expression, <span class=\"caps\">DOM</span> element, Array of <span class=\"caps\">DOM</span> elements or collection</p>"},"type":"desc"},{"attributes":{},"type":"types","children":[{"attributes":{"type":"String"},"type":"entry"},{"attributes":{"type":"Element"},"type":"entry"},{"attributes":{"type":"Element","dimensions":1},"type":"entry"},{"attributes":{"type":"qxWeb"},"type":"entry"}]}]}]},{"attributes":{"text":"<p>Inserts the current collection after each target item. The collection\nitems are moved after the first target. For subsequent targets,\nclones of the collection items are created and inserted.</p>"},"type":"desc"},{"attributes":{"targetMethod":"","targetClass":"qxWeb","sourceMethod":"insertAfter","sourceClass":"qx.module.Manipulating"},"type":"attach"},{"attributes":{},"type":"return","children":[{"attributes":{"text":"<p>The collection for chaining</p>"},"type":"desc"},{"attributes":{},"type":"types","children":[{"attributes":{"type":"qxWeb"},"type":"entry"}]}]}]},{"attributes":{"isStatic":false,"group":"Core","name":"insertBefore","sourceMethod":"insertBefore","line":249,"sourceClass":"qx.module.Manipulating"},"type":"method","children":[{"attributes":{},"type":"params","children":[{"attributes":{"name":"target"},"type":"param","children":[{"attributes":{"text":"<p>Selector expression, <span class=\"caps\">DOM</span> element, Array of <span class=\"caps\">DOM</span> elements or collection</p>"},"type":"desc"},{"attributes":{},"type":"types","children":[{"attributes":{"type":"String"},"type":"entry"},{"attributes":{"type":"Element"},"type":"entry"},{"attributes":{"type":"Element","dimensions":1},"type":"entry"},{"attributes":{"type":"qxWeb"},"type":"entry"}]}]}]},{"attributes":{"text":"<p>Inserts the current collection before each target item. The collection\nitems are moved before the first target. For subsequent targets,\nclones of the collection items are created and inserted.</p>"},"type":"desc"},{"attributes":{"targetMethod":"","targetClass":"qxWeb","sourceMethod":"insertBefore","sourceClass":"qx.module.Manipulating"},"type":"attach"},{"attributes":{},"type":"return","children":[{"attributes":{"text":"<p>The collection for chaining</p>"},"type":"desc"},{"attributes":{},"type":"types","children":[{"attributes":{"type":"qxWeb"},"type":"entry"}]}]}]},{"attributes":{"isStatic":false,"group":"Core","name":"remove","sourceMethod":"remove","line":337,"sourceClass":"qx.module.Manipulating"},"type":"method","children":[{"attributes":{"text":"<p>Removes each element in the current collection from the <span class=\"caps\">DOM</span></p>"},"type":"desc"},{"attributes":{"targetMethod":"","targetClass":"qxWeb","sourceMethod":"remove","sourceClass":"qx.module.Manipulating"},"type":"attach"},{"attributes":{},"type":"return","children":[{"attributes":{"text":"<p>The collection for chaining</p>"},"type":"desc"},{"attributes":{},"type":"types","children":[{"attributes":{"type":"qxWeb"},"type":"entry"}]}]}]},{"attributes":{"isStatic":false,"group":"Core","name":"setScrollLeft","sourceMethod":"setScrollLeft","line":483,"sourceClass":"qx.module.Manipulating"},"type":"method","children":[{"attributes":{},"type":"params","children":[{"attributes":{"name":"value"},"type":"param","children":[{"attributes":{"text":"<p>Left scroll position</p>"},"type":"desc"},{"attributes":{},"type":"types","children":[{"attributes":{"type":"Number"},"type":"entry"}]}]},{"attributes":{"optional":true,"name":"duration"},"type":"param","children":[{"attributes":{"text":"<p>Optional: Duration in ms for animated scrolling</p>"},"type":"desc"},{"attributes":{},"type":"types","children":[{"attributes":{"type":"Number"},"type":"entry"}]}]}]},{"attributes":{"text":"<p>Scrolls the elements of the collection to the given coordinate.</p>"},"type":"desc"},{"attributes":{"targetMethod":"","targetClass":"qxWeb","sourceMethod":"setScrollLeft","sourceClass":"qx.module.Manipulating"},"type":"attach"},{"attributes":{},"type":"return","children":[{"attributes":{"text":"<p>The collection for chaining</p>"},"type":"desc"},{"attributes":{},"type":"types","children":[{"attributes":{"type":"qxWeb"},"type":"entry"}]}]}]},{"attributes":{"isStatic":false,"group":"Core","name":"setScrollTop","sourceMethod":"setScrollTop","line":519,"sourceClass":"qx.module.Manipulating"},"type":"method","children":[{"attributes":{},"type":"params","children":[{"attributes":{"name":"value"},"type":"param","children":[{"attributes":{"text":"<p>Top scroll position</p>"},"type":"desc"},{"attributes":{},"type":"types","children":[{"attributes":{"type":"Number"},"type":"entry"}]}]},{"attributes":{"optional":true,"name":"duration"},"type":"param","children":[{"attributes":{"text":"<p>Optional: Duration in ms for animated scrolling</p>"},"type":"desc"},{"attributes":{},"type":"types","children":[{"attributes":{"type":"Number"},"type":"entry"}]}]}]},{"attributes":{"text":"<p>Scrolls the elements of the collection to the given coordinate.</p>"},"type":"desc"},{"attributes":{"targetMethod":"","targetClass":"qxWeb","sourceMethod":"setScrollTop","sourceClass":"qx.module.Manipulating"},"type":"attach"},{"attributes":{},"type":"return","children":[{"attributes":{"text":"<p>The collection for chaining</p>"},"type":"desc"},{"attributes":{},"type":"types","children":[{"attributes":{"type":"qxWeb"},"type":"entry"}]}]}]},{"attributes":{"isStatic":false,"group":"Core","name":"wrap","sourceMethod":"wrap","line":313,"sourceClass":"qx.module.Manipulating"},"type":"method","children":[{"attributes":{},"type":"params","children":[{"attributes":{"name":"wrapper"},"type":"param","children":[{"attributes":{"text":"<p>Selector expression, <span class=\"caps\">HTML</span> string, <span class=\"caps\">DOM</span> element or list of <span class=\"caps\">DOM</span> elements</p>"},"type":"desc"},{"attributes":{},"type":"types","children":[{"attributes":{"type":"String"},"type":"entry"},{"attributes":{"type":"Element"},"type":"entry"},{"attributes":{"type":"Element","dimensions":1},"type":"entry"},{"attributes":{"type":"qxWeb"},"type":"entry"}]}]}]},{"attributes":{"text":"<p>Wraps each element in the collection in a copy of an <span class=\"caps\">HTML</span> structure.\nElements will be appended to the deepest nested element in the structure\nas determined by a depth-first search.</p>"},"type":"desc"},{"attributes":{"targetMethod":"","targetClass":"qxWeb","sourceMethod":"wrap","sourceClass":"qx.module.Manipulating"},"type":"attach"},{"attributes":{},"type":"return","children":[{"attributes":{"text":"<p>The collection for chaining</p>"},"type":"desc"},{"attributes":{},"type":"types","children":[{"attributes":{"type":"qxWeb"},"type":"entry"}]}]}]}],"fileName":"qx.module.Manipulating","group":"Core","desc":"<p><span class=\"caps\">DOM</span> manipulation module</p>","events":[]},"Rest":{"static":[{"attributes":{"isStatic":true,"group":"IO","name":"resource","sourceMethod":"resource","line":38,"sourceClass":"qx.module.Rest"},"type":"method","children":[{"attributes":{},"type":"params","children":[{"attributes":{"optional":true,"name":"description"},"type":"param","children":[{"attributes":{"text":"<p>Each key of the map is interpreted as <code>action</code> name. The value associated to the key must be a map with the properties <code>method</code> and <code>url</code>. <code>check</code> is optional. Also see {@link qx.bom.rest.Resource#map}.</p>"},"type":"desc"},{"attributes":{},"type":"types","children":[{"attributes":{"type":"Map"},"type":"entry"}]}]}]},{"attributes":{"text":""},"type":"desc"},{"attributes":{"targetMethod":"rest.resource","targetClass":"qxWeb","sourceMethod":"resource","sourceClass":"qx.module.Rest"},"type":"attachStatic"},{"attributes":{},"type":"return","children":[{"attributes":{"text":"<p>The resource object.</p>"},"type":"desc"},{"attributes":{},"type":"types","children":[{"attributes":{"type":"qx.bom.rest.Resource"},"type":"entry"}]}]}]}],"member":[],"fileName":"qx.module.Rest","group":"IO","desc":"<p>This modules eases the communication with a RESTful web service by providing\na client-side wrapper of a <span class=\"caps\">REST</span> resource.</p>\n\n<p>See {@link qx.bom.rest.Resource}.</p>","events":[]},"MatchMedia":{"static":[{"attributes":{"line":54,"sourceMethod":"addSizeClasses","isStatic":true,"sourceClass":"qx.module.MatchMedia","name":"addSizeClasses"},"type":"method","children":[{"attributes":{"text":"<p>Adds screen size classes (e.g. small-only or medium-up) by pre-defined media queries using em.\nThe range goes from small to medium, large and xlarge up to xxlarge:</p>\n\n<p>small: 0em &#8211; 40em\nmedium: 40.063em &#8211; 64em\nlarge: 64.063em &#8211; 90em\nxlarge: 90.063em &#8211; 120em\nxxlarge: > 120.063em</p>\n\n<p>The suffix of the class name indicates either that the current screen\nis larger than this size (<strong>-up) or in that range (</strong>-only).</p>"},"type":"desc"},{"attributes":{"targetMethod":"","targetClass":"qxWeb","sourceMethod":"addSizeClasses","sourceClass":"qx.module.MatchMedia"},"type":"attachStatic"}]},{"attributes":{"line":34,"sourceMethod":"matchMedia","isStatic":true,"sourceClass":"qx.module.MatchMedia","name":"matchMedia"},"type":"method","children":[{"attributes":{},"type":"params","children":[{"attributes":{"name":"query"},"type":"param","children":[{"attributes":{"text":"<p>the media query to evaluate</p>"},"type":"desc"},{"attributes":{},"type":"types","children":[{"attributes":{"type":"String"},"type":"entry"}]}]}]},{"attributes":{"text":"<p>Evaluates the specified mediaquery list</p>"},"type":"desc"},{"attributes":{},"type":"return","children":[{"attributes":{"text":"<p>The media query</p>"},"type":"desc"},{"attributes":{},"type":"types","children":[{"attributes":{"type":"qx.bom.MediaQuery"},"type":"entry"}]}]},{"attributes":{"targetMethod":"matchMedia","targetClass":"qxWeb","sourceMethod":"matchMedia","sourceClass":"qx.module.MatchMedia"},"type":"attachStatic"}]}],"member":[{"attributes":{"line":97,"sourceMethod":"mediaQueryToClass","isStatic":false,"sourceClass":"qx.module.MatchMedia","name":"mediaQueryToClass"},"type":"method","children":[{"attributes":{},"type":"params","children":[{"attributes":{"name":"queryString"},"type":"param","children":[{"attributes":{"text":"<p>the media query to evaluate</p>"},"type":"desc"},{"attributes":{},"type":"types","children":[{"attributes":{"type":"String"},"type":"entry"}]}]},{"attributes":{"name":"className"},"type":"param","children":[{"attributes":{"text":"<p>css class name that gets bind to an element</p>"},"type":"desc"},{"attributes":{},"type":"types","children":[{"attributes":{"type":"String"},"type":"entry"}]}]}]},{"attributes":{"text":"<p>Listens for media query updates and applies/removes the css class.</p>"},"type":"desc"},{"attributes":{"targetMethod":"","targetClass":"qxWeb","sourceMethod":"mediaQueryToClass","sourceClass":"qx.module.MatchMedia"},"type":"attach"},{"attributes":{},"type":"return","children":[{"attributes":{"text":"<p>Self instance for chaining</p>"},"type":"desc"},{"attributes":{},"type":"types","children":[{"attributes":{"type":"qxWeb"},"type":"entry"}]}]}]}],"fileName":"qx.module.MatchMedia","group":"Extras","desc":"<p>Module for mediaqueries evaluation. The module is a wrapper for media.match.js,\nthat implements a polyfill for window.matchMedia when it&#8217;s not supported natively.</p>","events":[]},"Rating":{"static":[],"member":[{"attributes":{"isStatic":false,"group":"Widget","name":"rating","sourceMethod":"rating","line":98,"sourceClass":"qx.ui.website.Rating","prefixedMethodName":".rating"},"type":"method","children":[{"attributes":{},"type":"params","children":[{"attributes":{"defaultValue":"0","optional":true,"name":"initValue"},"type":"param","children":[{"attributes":{"text":"<p>The initial value of the rating.</p>"},"type":"desc"},{"attributes":{},"type":"types","children":[{"attributes":{"type":"Number"},"type":"entry"}]}]},{"attributes":{"defaultValue":"\"★\"","optional":true,"name":"symbol"},"type":"param","children":[{"attributes":{"text":"<p>The symbol which should be used for each rating item.</p>"},"type":"desc"},{"attributes":{},"type":"types","children":[{"attributes":{"type":"String"},"type":"entry"}]}]},{"attributes":{"defaultValue":"5","optional":true,"name":"length"},"type":"param","children":[{"attributes":{"text":"<p>The length of the rating widget.</p>"},"type":"desc"},{"attributes":{},"type":"types","children":[{"attributes":{"type":"Number"},"type":"entry"}]}]}]},{"attributes":{"text":"<p>Factory method which converts the current collection into a collection of\nrating widgets. Therefore, an initialization process needs to be done which\ncan be configured with some parameter.</p>"},"type":"desc"},{"attributes":{},"type":"return","children":[{"attributes":{"text":"<p>A new rating collection.</p>"},"type":"desc"},{"attributes":{},"type":"types","children":[{"attributes":{"type":"qx.ui.website.Rating"},"type":"entry"}]}]},{"attributes":{"targetMethod":"","targetClass":"qxWeb","sourceMethod":"rating","sourceClass":"qx.ui.website.Rating"},"type":"attach"}]},{"attributes":{"line":191,"name":"getValue","prefixedMethodName":"rating.getValue"},"type":"method","children":[{"attributes":{"text":"<p>Reads the current value of the first rating widget in the collection\nfrom the <span class=\"caps\">DOM</span> and returns it.</p>"},"type":"desc"},{"attributes":{},"type":"return","children":[{"attributes":{"text":"<p>The current value.</p>"},"type":"desc"},{"attributes":{},"type":"types","children":[{"attributes":{"type":"Number"},"type":"entry"}]}]}]},{"attributes":{"line":168,"name":"setValue","prefixedMethodName":"rating.setValue"},"type":"method","children":[{"attributes":{},"type":"params","children":[{"attributes":{"name":"value"},"type":"param","children":[{"attributes":{"text":"<p>The value of the rating.</p>"},"type":"desc"},{"attributes":{},"type":"types","children":[{"attributes":{"type":"Number"},"type":"entry"}]}]}]},{"attributes":{"text":"<p>Sets the given value of the raining widget&#8217;s in the collection. The value will be\nconverted to the maximum or minimum if our of range.</p>"},"type":"desc"},{"attributes":{},"type":"return","children":[{"attributes":{"text":"<code>this</code> reference for chaining."},"type":"desc"},{"attributes":{},"type":"types","children":[{"attributes":{"type":"qx.ui.website.Rating"},"type":"entry"}]}]}]}],"fileName":"qx.ui.website.Rating","events":[{"name":"changeValue","type":"Number","desc":"<p>Fired at each value change</p>"}],"desc":"<p>This is a simple rating widget which can be used to display a predefined\nnumber of symbols which the user can click or tap to give a rating e.g.\n3 out of 5 stars.</p>\n\n<h2>Markup</h2>\nEach rating item is a span element. Span elements already existing within\nthe Rating's container will be used, otherwise new elements will be added or\nremoved according to the <code>length</code> config option.\n\n<h2>CSS Classes</h2>\n<table>\n  <thead>\n    <tr>\n      <td>Class Name</td>\n      <td>Applied to</td>\n      <td>Description</td>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <td><code>qx-rating</code></td>\n      <td>Container element</td>\n      <td>Identifies the Rating widget</td>\n    </tr>\n    <tr>\n      <td><code>qx-rating-item</code></td>\n      <td>Rating item (span)</td>\n      <td>Identifies and styles an active Rating item</td>\n    </tr>\n    <tr>\n      <td><code>qx-rating-item-off</code></td>\n      <td>Rating item (span)</td>\n      <td>Identifies and styles an inactive Rating item. Applied in addition to <code>qx-rating-item</code></td>\n    </tr>\n  </tbody>\n</table>\n\n<h2 class=\"widget-markup\">Generated DOM Structure</h2>","config":"<p><strong>length</strong></p>\n\n<p>The length of the rating widget.</p>\n\n<p>Default value:</p>\n\n<pre>5</pre>\n\n<p><strong>symbol</strong></p>\n\n<p>The symbol used to render the rating items. This can be any\nString e.g. a <span class=\"caps\">UTF</span>-8 character.</p>\n\n<p>Default value:</p>\n\n<pre>★</pre>","superClass":"qx.ui.website.Widget","group":"Widget"},"Transform":{"static":[],"member":[{"attributes":{"line":268,"sourceMethod":"getTransformBackfaceVisibility","isStatic":false,"sourceClass":"qx.module.Transform","name":"getTransformBackfaceVisibility"},"type":"method","children":[{"attributes":{"text":"<p>Returns the backface-visibility property of the first element.</p>\n\n<p>Spec: <a href=\"http://www.w3.org/TR/css3-3d-transforms/#backface-visibility-property\">http://www.w3.org/TR/css3-3d-transforms/#backface-visibility-property</a></p>"},"type":"desc"},{"attributes":{"targetMethod":"","targetClass":"qxWeb","sourceMethod":"getTransformBackfaceVisibility","sourceClass":"qx.module.Transform"},"type":"attach"},{"attributes":{},"type":"return","children":[{"attributes":{"text":"<code>true</code>, if the backface is visible."},"type":"desc"},{"attributes":{},"type":"types","children":[{"attributes":{"type":"Boolean"},"type":"entry"}]}]}]},{"attributes":{"line":133,"sourceMethod":"getTransformOrigin","isStatic":false,"sourceClass":"qx.module.Transform","name":"getTransformOrigin"},"type":"method","children":[{"attributes":{"text":"<p>Returns the transform-origin property of the first element.</p>\n\n<p>Spec: <a href=\"http://www.w3.org/TR/css3-3d-transforms/#transform-origin-property\">http://www.w3.org/TR/css3-3d-transforms/#transform-origin-property</a></p>"},"type":"desc"},{"attributes":{"targetMethod":"","targetClass":"qxWeb","sourceMethod":"getTransformOrigin","sourceClass":"qx.module.Transform"},"type":"attach"},{"attributes":{},"type":"return","children":[{"attributes":{"text":"<p>The set property, e.g. <code>50% 50%</code> or null, of the collection is empty.</p>"},"type":"desc"},{"attributes":{},"type":"types","children":[{"attributes":{"type":"String"},"type":"entry"}]}]}]},{"attributes":{"line":201,"sourceMethod":"getTransformPerspective","isStatic":false,"sourceClass":"qx.module.Transform","name":"getTransformPerspective"},"type":"method","children":[{"attributes":{"text":"<p>Returns the perspective property of the first element.</p>\n\n<p>Spec: <a href=\"http://www.w3.org/TR/css3-3d-transforms/#perspective-property\">http://www.w3.org/TR/css3-3d-transforms/#perspective-property</a></p>"},"type":"desc"},{"attributes":{"targetMethod":"","targetClass":"qxWeb","sourceMethod":"getTransformPerspective","sourceClass":"qx.module.Transform"},"type":"attach"},{"attributes":{},"type":"return","children":[{"attributes":{"text":"<p>The set property, e.g. <code>500</code></p>"},"type":"desc"},{"attributes":{},"type":"types","children":[{"attributes":{"type":"String"},"type":"entry"}]}]}]},{"attributes":{"line":235,"sourceMethod":"getTransformPerspectiveOrigin","isStatic":false,"sourceClass":"qx.module.Transform","name":"getTransformPerspectiveOrigin"},"type":"method","children":[{"attributes":{"text":"<p>Returns the perspective-origin property of the first element.</p>\n\n<p>Spec: <a href=\"http://www.w3.org/TR/css3-3d-transforms/#perspective-origin-property\">http://www.w3.org/TR/css3-3d-transforms/#perspective-origin-property</a></p>"},"type":"desc"},{"attributes":{"targetMethod":"","targetClass":"qxWeb","sourceMethod":"getTransformPerspectiveOrigin","sourceClass":"qx.module.Transform"},"type":"attach"},{"attributes":{},"type":"return","children":[{"attributes":{"text":"<p>The set property, e.g. <code>50% 50%</code></p>"},"type":"desc"},{"attributes":{},"type":"types","children":[{"attributes":{"type":"String"},"type":"entry"}]}]}]},{"attributes":{"line":167,"sourceMethod":"getTransformStyle","isStatic":false,"sourceClass":"qx.module.Transform","name":"getTransformStyle"},"type":"method","children":[{"attributes":{"text":"<p>Returns the transform-style property of the first element.</p>\n\n<p>Spec: <a href=\"http://www.w3.org/TR/css3-3d-transforms/#transform-style-property\">http://www.w3.org/TR/css3-3d-transforms/#transform-style-property</a></p>"},"type":"desc"},{"attributes":{"targetMethod":"","targetClass":"qxWeb","sourceMethod":"getTransformStyle","sourceClass":"qx.module.Transform"},"type":"attach"},{"attributes":{},"type":"return","children":[{"attributes":{"text":"<p>The set property, either <code>flat</code> or <code>preserve-3d</code>.</p>"},"type":"desc"},{"attributes":{},"type":"types","children":[{"attributes":{"type":"String"},"type":"entry"}]}]}]},{"attributes":{"line":88,"sourceMethod":"rotate","isStatic":false,"sourceClass":"qx.module.Transform","name":"rotate"},"type":"method","children":[{"attributes":{},"type":"params","children":[{"attributes":{"name":"value"},"type":"param","children":[{"attributes":{"text":"<p>The value to rotate e.g. <code>&#8220;90deg&#8221;</code>.</p>"},"type":"desc"},{"attributes":{},"type":"types","children":[{"attributes":{"type":"String"},"type":"entry"},{"attributes":{"type":"Array"},"type":"entry"}]}]}]},{"attributes":{"text":"<p>Rotates by the given value. For further details, take\na look at the {@link #transform} method.</p>"},"type":"desc"},{"attributes":{"targetMethod":"","targetClass":"qxWeb","sourceMethod":"rotate","sourceClass":"qx.module.Transform"},"type":"attach"},{"attributes":{},"type":"return","children":[{"attributes":{"text":"<p>This reference for chaining.</p>"},"type":"desc"},{"attributes":{},"type":"types","children":[{"attributes":{"type":"qxWeb"},"type":"entry"}]}]}]},{"attributes":{"line":75,"sourceMethod":"scale","isStatic":false,"sourceClass":"qx.module.Transform","name":"scale"},"type":"method","children":[{"attributes":{},"type":"params","children":[{"attributes":{"name":"value"},"type":"param","children":[{"attributes":{"text":"<p>The value to scale.</p>"},"type":"desc"},{"attributes":{},"type":"types","children":[{"attributes":{"type":"Number"},"type":"entry"},{"attributes":{"type":"Array"},"type":"entry"}]}]}]},{"attributes":{"text":"<p>Scales by the given value. For further details, take\na look at the {@link #transform} method.</p>"},"type":"desc"},{"attributes":{"targetMethod":"","targetClass":"qxWeb","sourceMethod":"scale","sourceClass":"qx.module.Transform"},"type":"attach"},{"attributes":{},"type":"return","children":[{"attributes":{"text":"<p>This reference for chaining.</p>"},"type":"desc"},{"attributes":{},"type":"types","children":[{"attributes":{"type":"qxWeb"},"type":"entry"}]}]}]},{"attributes":{"line":252,"sourceMethod":"setTransformBackfaceVisibility","isStatic":false,"sourceClass":"qx.module.Transform","name":"setTransformBackfaceVisibility"},"type":"method","children":[{"attributes":{},"type":"params","children":[{"attributes":{"name":"value"},"type":"param","children":[{"attributes":{"text":"<code>true</code> if the backface should be visible."},"type":"desc"},{"attributes":{},"type":"types","children":[{"attributes":{"type":"Boolean"},"type":"entry"}]}]}]},{"attributes":{"text":"<p>Sets the backface-visibility property.</p>\n\n<p>Spec: <a href=\"http://www.w3.org/TR/css3-3d-transforms/#backface-visibility-property\">http://www.w3.org/TR/css3-3d-transforms/#backface-visibility-property</a></p>"},"type":"desc"},{"attributes":{"targetMethod":"","targetClass":"qxWeb","sourceMethod":"setTransformBackfaceVisibility","sourceClass":"qx.module.Transform"},"type":"attach"},{"attributes":{},"type":"return","children":[{"attributes":{"text":"<p>This reference for chaining.</p>"},"type":"desc"},{"attributes":{},"type":"types","children":[{"attributes":{"type":"qxWeb"},"type":"entry"}]}]}]},{"attributes":{"line":116,"sourceMethod":"setTransformOrigin","isStatic":false,"sourceClass":"qx.module.Transform","name":"setTransformOrigin"},"type":"method","children":[{"attributes":{},"type":"params","children":[{"attributes":{"name":"value"},"type":"param","children":[{"attributes":{"text":"<p><span class=\"caps\">CSS</span> position values like <code>50% 50%</code> or <code>left top</code>.</p>"},"type":"desc"},{"attributes":{},"type":"types","children":[{"attributes":{"type":"String"},"type":"entry"}]}]}]},{"attributes":{"text":"<p>Sets the transform-origin property.</p>\n\n<p>Spec: <a href=\"http://www.w3.org/TR/css3-3d-transforms/#transform-origin-property\">http://www.w3.org/TR/css3-3d-transforms/#transform-origin-property</a></p>"},"type":"desc"},{"attributes":{"targetMethod":"","targetClass":"qxWeb","sourceMethod":"setTransformOrigin","sourceClass":"qx.module.Transform"},"type":"attach"},{"attributes":{},"type":"return","children":[{"attributes":{"text":"<p>This reference for chaining.</p>"},"type":"desc"},{"attributes":{},"type":"types","children":[{"attributes":{"type":"qxWeb"},"type":"entry"}]}]}]},{"attributes":{"line":185,"sourceMethod":"setTransformPerspective","isStatic":false,"sourceClass":"qx.module.Transform","name":"setTransformPerspective"},"type":"method","children":[{"attributes":{},"type":"params","children":[{"attributes":{"name":"value"},"type":"param","children":[{"attributes":{"text":"<p>The perspective layer. Numbers between 100 and 5000 give the best results.</p>"},"type":"desc"},{"attributes":{},"type":"types","children":[{"attributes":{"type":"Number"},"type":"entry"}]}]}]},{"attributes":{"text":"<p>Sets the perspective property.</p>\n\n<p>Spec: <a href=\"http://www.w3.org/TR/css3-3d-transforms/#perspective-property\">http://www.w3.org/TR/css3-3d-transforms/#perspective-property</a></p>"},"type":"desc"},{"attributes":{"targetMethod":"","targetClass":"qxWeb","sourceMethod":"setTransformPerspective","sourceClass":"qx.module.Transform"},"type":"attach"},{"attributes":{},"type":"return","children":[{"attributes":{"text":"<p>This reference for chaining.</p>"},"type":"desc"},{"attributes":{},"type":"types","children":[{"attributes":{"type":"qxWeb"},"type":"entry"}]}]}]},{"attributes":{"line":219,"sourceMethod":"setTransformPerspectiveOrigin","isStatic":false,"sourceClass":"qx.module.Transform","name":"setTransformPerspectiveOrigin"},"type":"method","children":[{"attributes":{},"type":"params","children":[{"attributes":{"name":"value"},"type":"param","children":[{"attributes":{"text":"<p><span class=\"caps\">CSS</span> position values like <code>50% 50%</code> or <code>left top</code>.</p>"},"type":"desc"},{"attributes":{},"type":"types","children":[{"attributes":{"type":"String"},"type":"entry"}]}]}]},{"attributes":{"text":"<p>Sets the perspective-origin property.</p>\n\n<p>Spec: <a href=\"http://www.w3.org/TR/css3-3d-transforms/#perspective-origin-property\">http://www.w3.org/TR/css3-3d-transforms/#perspective-origin-property</a></p>"},"type":"desc"},{"attributes":{"targetMethod":"","targetClass":"qxWeb","sourceMethod":"setTransformPerspectiveOrigin","sourceClass":"qx.module.Transform"},"type":"attach"},{"attributes":{},"type":"return","children":[{"attributes":{"text":"<p>This reference for chaining.</p>"},"type":"desc"},{"attributes":{},"type":"types","children":[{"attributes":{"type":"qxWeb"},"type":"entry"}]}]}]},{"attributes":{"line":150,"sourceMethod":"setTransformStyle","isStatic":false,"sourceClass":"qx.module.Transform","name":"setTransformStyle"},"type":"method","children":[{"attributes":{},"type":"params","children":[{"attributes":{"name":"value"},"type":"param","children":[{"attributes":{"text":"<p>Either <code>flat</code> or <code>preserve-3d</code>.</p>"},"type":"desc"},{"attributes":{},"type":"types","children":[{"attributes":{"type":"String"},"type":"entry"}]}]}]},{"attributes":{"text":"<p>Sets the transform-style property.</p>\n\n<p>Spec: <a href=\"http://www.w3.org/TR/css3-3d-transforms/#transform-style-property\">http://www.w3.org/TR/css3-3d-transforms/#transform-style-property</a></p>"},"type":"desc"},{"attributes":{"targetMethod":"","targetClass":"qxWeb","sourceMethod":"setTransformStyle","sourceClass":"qx.module.Transform"},"type":"attach"},{"attributes":{},"type":"return","children":[{"attributes":{"text":"<p>This reference for chaining.</p>"},"type":"desc"},{"attributes":{},"type":"types","children":[{"attributes":{"type":"qxWeb"},"type":"entry"}]}]}]},{"attributes":{"line":101,"sourceMethod":"skew","isStatic":false,"sourceClass":"qx.module.Transform","name":"skew"},"type":"method","children":[{"attributes":{},"type":"params","children":[{"attributes":{"name":"value"},"type":"param","children":[{"attributes":{"text":"<p>The value to skew e.g. <code>&#8220;90deg&#8221;</code>.</p>"},"type":"desc"},{"attributes":{},"type":"types","children":[{"attributes":{"type":"String"},"type":"entry"},{"attributes":{"type":"Array"},"type":"entry"}]}]}]},{"attributes":{"text":"<p>Skews by the given value. For further details, take\na look at the {@link #transform} method.</p>"},"type":"desc"},{"attributes":{"targetMethod":"","targetClass":"qxWeb","sourceMethod":"skew","sourceClass":"qx.module.Transform"},"type":"attach"},{"attributes":{},"type":"return","children":[{"attributes":{"text":"<p>This reference for chaining.</p>"},"type":"desc"},{"attributes":{},"type":"types","children":[{"attributes":{"type":"qxWeb"},"type":"entry"}]}]}]},{"attributes":{"line":46,"sourceMethod":"transform","isStatic":false,"sourceClass":"qx.module.Transform","name":"transform"},"type":"method","children":[{"attributes":{},"type":"params","children":[{"attributes":{"name":"transforms"},"type":"param","children":[{"attributes":{"text":"<p>The map containing the transforms and value.</p>"},"type":"desc"},{"attributes":{},"type":"types","children":[{"attributes":{"type":"Map"},"type":"entry"}]}]}]},{"attributes":{"text":"<p>Method to apply multiple transforms at once to the given element. It\ntakes a map containing the transforms you want to apply plus the values\ne.g.<code>{scale: 2, rotate: &#8220;5deg&#8221;}</code>.\nThe values can be either singular, which means a single value will\nbe added to the <span class=\"caps\">CSS</span>. If you give an array, the values will be split up\nand each array entry will be used for the X, Y or Z dimension in that\norder e.g. <code>{scale: [2, 0.5]}</code> will result in a element\ndouble the size in X direction and half the size in Y direction.\nMake sure your browser supports all transformations you apply.</p>"},"type":"desc"},{"attributes":{"targetMethod":"","targetClass":"qxWeb","sourceMethod":"transform","sourceClass":"qx.module.Transform"},"type":"attach"},{"attributes":{},"type":"return","children":[{"attributes":{"text":"<p>This reference for chaining.</p>"},"type":"desc"},{"attributes":{},"type":"types","children":[{"attributes":{"type":"qxWeb"},"type":"entry"}]}]}]},{"attributes":{"line":62,"sourceMethod":"translate","isStatic":false,"sourceClass":"qx.module.Transform","name":"translate"},"type":"method","children":[{"attributes":{},"type":"params","children":[{"attributes":{"name":"value"},"type":"param","children":[{"attributes":{"text":"<p>The value to translate e.g. <code>&#8220;10px&#8221;</code>.</p>"},"type":"desc"},{"attributes":{},"type":"types","children":[{"attributes":{"type":"String"},"type":"entry"},{"attributes":{"type":"Array"},"type":"entry"}]}]}]},{"attributes":{"text":"<p>Translates by the given value. For further details, take\na look at the {@link #transform} method.</p>"},"type":"desc"},{"attributes":{"targetMethod":"","targetClass":"qxWeb","sourceMethod":"translate","sourceClass":"qx.module.Transform"},"type":"attach"},{"attributes":{},"type":"return","children":[{"attributes":{"text":"<p>This reference for chaining.</p>"},"type":"desc"},{"attributes":{},"type":"types","children":[{"attributes":{"type":"qxWeb"},"type":"entry"}]}]}]}],"fileName":"qx.module.Transform","group":"Extras","desc":"<p>This class is responsible for applying CSS3 transforms to the collection.\nThe implementation is mostly a cross browser wrapper for applying the\ntransforms.\nThe <span class=\"caps\">API</span> is keep to the spec as close as possible.</p>\n\n<p><a href=\"http://www.w3.org/TR/css3-3d-transforms/\">http://www.w3.org/TR/css3-3d-transforms/</a></p>","events":[]},"Blocker":{"static":[],"member":[{"attributes":{"line":159,"sourceMethod":"block","isStatic":false,"sourceClass":"qx.module.Blocker","name":"block"},"type":"method","children":[{"attributes":{},"type":"params","children":[{"attributes":{"defaultValue":"transparent","optional":true,"name":"color"},"type":"param","children":[{"attributes":{"text":"<p>The color for the blocker element (any <span class=\"caps\">CSS</span> color value)</p>"},"type":"desc"},{"attributes":{},"type":"types","children":[{"attributes":{"type":"String"},"type":"entry"}]}]},{"attributes":{"defaultValue":"0","optional":true,"name":"opacity"},"type":"param","children":[{"attributes":{"text":"<p>The <span class=\"caps\">CSS</span> opacity value for the blocker (floating point number from 0 to 1)</p>"},"type":"desc"},{"attributes":{},"type":"types","children":[{"attributes":{"type":"Number"},"type":"entry"}]}]},{"attributes":{"defaultValue":"10000","optional":true,"name":"zIndex"},"type":"param","children":[{"attributes":{"text":"<p>The zIndex value for the blocker</p>"},"type":"desc"},{"attributes":{},"type":"types","children":[{"attributes":{"type":"Number"},"type":"entry"}]}]}]},{"attributes":{"text":"<p>Adds an overlay to all items in the collection that intercepts mouse\nevents.</p>"},"type":"desc"},{"attributes":{"targetMethod":"","targetClass":"qxWeb","sourceMethod":"block","sourceClass":"qx.module.Blocker"},"type":"attach"},{"attributes":{},"type":"return","children":[{"attributes":{"text":"<p>The collection for chaining</p>"},"type":"desc"},{"attributes":{},"type":"types","children":[{"attributes":{"type":"qxWeb"},"type":"entry"}]}]}]},{"attributes":{"line":201,"sourceMethod":"getBlocker","isStatic":false,"sourceClass":"qx.module.Blocker","name":"getBlocker"},"type":"method","children":[{"attributes":{"text":"<p>Returns all blocker elements as collection.</p>\n\n<strong>Note:</strong> This will only return elements if\nthe <code>block</code> method was called at least once,\nsince the blocker elements are created on-demand."},"type":"desc"},{"attributes":{"targetMethod":"","targetClass":"qxWeb","sourceMethod":"getBlocker","sourceClass":"qx.module.Blocker"},"type":"attach"},{"attributes":{},"type":"return","children":[{"attributes":{"text":"<p>collection with all blocker elements</p>"},"type":"desc"},{"attributes":{},"type":"types","children":[{"attributes":{"type":"qxWeb"},"type":"entry"}]}]}]},{"attributes":{"line":179,"sourceMethod":"unblock","isStatic":false,"sourceClass":"qx.module.Blocker","name":"unblock"},"type":"method","children":[{"attributes":{"text":"<p>Removes the blockers from all items in the collection</p>"},"type":"desc"},{"attributes":{"targetMethod":"","targetClass":"qxWeb","sourceMethod":"unblock","sourceClass":"qx.module.Blocker"},"type":"attach"},{"attributes":{},"type":"return","children":[{"attributes":{"text":"<p>The collection for chaining</p>"},"type":"desc"},{"attributes":{},"type":"types","children":[{"attributes":{"type":"qxWeb"},"type":"entry"}]}]}]}],"fileName":"qx.module.Blocker","group":"Extras","desc":"<p>Provides a way to block elements so they will no longer receive (native)\nevents by overlaying them with a <span class=\"caps\">DIV</span> element.</p>","events":[]},"Animation":{"static":[],"member":[{"attributes":{"line":157,"sourceMethod":"animate","isStatic":false,"sourceClass":"qx.module.Animation","name":"animate"},"type":"method","children":[{"attributes":{},"type":"params","children":[{"attributes":{"name":"desc"},"type":"param","children":[{"attributes":{"text":"<p>The animation&#8220;s description.</p>"},"type":"desc"},{"attributes":{},"type":"types","children":[{"attributes":{"type":"Map"},"type":"entry"}]}]},{"attributes":{"optional":true,"name":"duration"},"type":"param","children":[{"attributes":{"text":"<p>The duration in milliseconds of the animation, which will override the duration given in the description.</p>"},"type":"desc"},{"attributes":{},"type":"types","children":[{"attributes":{"type":"Number"},"type":"entry"}]}]}]},{"attributes":{"text":"<p>Starts the animation with the given description.</p>\n\n<p><strong>duration</strong> is the time in milliseconds one animation cycle should take.</p>\n\n<p><strong>keep</strong> is the key frame to apply at the end of the animation. (optional)</p>\n\n<p><strong>keyFrames</strong> is a map of separate frames. Each frame is defined by a\n  number which is the percentage value of time in the animation. The value\n  is a map itself which holds css properties or transforms\n  (Transforms only for <span class=\"caps\">CSS</span> Animations).</p>\n\n<p><strong>origin</strong> maps to the <a href=\"https://developer.mozilla.org/en-US/docs/Web/CSS/transform-origin\">transform origin</a>\n(Only for <span class=\"caps\">CSS</span> animations).</p>\n\n<p><strong>repeat</strong> is the amount of time the animation should be run in\n  sequence. You can also use &#8220;infinite&#8221;.</p>\n\n<p><strong>timing</strong> takes one of these predefined values:\n  <code>ease</code> | <code>linear</code> | <code>ease-in</code>\n  | <code>ease-out</code> | <code>ease-in-out</code> |\n  <code>cubic-bezier(&lt;number&gt;, &lt;number&gt;, &lt;number&gt;, &lt;number&gt;)</code>\n  (cubic-bezier only available for <span class=\"caps\">CSS</span> animations)</p>\n\n<p><strong>alternate</strong> defines if every other animation should be run in reverse order.</p>\n\n<p><strong>delay</strong> is the time in milliseconds the animation should wait before start.</p>"},"type":"desc"},{"attributes":{"targetMethod":"","targetClass":"qxWeb","sourceMethod":"animate","sourceClass":"qx.module.Animation"},"type":"attach"},{"attributes":{},"type":"return","children":[{"attributes":{"text":"<p>The collection for chaining.</p>"},"type":"desc"},{"attributes":{},"type":"types","children":[{"attributes":{"type":"qxWeb"},"type":"entry"}]}]}]},{"attributes":{"line":172,"sourceMethod":"animateReverse","isStatic":false,"sourceClass":"qx.module.Animation","name":"animateReverse"},"type":"method","children":[{"attributes":{},"type":"params","children":[{"attributes":{"name":"desc"},"type":"param","children":[{"attributes":{"text":"<p>The animation&#8220;s description.</p>"},"type":"desc"},{"attributes":{},"type":"types","children":[{"attributes":{"type":"Map"},"type":"entry"}]}]},{"attributes":{"optional":true,"name":"duration"},"type":"param","children":[{"attributes":{"text":"<p>The duration in milliseconds of the animation, which will override the duration given in the description.</p>"},"type":"desc"},{"attributes":{},"type":"types","children":[{"attributes":{"type":"Number"},"type":"entry"}]}]}]},{"attributes":{"text":"<p>Starts an animation in reversed order. For further details, take a look at\nthe {@link #animate} method.</p>"},"type":"desc"},{"attributes":{"targetMethod":"","targetClass":"qxWeb","sourceMethod":"animateReverse","sourceClass":"qx.module.Animation"},"type":"attach"},{"attributes":{},"type":"return","children":[{"attributes":{"text":"<p>The collection for chaining.</p>"},"type":"desc"},{"attributes":{},"type":"types","children":[{"attributes":{"type":"qxWeb"},"type":"entry"}]}]}]},{"attributes":{"line":270,"sourceMethod":"fadeIn","isStatic":false,"sourceClass":"qx.module.Animation","name":"fadeIn"},"type":"method","children":[{"attributes":{},"type":"params","children":[{"attributes":{"optional":true,"name":"duration"},"type":"param","children":[{"attributes":{"text":"<p>The duration in milliseconds.</p>"},"type":"desc"},{"attributes":{},"type":"types","children":[{"attributes":{"type":"Number"},"type":"entry"}]}]}]},{"attributes":{"text":"<p>Fades in all elements in the collection.</p>"},"type":"desc"},{"attributes":{"targetMethod":"","targetClass":"qxWeb","sourceMethod":"fadeIn","sourceClass":"qx.module.Animation"},"type":"attach"},{"attributes":{},"type":"return","children":[{"attributes":{"text":"<p>The collection for chaining.</p>"},"type":"desc"},{"attributes":{},"type":"types","children":[{"attributes":{"type":"qxWeb"},"type":"entry"}]}]}]},{"attributes":{"line":283,"sourceMethod":"fadeOut","isStatic":false,"sourceClass":"qx.module.Animation","name":"fadeOut"},"type":"method","children":[{"attributes":{},"type":"params","children":[{"attributes":{"optional":true,"name":"duration"},"type":"param","children":[{"attributes":{"text":"<p>The duration in milliseconds.</p>"},"type":"desc"},{"attributes":{},"type":"types","children":[{"attributes":{"type":"Number"},"type":"entry"}]}]}]},{"attributes":{"text":"<p>Fades out all elements in the collection.</p>"},"type":"desc"},{"attributes":{"targetMethod":"","targetClass":"qxWeb","sourceMethod":"fadeOut","sourceClass":"qx.module.Animation"},"type":"attach"},{"attributes":{},"type":"return","children":[{"attributes":{"text":"<p>The collection for chaining.</p>"},"type":"desc"},{"attributes":{},"type":"types","children":[{"attributes":{"type":"qxWeb"},"type":"entry"}]}]}]},{"attributes":{"line":252,"sourceMethod":"isEnded","isStatic":false,"sourceClass":"qx.module.Animation","name":"isEnded"},"type":"method","children":[{"attributes":{"text":"<p>Returns whether an animation has ended or not.</p>"},"type":"desc"},{"attributes":{"targetMethod":"","targetClass":"qxWeb","sourceMethod":"isEnded","sourceClass":"qx.module.Animation"},"type":"attach"},{"attributes":{},"type":"return","children":[{"attributes":{"text":"<code>true</code>, if an animation has ended."},"type":"desc"},{"attributes":{},"type":"types","children":[{"attributes":{"type":"Boolean"},"type":"entry"}]}]}]},{"attributes":{"line":235,"sourceMethod":"isPlaying","isStatic":false,"sourceClass":"qx.module.Animation","name":"isPlaying"},"type":"method","children":[{"attributes":{"text":"<p>Returns whether an animation is running or not.</p>"},"type":"desc"},{"attributes":{"targetMethod":"","targetClass":"qxWeb","sourceMethod":"isPlaying","sourceClass":"qx.module.Animation"},"type":"attach"},{"attributes":{},"type":"return","children":[{"attributes":{"text":"<code>true</code>, if an animation is running."},"type":"desc"},{"attributes":{},"type":"types","children":[{"attributes":{"type":"Boolean"},"type":"entry"}]}]}]},{"attributes":{"line":201,"sourceMethod":"pause","isStatic":false,"sourceClass":"qx.module.Animation","name":"pause"},"type":"method","children":[{"attributes":{"text":"<p>Manipulates the play state of the animation.\nThis can be used to pause an animation when running.</p>"},"type":"desc"},{"attributes":{"targetMethod":"","targetClass":"qxWeb","sourceMethod":"pause","sourceClass":"qx.module.Animation"},"type":"attach"},{"attributes":{},"type":"return","children":[{"attributes":{"text":"<p>The collection for chaining.</p>"},"type":"desc"},{"attributes":{},"type":"types","children":[{"attributes":{"type":"qxWeb"},"type":"entry"}]}]}]},{"attributes":{"line":184,"sourceMethod":"play","isStatic":false,"sourceClass":"qx.module.Animation","name":"play"},"type":"method","children":[{"attributes":{"text":"<p>Manipulates the play state of the animation.\nThis can be used to continue an animation when paused.</p>"},"type":"desc"},{"attributes":{"targetMethod":"","targetClass":"qxWeb","sourceMethod":"play","sourceClass":"qx.module.Animation"},"type":"attach"},{"attributes":{},"type":"return","children":[{"attributes":{"text":"<p>The collection for chaining.</p>"},"type":"desc"},{"attributes":{},"type":"types","children":[{"attributes":{"type":"qxWeb"},"type":"entry"}]}]}]},{"attributes":{"line":218,"sourceMethod":"stop","isStatic":false,"sourceClass":"qx.module.Animation","name":"stop"},"type":"method","children":[{"attributes":{"text":"<p>Stops a running animation.</p>"},"type":"desc"},{"attributes":{"targetMethod":"","targetClass":"qxWeb","sourceMethod":"stop","sourceClass":"qx.module.Animation"},"type":"attach"},{"attributes":{},"type":"return","children":[{"attributes":{"text":"<p>The collection for chaining.</p>"},"type":"desc"},{"attributes":{},"type":"types","children":[{"attributes":{"type":"qxWeb"},"type":"entry"}]}]}]}],"fileName":"qx.module.Animation","group":"Extras","desc":"<p>Cross browser animation layer. It uses feature detection to check if <span class=\"caps\">CSS</span>\nanimations are available and ready to use. If not, a JavaScript-based\nfallback will be used.</p>","events":[{"name":"animationEnd","type":"","desc":"<p>Fired when an animation has ended.</p>"},{"name":"animationIteration","type":"","desc":"<p>Fired when an animation has ended one iteration.</p>"},{"name":"animationStart","type":"","desc":"<p>Fired when an animation starts.</p>"}]},"Accordion":{"static":[],"member":[{"attributes":{"isStatic":false,"group":"Widget","name":"accordion","sourceMethod":"accordion","line":99,"sourceClass":"qx.ui.website.Accordion","prefixedMethodName":".accordion"},"type":"method","children":[{"attributes":{},"type":"params","children":[{"attributes":{"optional":true,"name":"preselected"},"type":"param","children":[{"attributes":{"text":"<p>The (zero-based) index of the panel that should initially be opened</p>"},"type":"desc"},{"attributes":{},"type":"types","children":[{"attributes":{"type":"Integer"},"type":"entry"}]}]}]},{"attributes":{"text":"<p>Factory method which converts the current collection into a collection of\naccordion widgets.</p>"},"type":"desc"},{"attributes":{},"type":"return","children":[{"attributes":{"text":"<p>A new Accordion collection.</p>"},"type":"desc"},{"attributes":{},"type":"types","children":[{"attributes":{"type":"qx.ui.website.Accordion"},"type":"entry"}]}]},{"attributes":{"targetMethod":"","targetClass":"qxWeb","sourceMethod":"accordion","sourceClass":"qx.ui.website.Accordion"},"type":"attach"}]}],"fileName":"qx.ui.website.Accordion","events":[],"desc":"<p>The Accordion is a group of vertically stacked panels (here called pages),\neach with a header.\nBy default, only one page is visible while the others are collapsed.\nClicking or tapping a collapsed page&#8217;s header will expand it while collapsing the\npreviously expanded page.</p>\n\n<h2>Markup</h2>\nThe Accordion contains an unordered list element (<code>ul</code>), which\nwill be created if not already present.\nHeaders and pages are list items (<code>li</code>). Each header must contain\na button with an <code>accordionPage</code> data attribute where the value is a\nCSS selector string identifying the corresponding page. Headers and pages\nwill not be created automatically. They can be predefined in the DOM before\nthe <code>q().accordion()</code> factory method is called, or added programmatically.\n\n<h2>CSS Classes</h2>\n<table>\n  <thead>\n    <tr>\n      <td>Class Name</td>\n      <td>Applied to</td>\n      <td>Description</td>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <td><code>qx-accordion</code></td>\n      <td>Container element</td>\n      <td>Identifies the Accordion widget</td>\n    </tr>\n    <tr>\n      <td><code>qx-accordion-button</code></td>\n      <td>Page header (<code>li</code>)</td>\n      <td>Identifies and styles the page headers</td>\n    </tr>\n    <tr>\n      <td><code>qx-accordion-button-active</code></td>\n      <td>Page header (<code>li</code>)</td>\n      <td>Identifies and styles the header of the currently expanded page. Applied in addition to <code>qx-accordion-button</code></td>\n    </tr>\n    <tr>\n      <td><code>qx-accordion-page</code></td>\n      <td>Page (<code>li</code>)</td>\n      <td>Identifies and styles the pages</td>\n    </tr>\n  </tbody>\n</table>\n\n<h2 class=\"widget-markup\">Generated DOM Structure</h2>","templates":"<p><strong>button</strong></p>\n\n<p>Template used by {@link qx.ui.website.Tabs#addButton} to create a new button.</p>\n\n<p>Default value:</p>\n\n<pre><li><button>{{{content}}}</button></li></pre>","superClass":"qx.ui.website.Tabs","group":"Widget"},"TextSelection":{"static":[],"member":[{"attributes":{"line":170,"sourceMethod":"clearTextSelection","isStatic":false,"sourceClass":"qx.module.TextSelection","name":"clearTextSelection"},"type":"method","children":[{"attributes":{"text":"<p>Clears the text selection of all elements.</p>"},"type":"desc"},{"attributes":{},"type":"return","children":[{"attributes":{"text":"<p>The collection for chaining.</p>"},"type":"desc"},{"attributes":{},"type":"types","children":[{"attributes":{"type":"qxWeb"},"type":"entry"}]}]},{"attributes":{"targetMethod":"","targetClass":"qxWeb","sourceMethod":"clearTextSelection","sourceClass":"qx.module.TextSelection"},"type":"attach"}]},{"attributes":{"line":124,"sourceMethod":"getTextSelectionEnd","isStatic":false,"sourceClass":"qx.module.TextSelection","name":"getTextSelectionEnd"},"type":"method","children":[{"attributes":{"text":"<p>Get the end of the text selection of the first element.</p>"},"type":"desc"},{"attributes":{},"type":"return","children":[{"attributes":{"text":""},"type":"desc"},{"attributes":{},"type":"types","children":[{"attributes":{"type":"Integer"},"type":"entry"},{"attributes":{"type":"null"},"type":"entry"}]}]},{"attributes":{"targetMethod":"","targetClass":"qxWeb","sourceMethod":"getTextSelectionEnd","sourceClass":"qx.module.TextSelection"},"type":"attach"}]},{"attributes":{"line":84,"sourceMethod":"getTextSelectionLength","isStatic":false,"sourceClass":"qx.module.TextSelection","name":"getTextSelectionLength"},"type":"method","children":[{"attributes":{"text":"<p>Get the length of the text selection of the first element.</p>"},"type":"desc"},{"attributes":{},"type":"return","children":[{"attributes":{"text":""},"type":"desc"},{"attributes":{},"type":"types","children":[{"attributes":{"type":"Integer"},"type":"entry"},{"attributes":{"type":"null"},"type":"entry"}]}]},{"attributes":{"targetMethod":"","targetClass":"qxWeb","sourceMethod":"getTextSelectionLength","sourceClass":"qx.module.TextSelection"},"type":"attach"}]},{"attributes":{"line":104,"sourceMethod":"getTextSelectionStart","isStatic":false,"sourceClass":"qx.module.TextSelection","name":"getTextSelectionStart"},"type":"method","children":[{"attributes":{"text":"<p>Get the start of the text selection of the first element.</p>"},"type":"desc"},{"attributes":{},"type":"return","children":[{"attributes":{"text":""},"type":"desc"},{"attributes":{},"type":"types","children":[{"attributes":{"type":"Integer"},"type":"entry"},{"attributes":{"type":"null"},"type":"entry"}]}]},{"attributes":{"targetMethod":"","targetClass":"qxWeb","sourceMethod":"getTextSelectionStart","sourceClass":"qx.module.TextSelection"},"type":"attach"}]},{"attributes":{"line":148,"sourceMethod":"setTextSelection","isStatic":false,"sourceClass":"qx.module.TextSelection","name":"setTextSelection"},"type":"method","children":[{"attributes":{},"type":"params","children":[{"attributes":{"name":"start"},"type":"param","children":[{"attributes":{"text":"<p>start of the selection (zero based)</p>"},"type":"desc"},{"attributes":{},"type":"types","children":[{"attributes":{"type":"Integer"},"type":"entry"}]}]},{"attributes":{"name":"end"},"type":"param","children":[{"attributes":{"text":"<p>end of the selection</p>"},"type":"desc"},{"attributes":{},"type":"types","children":[{"attributes":{"type":"Integer"},"type":"entry"}]}]}]},{"attributes":{"text":"<p>Set the text selection of the first element in the collection\nwith the given start and end value.\nIf no end value is passed the selection will extend to the end.</p>"},"type":"desc"},{"attributes":{},"type":"return","children":[{"attributes":{"text":"<p>The collection for chaining.</p>"},"type":"desc"},{"attributes":{},"type":"types","children":[{"attributes":{"type":"qxWeb"},"type":"entry"}]}]},{"attributes":{"targetMethod":"","targetClass":"qxWeb","sourceMethod":"setTextSelection","sourceClass":"qx.module.TextSelection"},"type":"attach"}]}],"fileName":"qx.module.TextSelection","group":"Extras","desc":"<p>Text selection manipulation module</p>","events":[]},"Attribute":{"static":[],"member":[{"attributes":{"isStatic":false,"group":"Core","name":"getAttribute","sourceMethod":"getAttribute","line":81,"sourceClass":"qx.module.Attribute"},"type":"method","children":[{"attributes":{},"type":"params","children":[{"attributes":{"name":"name"},"type":"param","children":[{"attributes":{"text":"<p>Attribute name</p>"},"type":"desc"},{"attributes":{},"type":"types","children":[{"attributes":{"type":"String"},"type":"entry"}]}]}]},{"attributes":{"text":"<p>Returns the value of the given attribute for the first item in the\ncollection.</p>"},"type":"desc"},{"attributes":{"targetMethod":"","targetClass":"qxWeb","sourceMethod":"getAttribute","sourceClass":"qx.module.Attribute"},"type":"attach"},{"attributes":{},"type":"return","children":[{"attributes":{"text":"<p>Attribute value</p>"},"type":"desc"},{"attributes":{},"type":"types","children":[{"attributes":{"type":"var"},"type":"entry"}]}]}]},{"attributes":{"isStatic":false,"group":"Core","name":"getAttributes","sourceMethod":"getAttributes","line":126,"sourceClass":"qx.module.Attribute"},"type":"method","children":[{"attributes":{},"type":"params","children":[{"attributes":{"name":"names"},"type":"param","children":[{"attributes":{"text":"<p>List of attribute names</p>"},"type":"desc"},{"attributes":{},"type":"types","children":[{"attributes":{"type":"String","dimensions":1},"type":"entry"}]}]}]},{"attributes":{"text":"<p>Returns the values of multiple attributes for the first item in the collection</p>"},"type":"desc"},{"attributes":{"targetMethod":"","targetClass":"qxWeb","sourceMethod":"getAttributes","sourceClass":"qx.module.Attribute"},"type":"attach"},{"attributes":{},"type":"return","children":[{"attributes":{"text":"<p>Map of attribute name/value pairs</p>"},"type":"desc"},{"attributes":{},"type":"types","children":[{"attributes":{"type":"Map"},"type":"entry"}]}]}]},{"attributes":{"isStatic":false,"group":"Core","name":"getHtml","sourceMethod":"getHtml","line":33,"sourceClass":"qx.module.Attribute"},"type":"method","children":[{"attributes":{"text":"<p>Returns the <span class=\"caps\">HTML</span> content of the first item in the collection</p>"},"type":"desc"},{"attributes":{"targetMethod":"","targetClass":"qxWeb","sourceMethod":"getHtml","sourceClass":"qx.module.Attribute"},"type":"attach"},{"attributes":{},"type":"return","children":[{"attributes":{"text":"<p><span class=\"caps\">HTML</span> content or null if the collection is empty</p>"},"type":"desc"},{"attributes":{},"type":"types","children":[{"attributes":{"type":"String"},"type":"entry"},{"attributes":{"type":"null"},"type":"entry"}]}]}]},{"attributes":{"isStatic":false,"group":"Core","name":"getProperties","sourceMethod":"getProperties","line":219,"sourceClass":"qx.module.Attribute"},"type":"method","children":[{"attributes":{},"type":"params","children":[{"attributes":{"name":"names"},"type":"param","children":[{"attributes":{"text":"<p>List of property names</p>"},"type":"desc"},{"attributes":{},"type":"types","children":[{"attributes":{"type":"String","dimensions":1},"type":"entry"}]}]}]},{"attributes":{"text":"<p>Returns the values of multiple properties for the first item in the collection</p>"},"type":"desc"},{"attributes":{"targetMethod":"","targetClass":"qxWeb","sourceMethod":"getProperties","sourceClass":"qx.module.Attribute"},"type":"attach"},{"attributes":{},"type":"return","children":[{"attributes":{"text":"<p>Map of property name/value pairs</p>"},"type":"desc"},{"attributes":{},"type":"types","children":[{"attributes":{"type":"Map"},"type":"entry"}]}]}]},{"attributes":{"isStatic":false,"group":"Core","name":"getProperty","sourceMethod":"getProperty","line":174,"sourceClass":"qx.module.Attribute"},"type":"method","children":[{"attributes":{},"type":"params","children":[{"attributes":{"name":"name"},"type":"param","children":[{"attributes":{"text":"<p>Property name</p>"},"type":"desc"},{"attributes":{},"type":"types","children":[{"attributes":{"type":"String"},"type":"entry"}]}]}]},{"attributes":{"text":"<p>Returns the value of the given property for the first item in the\ncollection</p>"},"type":"desc"},{"attributes":{"targetMethod":"","targetClass":"qxWeb","sourceMethod":"getProperty","sourceClass":"qx.module.Attribute"},"type":"attach"},{"attributes":{},"type":"return","children":[{"attributes":{"text":"<p>Property value</p>"},"type":"desc"},{"attributes":{},"type":"types","children":[{"attributes":{"type":"var"},"type":"entry"}]}]}]},{"attributes":{"isStatic":false,"group":"Core","name":"getValue","sourceMethod":"getValue","line":252,"sourceClass":"qx.module.Attribute"},"type":"method","children":[{"attributes":{"text":"<p>Returns the currently configured value for the first item in the collection.\nWorks with simple input fields as well as with select boxes or option\nelements. Returns an array for select boxes with multi selection. In all\nother cases, a string is returned.</p>"},"type":"desc"},{"attributes":{"targetMethod":"","targetClass":"qxWeb","sourceMethod":"getValue","sourceClass":"qx.module.Attribute"},"type":"attach"},{"attributes":{},"type":"return","children":[{"attributes":{"text":"<p>String value or Array of string values (for multiselect)</p>"},"type":"desc"},{"attributes":{},"type":"types","children":[{"attributes":{"type":"String"},"type":"entry"},{"attributes":{"type":"String","dimensions":1},"type":"entry"}]}]}]},{"attributes":{"isStatic":false,"group":"Core","name":"removeAttribute","sourceMethod":"removeAttribute","line":96,"sourceClass":"qx.module.Attribute"},"type":"method","children":[{"attributes":{},"type":"params","children":[{"attributes":{"name":"name"},"type":"param","children":[{"attributes":{"text":"<p>Attribute name</p>"},"type":"desc"},{"attributes":{},"type":"types","children":[{"attributes":{"type":"String"},"type":"entry"}]}]}]},{"attributes":{"text":"<p>Removes the given attribute from all elements in the collection</p>"},"type":"desc"},{"attributes":{"targetMethod":"","targetClass":"qxWeb","sourceMethod":"removeAttribute","sourceClass":"qx.module.Attribute"},"type":"attach"},{"attributes":{},"type":"return","children":[{"attributes":{"text":"<p>The collection for chaining</p>"},"type":"desc"},{"attributes":{},"type":"types","children":[{"attributes":{"type":"qxWeb"},"type":"entry"}]}]}]},{"attributes":{"isStatic":false,"group":"Core","name":"removeAttributes","sourceMethod":"removeAttributes","line":142,"sourceClass":"qx.module.Attribute"},"type":"method","children":[{"attributes":{},"type":"params","children":[{"attributes":{"name":"attributes"},"type":"param","children":[{"attributes":{"text":"<p>List of attribute names</p>"},"type":"desc"},{"attributes":{},"type":"types","children":[{"attributes":{"type":"String","dimensions":1},"type":"entry"}]}]}]},{"attributes":{"text":"<p>Removes multiple attributes from each item in the collection.</p>"},"type":"desc"},{"attributes":{"targetMethod":"","targetClass":"qxWeb","sourceMethod":"removeAttributes","sourceClass":"qx.module.Attribute"},"type":"attach"},{"attributes":{},"type":"return","children":[{"attributes":{"text":"<p>The collection for chaining</p>"},"type":"desc"},{"attributes":{},"type":"types","children":[{"attributes":{"type":"qxWeb"},"type":"entry"}]}]}]},{"attributes":{"isStatic":false,"group":"Core","name":"removeProperties","sourceMethod":"removeProperties","line":204,"sourceClass":"qx.module.Attribute"},"type":"method","children":[{"attributes":{},"type":"params","children":[{"attributes":{"name":"properties"},"type":"param","children":[{"attributes":{"text":"<p>An array of property names</p>"},"type":"desc"},{"attributes":{},"type":"types","children":[{"attributes":{"type":"String","dimensions":1},"type":"entry"}]}]}]},{"attributes":{"text":"<p>Removes multiple properties for each item in the collection.</p>"},"type":"desc"},{"attributes":{"targetMethod":"","targetClass":"qxWeb","sourceMethod":"removeProperties","sourceClass":"qx.module.Attribute"},"type":"attach"},{"attributes":{},"type":"return","children":[{"attributes":{"text":"<p>The collection for chaining</p>"},"type":"desc"},{"attributes":{},"type":"types","children":[{"attributes":{"type":"qxWeb"},"type":"entry"}]}]}]},{"attributes":{"isStatic":false,"group":"Core","name":"removeProperty","sourceMethod":"removeProperty","line":235,"sourceClass":"qx.module.Attribute"},"type":"method","children":[{"attributes":{},"type":"params","children":[{"attributes":{"name":"name"},"type":"param","children":[{"attributes":{"text":"<p>Property name</p>"},"type":"desc"},{"attributes":{},"type":"types","children":[{"attributes":{"type":"String"},"type":"entry"}]}]}]},{"attributes":{"text":"<p>Deletes a property from each item in the collection</p>"},"type":"desc"},{"attributes":{"targetMethod":"","targetClass":"qxWeb","sourceMethod":"removeProperty","sourceClass":"qx.module.Attribute"},"type":"attach"},{"attributes":{},"type":"return","children":[{"attributes":{"text":"<p>The collection for chaining</p>"},"type":"desc"},{"attributes":{},"type":"types","children":[{"attributes":{"type":"qxWeb"},"type":"entry"}]}]}]},{"attributes":{"isStatic":false,"group":"Core","name":"setAttribute","sourceMethod":"setAttribute","line":65,"sourceClass":"qx.module.Attribute"},"type":"method","children":[{"attributes":{},"type":"params","children":[{"attributes":{"name":"name"},"type":"param","children":[{"attributes":{"text":"<p>Attribute name</p>"},"type":"desc"},{"attributes":{},"type":"types","children":[{"attributes":{"type":"String"},"type":"entry"}]}]},{"attributes":{"name":"value"},"type":"param","children":[{"attributes":{"text":"<p>Attribute value</p>"},"type":"desc"},{"attributes":{},"type":"types","children":[{"attributes":{"type":"var"},"type":"entry"}]}]}]},{"attributes":{"text":"<p>Sets an <span class=\"caps\">HTML</span> attribute on each item in the collection</p>"},"type":"desc"},{"attributes":{"targetMethod":"","targetClass":"qxWeb","sourceMethod":"setAttribute","sourceClass":"qx.module.Attribute"},"type":"attach"},{"attributes":{},"type":"return","children":[{"attributes":{"text":"<p>The collection for chaining</p>"},"type":"desc"},{"attributes":{},"type":"types","children":[{"attributes":{"type":"qxWeb"},"type":"entry"}]}]}]},{"attributes":{"isStatic":false,"group":"Core","name":"setAttributes","sourceMethod":"setAttributes","line":111,"sourceClass":"qx.module.Attribute"},"type":"method","children":[{"attributes":{},"type":"params","children":[{"attributes":{"name":"attributes"},"type":"param","children":[{"attributes":{"text":"<p>A map of attribute name/value pairs</p>"},"type":"desc"},{"attributes":{},"type":"types","children":[{"attributes":{"type":"Map"},"type":"entry"}]}]}]},{"attributes":{"text":"<p>Sets multiple attributes for each item in the collection.</p>"},"type":"desc"},{"attributes":{"targetMethod":"","targetClass":"qxWeb","sourceMethod":"setAttributes","sourceClass":"qx.module.Attribute"},"type":"attach"},{"attributes":{},"type":"return","children":[{"attributes":{"text":"<p>The collection for chaining</p>"},"type":"desc"},{"attributes":{},"type":"types","children":[{"attributes":{"type":"qxWeb"},"type":"entry"}]}]}]},{"attributes":{"isStatic":false,"group":"Core","name":"setHtml","sourceMethod":"setHtml","line":48,"sourceClass":"qx.module.Attribute"},"type":"method","children":[{"attributes":{},"type":"params","children":[{"attributes":{"name":"html"},"type":"param","children":[{"attributes":{"text":"<p><span class=\"caps\">HTML</span> string</p>"},"type":"desc"},{"attributes":{},"type":"types","children":[{"attributes":{"type":"String"},"type":"entry"}]}]}]},{"attributes":{"text":"<p>Sets the <span class=\"caps\">HTML</span> content of each item in the collection</p>"},"type":"desc"},{"attributes":{"targetMethod":"","targetClass":"qxWeb","sourceMethod":"setHtml","sourceClass":"qx.module.Attribute"},"type":"attach"},{"attributes":{},"type":"return","children":[{"attributes":{"text":"<p>The collection for chaining</p>"},"type":"desc"},{"attributes":{},"type":"types","children":[{"attributes":{"type":"qxWeb"},"type":"entry"}]}]}]},{"attributes":{"isStatic":false,"group":"Core","name":"setProperties","sourceMethod":"setProperties","line":189,"sourceClass":"qx.module.Attribute"},"type":"method","children":[{"attributes":{},"type":"params","children":[{"attributes":{"name":"properties"},"type":"param","children":[{"attributes":{"text":"<p>A map of property name/value pairs</p>"},"type":"desc"},{"attributes":{},"type":"types","children":[{"attributes":{"type":"Map"},"type":"entry"}]}]}]},{"attributes":{"text":"<p>Sets multiple properties for each item in the collection.</p>"},"type":"desc"},{"attributes":{"targetMethod":"","targetClass":"qxWeb","sourceMethod":"setProperties","sourceClass":"qx.module.Attribute"},"type":"attach"},{"attributes":{},"type":"return","children":[{"attributes":{"text":"<p>The collection for chaining</p>"},"type":"desc"},{"attributes":{},"type":"types","children":[{"attributes":{"type":"qxWeb"},"type":"entry"}]}]}]},{"attributes":{"isStatic":false,"group":"Core","name":"setProperty","sourceMethod":"setProperty","line":158,"sourceClass":"qx.module.Attribute"},"type":"method","children":[{"attributes":{},"type":"params","children":[{"attributes":{"name":"name"},"type":"param","children":[{"attributes":{"text":"<p>Property name</p>"},"type":"desc"},{"attributes":{},"type":"types","children":[{"attributes":{"type":"String"},"type":"entry"}]}]},{"attributes":{"name":"value"},"type":"param","children":[{"attributes":{"text":"<p>Property value</p>"},"type":"desc"},{"attributes":{},"type":"types","children":[{"attributes":{"type":"var"},"type":"entry"}]}]}]},{"attributes":{"text":"<p>Sets a property on each item in the collection</p>"},"type":"desc"},{"attributes":{"targetMethod":"","targetClass":"qxWeb","sourceMethod":"setProperty","sourceClass":"qx.module.Attribute"},"type":"attach"},{"attributes":{},"type":"return","children":[{"attributes":{"text":"<p>The collection for chaining</p>"},"type":"desc"},{"attributes":{},"type":"types","children":[{"attributes":{"type":"qxWeb"},"type":"entry"}]}]}]},{"attributes":{"isStatic":false,"group":"Core","name":"setValue","sourceMethod":"setValue","line":275,"sourceClass":"qx.module.Attribute"},"type":"method","children":[{"attributes":{},"type":"params","children":[{"attributes":{"name":"value"},"type":"param","children":[{"attributes":{"text":"<p>The value to apply</p>"},"type":"desc"},{"attributes":{},"type":"types","children":[{"attributes":{"type":"String"},"type":"entry"},{"attributes":{"type":"Number"},"type":"entry"},{"attributes":{"type":"Array"},"type":"entry"}]}]}]},{"attributes":{"text":"<p>Applies the given value to each element in the collection.\nNormally the value is given as a string/number value and applied to the\nfield content (textfield, textarea) or used to detect whether the field\nis checked (checkbox, radiobutton).\nSupports array values for selectboxes (multiple selection) and checkboxes\nor radiobuttons (for convenience).</p>\n\n<p>Please note: To modify the value attribute of a checkbox or radiobutton\nuse {@link #setAttribute} instead and manipulate the <code>checked</code> attribute.</p>"},"type":"desc"},{"attributes":{"targetMethod":"","targetClass":"qxWeb","sourceMethod":"setValue","sourceClass":"qx.module.Attribute"},"type":"attach"},{"attributes":{},"type":"return","children":[{"attributes":{"text":"<p>The collection for chaining</p>"},"type":"desc"},{"attributes":{},"type":"types","children":[{"attributes":{"type":"qxWeb"},"type":"entry"}]}]}]}],"fileName":"qx.module.Attribute","group":"Core","desc":"<p>Attribute/Property handling for <span class=\"caps\">DOM</span> elements.</p>","events":[]},"Button":{"static":[],"member":[{"attributes":{"isStatic":false,"group":"Widget","name":"button","sourceMethod":"button","line":63,"sourceClass":"qx.ui.website.Button","prefixedMethodName":".button"},"type":"method","children":[{"attributes":{},"type":"params","children":[{"attributes":{"optional":true,"name":"label"},"type":"param","children":[{"attributes":{"text":"<p>The label of the button.</p>"},"type":"desc"},{"attributes":{},"type":"types","children":[{"attributes":{"type":"String"},"type":"entry"}]}]},{"attributes":{"optional":true,"name":"icon"},"type":"param","children":[{"attributes":{"text":"<p>The url for the button icon.</p>"},"type":"desc"},{"attributes":{},"type":"types","children":[{"attributes":{"type":"String"},"type":"entry"}]}]}]},{"attributes":{"text":"<p>Factory method for the button widget which converts a standard\ncollection into a collection of buttons.</p>"},"type":"desc"},{"attributes":{},"type":"return","children":[{"attributes":{"text":"<p>A collection of buttons.</p>"},"type":"desc"},{"attributes":{},"type":"types","children":[{"attributes":{"type":"qx.ui.website.Button"},"type":"entry"}]}]},{"attributes":{"targetMethod":"","targetClass":"qxWeb","sourceMethod":"button","sourceClass":"qx.ui.website.Button"},"type":"attach"}]},{"attributes":{"line":144,"name":"getIcon","prefixedMethodName":"button.getIcon"},"type":"method","children":[{"attributes":{"text":"<p>Returns the <span class=\"caps\">URI</span> of the button&#8217;s icon</p>"},"type":"desc"},{"attributes":{},"type":"return","children":[{"attributes":{"text":"<p>Icon image <span class=\"caps\">URI</span></p>"},"type":"desc"},{"attributes":{},"type":"types","children":[{"attributes":{"type":"String"},"type":"entry"},{"attributes":{"type":"null"},"type":"entry"}]}]}]},{"attributes":{"line":119,"name":"getLabel","prefixedMethodName":"button.getLabel"},"type":"method","children":[{"attributes":{"text":"<p>Returns the button&#8217;s label text</p>"},"type":"desc"},{"attributes":{},"type":"return","children":[{"attributes":{"text":"<p>label text</p>"},"type":"desc"},{"attributes":{},"type":"types","children":[{"attributes":{"type":"String"},"type":"entry"}]}]}]},{"attributes":{"line":130,"name":"setIcon","prefixedMethodName":"button.setIcon"},"type":"method","children":[{"attributes":{},"type":"params","children":[{"attributes":{"name":"src"},"type":"param","children":[{"attributes":{"text":"<p>source <span class=\"caps\">URI</span> for the icon</p>"},"type":"desc"},{"attributes":{},"type":"types","children":[{"attributes":{"type":"String"},"type":"entry"}]}]}]},{"attributes":{"text":"<p>Sets the source of the button&#8217;s icon</p>"},"type":"desc"},{"attributes":{},"type":"return","children":[{"attributes":{"text":"<p>The collection for chaining</p>"},"type":"desc"},{"attributes":{},"type":"types","children":[{"attributes":{"type":"qxWeb"},"type":"entry"}]}]}]},{"attributes":{"line":108,"name":"setLabel","prefixedMethodName":"button.setLabel"},"type":"method","children":[{"attributes":{},"type":"params","children":[{"attributes":{"name":"value"},"type":"param","children":[{"attributes":{"text":"<p>label text</p>"},"type":"desc"},{"attributes":{},"type":"types","children":[{"attributes":{"type":"String"},"type":"entry"}]}]}]},{"attributes":{"text":"<p>Sets the button&#8217;s label text</p>"},"type":"desc"},{"attributes":{},"type":"return","children":[{"attributes":{"text":"<p>The collection for chaining</p>"},"type":"desc"},{"attributes":{},"type":"types","children":[{"attributes":{"type":"qxWeb"},"type":"entry"}]}]}]},{"attributes":{"line":155,"name":"setMenu","prefixedMethodName":"button.setMenu"},"type":"method","children":[{"attributes":{},"type":"params","children":[{"attributes":{"name":"menu"},"type":"param","children":[{"attributes":{"text":"<p>menu element wrapped in a collection</p>"},"type":"desc"},{"attributes":{},"type":"types","children":[{"attributes":{"type":"qxWeb"},"type":"entry"}]}]}]},{"attributes":{"text":"<p>Sets the menu to be shown when the button is clicked or tapped</p>"},"type":"desc"},{"attributes":{},"type":"return","children":[{"attributes":{"text":"<p>The collection for chaining</p>"},"type":"desc"},{"attributes":{},"type":"types","children":[{"attributes":{"type":"qxWeb"},"type":"entry"}]}]}]}],"fileName":"qx.ui.website.Button","events":[],"desc":"<p>This is a simple button widget which takes care of setting the label\nand icon of a button.</p>\n\n<h2>Markup</h2>\nThe Button can contain a <code>span</code> element for the label and/or\nan <code>img</code> element for the icon.\n\n<h2>CSS Classes</h2>\n<table>\n  <thead>\n    <tr>\n      <td>Class Name</td>\n      <td>Applied to</td>\n      <td>Description</td>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <td><code>qx-button</code></td>\n      <td>Container element</td>\n      <td>Identifies the Button widget</td>\n    </tr>\n  </tbody>\n</table>\n\n<h2 class=\"widget-markup\">Generated DOM Structure</h2>","superClass":"qx.ui.website.Widget","group":"Widget"},"Dataset":{"static":[],"member":[{"attributes":{"line":67,"sourceMethod":"getAllData","isStatic":false,"sourceClass":"qx.module.Dataset","name":"getAllData"},"type":"method","children":[{"attributes":{"text":"<p>Returns a map containing all the <span class=\"caps\">HTML</span> &#8220;data-*&#8221; attributes of the specified element</p>"},"type":"desc"},{"attributes":{"targetMethod":"","targetClass":"qxWeb","sourceMethod":"getAllData","sourceClass":"qx.module.Dataset"},"type":"attach"},{"attributes":{},"type":"return","children":[{"attributes":{"text":"<p>The map containing the &#8220;data-*&#8221; attributes</p>"},"type":"desc"},{"attributes":{},"type":"types","children":[{"attributes":{"type":"Map"},"type":"entry"}]}]}]},{"attributes":{"line":53,"sourceMethod":"getData","isStatic":false,"sourceClass":"qx.module.Dataset","name":"getData"},"type":"method","children":[{"attributes":{},"type":"params","children":[{"attributes":{"name":"name"},"type":"param","children":[{"attributes":{"text":"<p>Name of the attribute [CamelCase variant]</p>"},"type":"desc"},{"attributes":{},"type":"types","children":[{"attributes":{"type":"String"},"type":"entry"}]}]}]},{"attributes":{"text":"<p>Returns the value of the given <span class=\"caps\">HTML</span> &#8220;data-*&#8221; attribute for the first item in the collection</p>"},"type":"desc"},{"attributes":{"targetMethod":"","targetClass":"qxWeb","sourceMethod":"getData","sourceClass":"qx.module.Dataset"},"type":"attach"},{"attributes":{},"type":"return","children":[{"attributes":{"text":"<p>The value of the attribute</p>"},"type":"desc"},{"attributes":{},"type":"types","children":[{"attributes":{"type":"var"},"type":"entry"}]}]}]},{"attributes":{"line":92,"sourceMethod":"removeData","isStatic":false,"sourceClass":"qx.module.Dataset","name":"removeData"},"type":"method","children":[{"attributes":{},"type":"params","children":[{"attributes":{"name":"name"},"type":"param","children":[{"attributes":{"text":"<p>Name of the attribute</p>"},"type":"desc"},{"attributes":{},"type":"types","children":[{"attributes":{"type":"String"},"type":"entry"}]}]}]},{"attributes":{"text":"<p>Remove an <span class=\"caps\">HTML</span> &#8220;data-*&#8221; attribute on each item in the collection</p>"},"type":"desc"},{"attributes":{"targetMethod":"","targetClass":"qxWeb","sourceMethod":"removeData","sourceClass":"qx.module.Dataset"},"type":"attach"},{"attributes":{},"type":"return","children":[{"attributes":{"text":"<p>The collection for chaining</p>"},"type":"desc"},{"attributes":{},"type":"types","children":[{"attributes":{"type":"qxWeb"},"type":"entry"}]}]}]},{"attributes":{"line":34,"sourceMethod":"setData","isStatic":false,"sourceClass":"qx.module.Dataset","name":"setData"},"type":"method","children":[{"attributes":{},"type":"params","children":[{"attributes":{"name":"name"},"type":"param","children":[{"attributes":{"text":"<p>Name of the attribute [CamelCase variant]</p>"},"type":"desc"},{"attributes":{},"type":"types","children":[{"attributes":{"type":"String"},"type":"entry"}]}]},{"attributes":{"name":"value"},"type":"param","children":[{"attributes":{"text":"<p>New value of the attribute</p>"},"type":"desc"},{"attributes":{},"type":"types","children":[{"attributes":{"type":"var"},"type":"entry"}]}]}]},{"attributes":{"text":"<p>Sets an <span class=\"caps\">HTML</span> &#8220;data-*&#8221; attribute on each item in the collection</p>"},"type":"desc"},{"attributes":{"targetMethod":"","targetClass":"qxWeb","sourceMethod":"setData","sourceClass":"qx.module.Dataset"},"type":"attach"},{"attributes":{},"type":"return","children":[{"attributes":{"text":"<p>The collection for chaining</p>"},"type":"desc"},{"attributes":{},"type":"types","children":[{"attributes":{"type":"qxWeb"},"type":"entry"}]}]}]}],"fileName":"qx.module.Dataset","group":"Extras","desc":"<p>Module for handling of HTML5 data-* attributes</p>","events":[]},"Calendar":{"static":[],"member":[{"attributes":{"isStatic":false,"group":"Widget","name":"calendar","sourceMethod":"calendar","line":258,"sourceClass":"qx.ui.website.Calendar","prefixedMethodName":".calendar"},"type":"method","children":[{"attributes":{},"type":"params","children":[{"attributes":{"defaultValue":"null","optional":true,"name":"date"},"type":"param","children":[{"attributes":{"text":"<p>The initial Date of the calendar.</p>"},"type":"desc"},{"attributes":{},"type":"types","children":[{"attributes":{"type":"Date"},"type":"entry"}]}]}]},{"attributes":{"text":"<p>Factory method which converts the current collection into a collection of\nCalendar widgets. Therefore, an initialization process needs to be done which\ncan be configured with some parameter.</p>"},"type":"desc"},{"attributes":{},"type":"return","children":[{"attributes":{"text":"<p>A new calendar collection.</p>"},"type":"desc"},{"attributes":{},"type":"types","children":[{"attributes":{"type":"qx.ui.website.Calendar"},"type":"entry"}]}]},{"attributes":{"targetMethod":"","targetClass":"qxWeb","sourceMethod":"calendar","sourceClass":"qx.ui.website.Calendar"},"type":"attach"}]},{"attributes":{"line":401,"name":"getValue","prefixedMethodName":"calendar.getValue"},"type":"method","children":[{"attributes":{"text":"<p>Returns the currently selected date of the first\ncalendar widget in the collection.</p>"},"type":"desc"},{"attributes":{},"type":"return","children":[{"attributes":{"text":"<p>The collection for chaining.</p>"},"type":"desc"},{"attributes":{},"type":"types","children":[{"attributes":{"type":"qx.ui.website.Calendar"},"type":"entry"}]}]}]},{"attributes":{"line":344,"name":"setValue","prefixedMethodName":"calendar.setValue"},"type":"method","children":[{"attributes":{},"type":"params","children":[{"attributes":{"name":"value"},"type":"param","children":[{"attributes":{"text":"<p>Date or array of dates to be displayed.</p>"},"type":"desc"},{"attributes":{},"type":"types","children":[{"attributes":{"type":"Date"},"type":"entry"},{"attributes":{"type":"Array"},"type":"entry"}]}]}]},{"attributes":{"text":"<p>Sets the given date as the current value displays it</p>"},"type":"desc"},{"attributes":{},"type":"return","children":[{"attributes":{"text":"<p>The collection for chaining.</p>"},"type":"desc"},{"attributes":{},"type":"types","children":[{"attributes":{"type":"qx.ui.website.Calendar"},"type":"entry"}]}]}]},{"attributes":{"line":413,"name":"showValue","prefixedMethodName":"calendar.showValue"},"type":"method","children":[{"attributes":{},"type":"params","children":[{"attributes":{"name":"value"},"type":"param","children":[{"attributes":{"text":"<p>Date to display.</p>"},"type":"desc"},{"attributes":{},"type":"types","children":[{"attributes":{"type":"Date"},"type":"entry"}]}]}]},{"attributes":{"text":"<p>Displays the given date</p>"},"type":"desc"},{"attributes":{},"type":"return","children":[{"attributes":{"text":"<p>The collection for chaining.</p>"},"type":"desc"},{"attributes":{},"type":"types","children":[{"attributes":{"type":"qx.ui.website.Calendar"},"type":"entry"}]}]}]}],"fileName":"qx.ui.website.Calendar","events":[{"name":"changeValue","type":"Date","desc":"<p>Fired at each value change</p>"},{"name":"rendered","type":"","desc":"<p>Fired whenvever a render process finished. This event can be used as hook to add\n   custom markup and/or manipulate existing.</p>"}],"desc":"<p>This is a calendar widget used to select a date. It contain a set of\nbuttons to switch to the next or previous month as well as a button for\neach day in the month.</p>\n\n<h2>CSS Classes</h2>\n<table>\n  <thead>\n    <tr>\n      <td>Class Name</td>\n      <td>Applied to</td>\n      <td>Description</td>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <td><code>qx-calendar</code></td>\n      <td>Container element</td>\n      <td>Identifies the Calendar widget</td>\n    </tr>\n    <tr>\n      <td><code>qx-calendar-container</code></td>\n      <td>Container element (<code>table</code>)</td>\n      <td>Identifies the table container of the Calendar widget</td>\n    </tr>\n    <tr>\n      <td><code>qx-calendar-prev</code></td>\n      <td><code>button</code></td>\n      <td>Identifies and styles the \"previous month\" button</td>\n    </tr>\n    <tr>\n      <td><code>qx-calendar-prev-container</code></td>\n      <td>Container element (<code>td</code>)</td>\n      <td>Identifies and styles the \"previous month\" container</td>\n    </tr>\n    <tr>\n      <td><code>qx-calendar-next</code></td>\n      <td><code>button</code></td>\n      <td>Identifies and styles the \"next month\" button</td>\n    </tr>\n    <tr>\n      <td><code>qx-calendar-next-container</code></td>\n      <td>Container element (<code>td</code>)</td>\n      <td>Identifies and styles the \"next month\" container</td>\n    </tr>\n    <tr>\n      <td><code>qx-calendar-previous-month</code></td>\n      <td>Day cell (<code>td</code>)</td>\n      <td>Identifies and styles calendar cells for days from the previous month</td>\n    </tr>\n    <tr>\n      <td><code>qx-calendar-next-month</code></td>\n      <td>Day cell (<code>td</code>)</td>\n      <td>Identifies and styles calendar cells for days from the next month</td>\n    </tr>\n    <tr>\n      <td><code>qx-calendar-dayname</code></td>\n      <td>Day name (<code>td</code>)</td>\n      <td>Identifies and styles the day name cell</td>\n    </tr>\n    <tr>\n      <td><code>qx-calendar-day</code></td>\n      <td>Day (<code>button</code>)</td>\n      <td>Identifies and styles the day buttons</td>\n    </tr>\n    <tr>\n      <td><code>qx-calendar-weekday</code></td>\n      <td>Day cell (<code>td</code>)</td>\n      <td>Identifies and styles the weekday cells</td>\n    </tr>\n    <tr>\n      <td><code>qx-calendar-weekend</code></td>\n      <td>Day cell (<code>td</code>)</td>\n      <td>Identifies and styles the weekend cells</td>\n    </tr>\n    <tr>\n      <td><code>qx-calendar-selected</code></td>\n      <td>Day cell (<code>td</code>)</td>\n      <td>Identifies and styles the cell containing the selected day's button</td>\n    </tr>\n    <tr>\n      <td><code>qx-calendar-today</code></td>\n      <td>Day cell (<code>td</code>)</td>\n      <td>Identifies and styles the cell containing the current day button</td>\n    </tr>\n    <tr>\n      <td><code>qx-calendar-past</code></td>\n      <td>Day cell (<code>td</code>)</td>\n      <td>Identifies and styles all cells containing day buttons in the past</td>\n    </tr>\n    <tr>\n      <td><code>qx-hidden</code></td>\n      <td>Day (<code>button</code>)</td>\n      <td>Added to days of previous / next month if the configuration <code>hideDaysOtherMonth</code>\n            is set to <code>true</code> <br /> The default style property used is <code>visibility: hidden</code>\n        </td>\n    </tr>\n  </tbody>\n</table>\n\n<h2 class=\"widget-markup\">Generated DOM Structure</h2>","templates":"<p><strong>controls</strong></p>\n\n<p>Template for the controls. This should be a <code>tr</code> tag containing\nthe first row of the calendar.</p>\n\n<p>Default value:</p>\n\n<pre><tr>\n <td colspan=\"1\" class=\"{{cssPrefix}}-prev-container\"><button class=\"{{cssPrefix}}-prev\" title=\"Previous Month\">&lt;</button></td>\n <td colspan=\"5\">{{month}} {{year}}</td>\n <td colspan=\"1\" class=\"{{cssPrefix}}-next-container\"><button class=\"{{cssPrefix}}-next\" title=\"Next Month\">&gt;</button></td>\n</tr></pre>\n\n<p><strong>dayRow</strong></p>\n\n<p>Template for the row of each day. This should be a tr tag containing the day names.</p>\n\n<p>Default value:</p>\n\n<pre><tr>\n {{#row}}<td class=\"{{cssPrefix}}-dayname\">{{.}}</td>{{/row}}\n</tr></pre>\n\n<p><strong>row</strong></p>\n\n<p>Template for the row of days. This should be a <code>tr</code> tag containing\na <code>button</code> for each day.</p>\n\n<p>Default value:</p>\n\n<pre><tr>\n  {{#row}}<td class=\"{{cssClass}}\">\n    <button class=\"{{cssPrefix}}-day {{hidden}}\" value=\"{{date}}\">{{day}}</button>\n  </td>{{/row}}\n</tr></pre>\n\n<p><strong>table</strong></p>\n\n<p>Wrapper template for all other templates. This should be a table.</p>\n\n<p>Default value:</p>\n\n<pre><table class=\"{{cssPrefix}}-container\"><thead>{{{thead}}}</thead><tbody>{{{tbody}}}</tbody></table></pre>","config":"<p><strong>monthNames</strong></p>\n\n<p>Array of strings containing the names of the month.</p>\n\n<p>Default value:</p>\n\n<pre>[\"January\", \"February\", \"March\", \"April\", \"May\", \"June\",\n \"July\", \"August\", \"September\", \"October\", \"November\", \"December\"]</pre>\n\n<p><strong>dayNames</strong></p>\n\n<p>Array of strings containing the day names.</p>\n\n<p>Default values:</p>\n\n<pre>[\"Mon\", \"Tue\", \"Wed\", \"Thu\", \"Fri\", \"Sat\", \"Sun\"]</pre>\n\n<p><strong>minDate</strong></p>\n\n<p>Earliest user-selectable date (<code>Date</code> object). Default: <code>null</code> (no restriction).</p>\n\n<p><strong>maxDate</strong></p>\n\n<p>Latest user-selectable date (<code>Date</code> object). Default: <code>null</code> (no restriction).</p>\n\n<p><strong>selectableWeekDays</strong></p>\n\n<p>Array of user-selectable week days (Sunday is 0). Default: <code>[0, 1, 2, 3, 4, 5, 6]</code> (no restrictions).</p>\n\n<p><strong>selectionMode</strong></p>\n\n<p>The Selection mode the calendar will use. Possible values are &#8216;single&#8217; and &#8216;range&#8217; . Default: <code>single</code></p>\n\n<p><strong>hideDaysOtherMonth</strong></p>\n\n<p>Hide all days of the previous/next month. If the entire last row of the calendar are days of\nthe next month the whole row is not rendered. Default: <code>false</code> <br /> <br />\n<strong>Important: </strong>If you like to have a <em>mixed</em> mode like displaying the days\nof the previous month and hiding the days of the next month you should work with the\n<code>rendered</code> event to manipulate the <span class=\"caps\">DOM</span> nodes after the rendering. Take a look at\nthe samples to get a idea of it.</p>\n\n<p><strong>disableDaysOtherMonth</strong></p>\n\n<p>Disable all days of the previous/next month. The days are visible, but are not responding to\nuser input. Default: <code>false</code></p>","superClass":"qx.ui.website.Widget","group":"Widget"},"Table":{"static":[],"member":[{"attributes":{"isStatic":false,"group":"Widget","name":"table","sourceMethod":"table","line":166,"sourceClass":"qx.ui.website.Table","prefixedMethodName":".table"},"type":"method","children":[{"attributes":{},"type":"params","children":[{"attributes":{"name":"model"},"type":"param","children":[{"attributes":{"text":"<p>The model of the widgets in the collection</p>"},"type":"desc"},{"attributes":{},"type":"types","children":[{"attributes":{"type":"Array"},"type":"entry"}]}]}]},{"attributes":{"text":"<p>Factory method which converts the current collection into a collection of\ntable widgets.</p>"},"type":"desc"},{"attributes":{},"type":"return","children":[{"attributes":{"text":"<p>A new table collection.</p>"},"type":"desc"},{"attributes":{},"type":"types","children":[{"attributes":{"type":"qx.ui.website.Table"},"type":"entry"}]}]},{"attributes":{"targetMethod":"","targetClass":"qxWeb","sourceMethod":"table","sourceClass":"qx.ui.website.Table"},"type":"attach"}]},{"attributes":{"line":604,"name":"appendContent","prefixedMethodName":"table.appendContent"},"type":"method","children":[{"attributes":{},"type":"params","children":[{"attributes":{"name":"tableData"},"type":"param","children":[{"attributes":{"text":"<p>Html string or collection containing the rows to be appended</p>"},"type":"desc"},{"attributes":{},"type":"types","children":[{"attributes":{"type":"String"},"type":"entry"},{"attributes":{"type":"qxWeb"},"type":"entry"}]}]}]},{"attributes":{"text":"<p>Appends new rows to the table</p>"},"type":"desc"},{"attributes":{},"type":"return","children":[{"attributes":{"text":"<code>this</code> reference for chaining."},"type":"desc"},{"attributes":{},"type":"types","children":[{"attributes":{"type":"qx.ui.website.Table"},"type":"entry"}]}]}]},{"attributes":{"line":532,"overriddenFrom":"qxWeb","name":"filter","prefixedMethodName":"table.filter"},"type":"method","children":[{"attributes":{},"type":"params","children":[{"attributes":{"name":"keyword"},"type":"param","children":[{"attributes":{"text":"<p>The keyword to use to filter</p>"},"type":"desc"},{"attributes":{},"type":"types","children":[{"attributes":{"type":"String"},"type":"entry"}]}]},{"attributes":{"optional":true,"name":"columnName"},"type":"param","children":[{"attributes":{"text":"<p>The column name</p>"},"type":"desc"},{"attributes":{},"type":"types","children":[{"attributes":{"type":"String"},"type":"entry"}]}]}]},{"attributes":{"text":"<p>Filters rows or columns according to the given parameters</p>"},"type":"desc"},{"attributes":{},"type":"return","children":[{"attributes":{"text":"<code>this</code> reference for chaining."},"type":"desc"},{"attributes":{},"type":"types","children":[{"attributes":{"type":"qx.ui.website.Table"},"type":"entry"}]}]}]},{"attributes":{"line":349,"name":"getCell","prefixedMethodName":"table.getCell"},"type":"method","children":[{"attributes":{},"type":"params","children":[{"attributes":{"name":"row"},"type":"param","children":[{"attributes":{"text":"<p>The row number</p>"},"type":"desc"},{"attributes":{},"type":"types","children":[{"attributes":{"type":"Integer"},"type":"entry"}]}]},{"attributes":{"name":"col"},"type":"param","children":[{"attributes":{"text":"<p>The column number</p>"},"type":"desc"},{"attributes":{},"type":"types","children":[{"attributes":{"type":"Integer"},"type":"entry"}]}]}]},{"attributes":{"text":"<p>Returns the cell at the given position for the first widget in the collection</p>"},"type":"desc"},{"attributes":{},"type":"return","children":[{"attributes":{"text":"<p>The cell found at the given position</p>"},"type":"desc"},{"attributes":{},"type":"types","children":[{"attributes":{"type":"qxWeb"},"type":"entry"}]}]}]},{"attributes":{"line":472,"name":"getColumnFilter","prefixedMethodName":"table.getColumnFilter"},"type":"method","children":[{"attributes":{},"type":"params","children":[{"attributes":{"name":"columnName"},"type":"param","children":[{"attributes":{"text":"<p>The name of the column</p>"},"type":"desc"},{"attributes":{},"type":"types","children":[{"attributes":{"type":"String"},"type":"entry"}]}]}]},{"attributes":{"text":"<p>Returns the filter function set on a specific column</p>"},"type":"desc"},{"attributes":{},"type":"return","children":[{"attributes":{"text":"<p>The filter function</p>"},"type":"desc"},{"attributes":{},"type":"types","children":[{"attributes":{"type":"Function"},"type":"entry"}]}]}]},{"attributes":{"line":337,"name":"getColumnType","prefixedMethodName":"table.getColumnType"},"type":"method","children":[{"attributes":{},"type":"params","children":[{"attributes":{"name":"columnName"},"type":"param","children":[{"attributes":{"text":"<p>The column name</p>"},"type":"desc"},{"attributes":{},"type":"types","children":[{"attributes":{"type":"String"},"type":"entry"}]}]}]},{"attributes":{"text":"<p>Returns the type of the specified column</p>"},"type":"desc"},{"attributes":{},"type":"return","children":[{"attributes":{"text":"<p>The type of the specified column</p>"},"type":"desc"},{"attributes":{},"type":"types","children":[{"attributes":{"type":"String"},"type":"entry"}]}]}]},{"attributes":{"line":395,"name":"getCompareFunction","prefixedMethodName":"table.getCompareFunction"},"type":"method","children":[{"attributes":{},"type":"params","children":[{"attributes":{"name":"type"},"type":"param","children":[{"attributes":{"text":"<p>The type to get the comparison function for</p>"},"type":"desc"},{"attributes":{},"type":"types","children":[{"attributes":{"type":"String"},"type":"entry"}]}]}]},{"attributes":{"text":"<p>Returns the comparison function for the given type</p>"},"type":"desc"},{"attributes":{},"type":"return","children":[{"attributes":{"text":"<p>The comparison function</p>"},"type":"desc"},{"attributes":{},"type":"types","children":[{"attributes":{"type":"Function"},"type":"entry"}]}]}]},{"attributes":{"line":500,"name":"getRowFilter","prefixedMethodName":"table.getRowFilter"},"type":"method","children":[{"attributes":{"text":"<p>Returns the filter function set on a specific column</p>"},"type":"desc"},{"attributes":{},"type":"return","children":[{"attributes":{"text":"<p>The filter function</p>"},"type":"desc"},{"attributes":{},"type":"types","children":[{"attributes":{"type":"Function"},"type":"entry"}]}]}]},{"attributes":{"line":358,"name":"getRows","prefixedMethodName":"table.getRows"},"type":"method","children":[{"attributes":{"text":"<p>Returns a collection containing the rows of the first table in the collection.</p>"},"type":"desc"},{"attributes":{},"type":"return","children":[{"attributes":{"text":"<p>The collection containing the table rows</p>"},"type":"desc"},{"attributes":{},"type":"types","children":[{"attributes":{"type":"qxWeb"},"type":"entry"}]}]}]},{"attributes":{"line":684,"name":"getSortingData","prefixedMethodName":"table.getSortingData"},"type":"method","children":[{"attributes":{"text":"<p>Get the current column sorting information for the first widget in the collection</p>"},"type":"desc"},{"attributes":{},"type":"return","children":[{"attributes":{"text":"<p>The map containing the current sorting information</p>"},"type":"desc"},{"attributes":{},"type":"types","children":[{"attributes":{"type":"Map"},"type":"entry"}]}]}]},{"attributes":{"line":566,"name":"resetFilter","prefixedMethodName":"table.resetFilter"},"type":"method","children":[{"attributes":{},"type":"params","children":[{"attributes":{"optional":true,"name":"columnName"},"type":"param","children":[{"attributes":{"text":"<p>The column name</p>"},"type":"desc"},{"attributes":{},"type":"types","children":[{"attributes":{"type":"String"},"type":"entry"}]}]}]},{"attributes":{"text":"<p>Resets the filter applied on a specific column</p>"},"type":"desc"},{"attributes":{},"type":"return","children":[{"attributes":{"text":"<code>this</code> reference for chaining."},"type":"desc"},{"attributes":{},"type":"types","children":[{"attributes":{"type":"qx.ui.website.Table"},"type":"entry"}]}]}]},{"attributes":{"line":454,"name":"setColumnFilter","prefixedMethodName":"table.setColumnFilter"},"type":"method","children":[{"attributes":{},"type":"params","children":[{"attributes":{"name":"columnName"},"type":"param","children":[{"attributes":{"text":"<p>The name of the column</p>"},"type":"desc"},{"attributes":{},"type":"types","children":[{"attributes":{"type":"String"},"type":"entry"}]}]},{"attributes":{"name":"func"},"type":"param","children":[{"attributes":{"text":"<p>The filter</p>"},"type":"desc"},{"attributes":{},"type":"types","children":[{"attributes":{"type":"Function"},"type":"entry"}]}]}]},{"attributes":{"text":"<p>Set the filter function to use to filter a specific column</p>"},"type":"desc"},{"attributes":{},"type":"return","children":[{"attributes":{"text":"<code>this</code> reference for chaining."},"type":"desc"},{"attributes":{},"type":"types","children":[{"attributes":{"type":"qx.ui.website.Table"},"type":"entry"}]}]}]},{"attributes":{"line":322,"name":"setColumnType","prefixedMethodName":"table.setColumnType"},"type":"method","children":[{"attributes":{},"type":"params","children":[{"attributes":{"name":"columnName"},"type":"param","children":[{"attributes":{"text":"<p>The column name</p>"},"type":"desc"},{"attributes":{},"type":"types","children":[{"attributes":{"type":"String"},"type":"entry"}]}]},{"attributes":{"name":"type"},"type":"param","children":[{"attributes":{"text":"<p>The type of the column</p>"},"type":"desc"},{"attributes":{},"type":"types","children":[{"attributes":{"type":"String"},"type":"entry"}]}]}]},{"attributes":{"text":"<p>Set the column types for the table widgets in the collection</p>"},"type":"desc"},{"attributes":{},"type":"return","children":[{"attributes":{"text":"<code>this</code> reference for chaining."},"type":"desc"},{"attributes":{},"type":"types","children":[{"attributes":{"type":"qx.ui.website.Table"},"type":"entry"}]}]}]},{"attributes":{"line":369,"name":"setCompareFunction","prefixedMethodName":"table.setCompareFunction"},"type":"method","children":[{"attributes":{},"type":"params","children":[{"attributes":{"name":"type"},"type":"param","children":[{"attributes":{"text":"<p>The type to define the function for</p>"},"type":"desc"},{"attributes":{},"type":"types","children":[{"attributes":{"type":"String"},"type":"entry"}]}]},{"attributes":{"name":"compareFunc"},"type":"param","children":[{"attributes":{"text":"<p>The comparison function</p>"},"type":"desc"},{"attributes":{},"type":"types","children":[{"attributes":{"type":"Function"},"type":"entry"}]}]}]},{"attributes":{"text":"<p>Defines the comparison function to use to sort columns of the given type</p>"},"type":"desc"},{"attributes":{},"type":"return","children":[{"attributes":{"text":"<code>this</code> reference for chaining."},"type":"desc"},{"attributes":{},"type":"types","children":[{"attributes":{"type":"qx.ui.website.Table"},"type":"entry"}]}]}]},{"attributes":{"line":589,"name":"setContent","prefixedMethodName":"table.setContent"},"type":"method","children":[{"attributes":{},"type":"params","children":[{"attributes":{"name":"tableData"},"type":"param","children":[{"attributes":{"text":"<p>Html string or collection containing the rows to be added</p>"},"type":"desc"},{"attributes":{},"type":"types","children":[{"attributes":{"type":"String"},"type":"entry"},{"attributes":{"type":"qxWeb"},"type":"entry"}]}]}]},{"attributes":{"text":"<p>Removes the rows of in the table body</p>"},"type":"desc"},{"attributes":{},"type":"return","children":[{"attributes":{"text":"<code>this</code> reference for chaining."},"type":"desc"},{"attributes":{},"type":"types","children":[{"attributes":{"type":"qx.ui.website.Table"},"type":"entry"}]}]}]},{"attributes":{"line":429,"name":"setFilterFunction","prefixedMethodName":"table.setFilterFunction"},"type":"method","children":[{"attributes":{},"type":"params","children":[{"attributes":{"name":"func"},"type":"param","children":[{"attributes":{"text":"<p>The filter function</p>"},"type":"desc"},{"attributes":{},"type":"types","children":[{"attributes":{"type":"Function"},"type":"entry"}]}]}]},{"attributes":{"text":"<p>Set the function that will be used to process the column filtering</p>"},"type":"desc"},{"attributes":{},"type":"return","children":[{"attributes":{"text":"<code>this</code> reference for chaining."},"type":"desc"},{"attributes":{},"type":"types","children":[{"attributes":{"type":"qx.ui.website.Table"},"type":"entry"}]}]}]},{"attributes":{"line":302,"name":"setModel","prefixedMethodName":"table.setModel"},"type":"method","children":[{"attributes":{},"type":"params","children":[{"attributes":{"name":"model"},"type":"param","children":[{"attributes":{"text":"<p>The model to be set</p>"},"type":"desc"},{"attributes":{},"type":"types","children":[{"attributes":{"type":"Array"},"type":"entry"}]}]}]},{"attributes":{"text":"<p>Sets the given model to the widgets in the collection</p>"},"type":"desc"},{"attributes":{},"type":"return","children":[{"attributes":{"text":"<code>this</code> reference for chaining."},"type":"desc"},{"attributes":{},"type":"types","children":[{"attributes":{"type":"qx.ui.website.Table"},"type":"entry"}]}]}]},{"attributes":{"line":485,"name":"setRowFilter","prefixedMethodName":"table.setRowFilter"},"type":"method","children":[{"attributes":{},"type":"params","children":[{"attributes":{"name":"func"},"type":"param","children":[{"attributes":{"text":"<p>The filter</p>"},"type":"desc"},{"attributes":{},"type":"types","children":[{"attributes":{"type":"Function"},"type":"entry"}]}]}]},{"attributes":{"text":"<p>Set the filter function to use to filter the table rows</p>"},"type":"desc"},{"attributes":{},"type":"return","children":[{"attributes":{"text":"<code>this</code> reference for chaining."},"type":"desc"},{"attributes":{},"type":"types","children":[{"attributes":{"type":"qx.ui.website.Table"},"type":"entry"}]}]}]},{"attributes":{"line":1260,"name":"setSortingClass","prefixedMethodName":"table.setSortingClass"},"type":"method","children":[{"attributes":{},"type":"params","children":[{"attributes":{"name":"columnName"},"type":"param","children":[{"attributes":{"text":"<p>The name of the sorted column</p>"},"type":"desc"},{"attributes":{},"type":"types","children":[{"attributes":{"type":"String"},"type":"entry"}]}]},{"attributes":{"name":"dir"},"type":"param","children":[{"attributes":{"text":"<p>The sorting direction</p>"},"type":"desc"},{"attributes":{},"type":"types","children":[{"attributes":{"type":"String"},"type":"entry"}]}]}]},{"attributes":{"text":"<p>Adds a class to the head and footer of the current sorted column</p>"},"type":"desc"}]},{"attributes":{"line":406,"name":"setSortingFunction","prefixedMethodName":"table.setSortingFunction"},"type":"method","children":[{"attributes":{},"type":"params","children":[{"attributes":{"name":"func"},"type":"param","children":[{"attributes":{"text":"<p>The sorting function</p>"},"type":"desc"},{"attributes":{},"type":"types","children":[{"attributes":{"type":"Function"},"type":"entry"}]}]}]},{"attributes":{"text":"<p>Set the function that control the sorting process</p>"},"type":"desc"},{"attributes":{},"type":"return","children":[{"attributes":{"text":"<code>this</code> reference for chaining."},"type":"desc"},{"attributes":{},"type":"types","children":[{"attributes":{"type":"qx.ui.website.Table"},"type":"entry"}]}]}]},{"attributes":{"line":514,"overriddenFrom":"qx.type.BaseArray","name":"sort","prefixedMethodName":"table.sort"},"type":"method","children":[{"attributes":{},"type":"params","children":[{"attributes":{"name":"columnName"},"type":"param","children":[{"attributes":{"text":"<p>The name of the column to sort</p>"},"type":"desc"},{"attributes":{},"type":"types","children":[{"attributes":{"type":"String"},"type":"entry"}]}]},{"attributes":{"name":"dir"},"type":"param","children":[{"attributes":{"text":"<p>The sorting direction (asc or desc)</p>"},"type":"desc"},{"attributes":{},"type":"types","children":[{"attributes":{"type":"String"},"type":"entry"}]}]}]},{"attributes":{"text":"<p>Sort the column with the given name according to the specified direction</p>"},"type":"desc"},{"attributes":{},"type":"return","children":[{"attributes":{"text":"<code>this</code> reference for chaining."},"type":"desc"},{"attributes":{},"type":"types","children":[{"attributes":{"type":"qx.ui.website.Table"},"type":"entry"}]}]}]},{"attributes":{"line":382,"name":"unsetCompareFunction","prefixedMethodName":"table.unsetCompareFunction"},"type":"method","children":[{"attributes":{},"type":"params","children":[{"attributes":{"name":"type"},"type":"param","children":[{"attributes":{"text":"<p>The type to unset the function for</p>"},"type":"desc"},{"attributes":{},"type":"types","children":[{"attributes":{"type":"String"},"type":"entry"}]}]}]},{"attributes":{"text":"<p>Unset the compare function for the given type</p>"},"type":"desc"},{"attributes":{},"type":"return","children":[{"attributes":{"text":"<code>this</code> reference for chaining."},"type":"desc"},{"attributes":{},"type":"types","children":[{"attributes":{"type":"qx.ui.website.Table"},"type":"entry"}]}]}]},{"attributes":{"line":440,"name":"unsetFilterFunction","prefixedMethodName":"table.unsetFilterFunction"},"type":"method","children":[{"attributes":{"text":"<p>Unset the filter function</p>"},"type":"desc"},{"attributes":{},"type":"return","children":[{"attributes":{"text":"<code>this</code> reference for chaining."},"type":"desc"},{"attributes":{},"type":"types","children":[{"attributes":{"type":"qx.ui.website.Table"},"type":"entry"}]}]}]},{"attributes":{"line":418,"name":"unsetSortingFunction","prefixedMethodName":"table.unsetSortingFunction"},"type":"method","children":[{"attributes":{"text":"<p>Unset the function that control the sorting process</p>"},"type":"desc"},{"attributes":{},"type":"return","children":[{"attributes":{"text":"<code>this</code> reference for chaining."},"type":"desc"},{"attributes":{},"type":"types","children":[{"attributes":{"type":"qx.ui.website.Table"},"type":"entry"}]}]}]}],"fileName":"qx.ui.website.Table","events":[{"name":"cellClick","type":"Object","desc":"<p>Fires each time a cell of the widget is clicked</p>"},{"name":"cellHover","type":"Object","desc":"<p>Fires each time a cell of the widget is hovered</p>"},{"name":"cellOut","type":"Object","desc":"<p>Fires each time the mouse leave a cell of the table widget</p>"},{"name":"cellRender","type":"Object","desc":"<p>Fires each time the value of a cell is rendered into the cell</p>"},{"name":"filter","type":"Object","desc":"<p>Fires after the table rows have been filtered</p>"},{"name":"modelApplied","type":"Array","desc":"<p>Fires after the model has been applied to the widget</p>"},{"name":"modelChange","type":"Array","desc":"<p>Fires at each model change</p>"},{"name":"selectionChange","type":"qxWeb","desc":"<p>Fires at each selection change</p>"},{"name":"sort","type":"Object","desc":"<p>Fires after the table rows have been sorted</p>"}],"desc":"<p>This is a widget that enhances an <span class=\"caps\">HTML</span> table with some basic features like\nSorting and Filtering.</p>\n\n<p><span class=\"caps\">EXPERIMENTAL</span> &#8211; <span class=\"caps\">NOT</span> <span class=\"caps\">READY</span> <span class=\"caps\">FOR</span> <span class=\"caps\">PRODUCTION</span></p>\n\n<h2>CSS Classes</h2>\n<table>\n  <thead>\n    <tr>\n      <td>Class Name</td>\n      <td>Applied to</td>\n      <td>Description</td>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <td><code>qx-table</code></td>\n      <td>Table element</td>\n      <td>Identifies the Table widget</td>\n    </tr>\n    <tr>\n      <td><code>qx-table-cell</code></td>\n      <td>Table cell (<code>td</code>)</td>\n      <td>Identifies and styles a cell of the widget</td>\n    </tr>\n    <tr>\n      <td><code>qx-table-header</code></td>\n      <td>Table header (<code>th</code>)</td>\n      <td>Identifies and styles a header of the table widget</td>\n    </tr>\n    <tr>\n      <td><code>qx-table-row-selection</code></td>\n      <td>Table cell (<code>td</code>)</td>\n      <td>Identifies and styles the cells containing the inputs for the row selection</td>\n    </tr>\n    <tr>\n      <td><code>qx-table-selection-input</code></td>\n      <td><code>input</code></td>\n      <td>Identifies and styles input element to select a table row</td>\n    </tr>\n    <tr>\n      <td><code>qx-table-input-label</code></td>\n      <td>Label element (<code>label</code>)</td>\n      <td>Identifies and styles label contained in the selection cell. This label can be used to create custom inputs</td>\n    </tr>\n    <tr>\n      <td><code>qx-table-row-selected</code></td>\n      <td>Selected row (<code>tr</code>)</td>\n      <td>Identifies and styles the selected table rows</td>\n    </tr>\n    <tr>\n      <td><code>qx-table-sort-asc</code></td>\n      <td>Table header (<code>th</code>)</td>\n      <td>Identifies and styles the header of the current ascendant sorted column</td>\n    </tr>\n    <tr>\n      <td><code>qx-table-sort-desc</code></td>\n      <td>Table header (<code>th</code>)</td>\n      <td>Identifies and styles the header of the current descendant sorted column</td>\n    </tr>\n  </tbody>\n</table>","config":"<p><strong>caseSensitive</strong>\nDetermines if the string sorting/filtering should be case sensitive or not. Default value : <code>false</code>.</p>\n\n<p><strong>rowSelection</strong>\nDefines the row selection type. Possible values are : &#8216;none&#8217;, &#8216;single&#8217;, &#8216;multiple&#8217;. Default value : <code>none</code>.</p>","templates":"<p><strong>columnDefault</strong>\nThe Default cell template for all the table columns. Default value :</p>\n\n<pre>\n  <td class=\"qx-table-cell\">\n    <div class=\"qx-table-cell-wrapper\">\n      <label>{{& value }}</label>\n    </div>\n  <td>\"\n</pre>\n\n<p>To define a custom template for a specific name use <code>setTemplate(&#8216;colname&#8217;, template)</code> or use</p>\n\n<code>setTemplate('columnDefault', template)</code> to set one template for all your table columns.","superClass":"qx.ui.website.Widget","group":"Widget"},"Carousel":{"static":[],"member":[{"attributes":{"line":49,"sourceMethod":"carousel","isStatic":false,"sourceClass":"qx.ui.website.Carousel","name":"carousel","prefixedMethodName":".carousel"},"type":"method","children":[{"attributes":{"text":"<p>Factory method which converts the current collection into a collection of\nCarousel widgets.</p>"},"type":"desc"},{"attributes":{},"type":"return","children":[{"attributes":{"text":"<p>A new carousel collection.</p>"},"type":"desc"},{"attributes":{},"type":"types","children":[{"attributes":{"type":"qx.ui.website.Carousel"},"type":"entry"}]}]},{"attributes":{"targetMethod":"","targetClass":"qxWeb","sourceMethod":"carousel","sourceClass":"qx.ui.website.Carousel"},"type":"attach"}]},{"attributes":{"line":220,"name":"addPage","prefixedMethodName":"carousel.addPage"},"type":"method","children":[{"attributes":{},"type":"params","children":[{"attributes":{"name":"child"},"type":"param","children":[{"attributes":{"text":"<p>The added child.</p>"},"type":"desc"},{"attributes":{},"type":"types","children":[{"attributes":{"type":"qxWeb"},"type":"entry"}]}]}]},{"attributes":{"text":"<p>Adds a page to the Carousel. Updates the pagination,\nscroll position, active property and the sizing.</p>"},"type":"desc"}]},{"attributes":{"line":156,"name":"getActive","prefixedMethodName":"carousel.getActive"},"type":"method","children":[{"attributes":{"text":"<p>Returns the currently active (i.e. visible) page</p>"},"type":"desc"},{"attributes":{},"type":"return","children":[{"attributes":{"text":"<p>The active page</p>"},"type":"desc"},{"attributes":{},"type":"types","children":[{"attributes":{"type":"qxWeb"},"type":"entry"}]}]}]},{"attributes":{"line":166,"name":"nextPage","prefixedMethodName":"carousel.nextPage"},"type":"method","children":[{"attributes":{"text":"<p>Scrolls the carousel to the next page.</p>"},"type":"desc"},{"attributes":{},"type":"return","children":[{"attributes":{"text":"<p>Self instance for chaining</p>"},"type":"desc"},{"attributes":{},"type":"types","children":[{"attributes":{"type":"qx.ui.website.Carousel"},"type":"entry"}]}]}]},{"attributes":{"line":193,"name":"previousPage","prefixedMethodName":"carousel.previousPage"},"type":"method","children":[{"attributes":{"text":"<p>Scrolls the carousel to the previous page.</p>"},"type":"desc"},{"attributes":{},"type":"return","children":[{"attributes":{"text":"<p>Self instance for chaining</p>"},"type":"desc"},{"attributes":{},"type":"types","children":[{"attributes":{"type":"qx.ui.website.Carousel"},"type":"entry"}]}]}]},{"attributes":{"line":259,"name":"removePage","prefixedMethodName":"carousel.removePage"},"type":"method","children":[{"attributes":{},"type":"params","children":[{"attributes":{"name":"child"},"type":"param","children":[{"attributes":{"text":"<p>The removed child.</p>"},"type":"desc"},{"attributes":{},"type":"types","children":[{"attributes":{"type":"qxWeb"},"type":"entry"}]}]}]},{"attributes":{"text":"<p>Removes a page from the Carousel. Updates the pagination,\nscroll position, active property and the sizing.</p>"},"type":"desc"}]},{"attributes":{"line":143,"name":"setActive","prefixedMethodName":"carousel.setActive"},"type":"method","children":[{"attributes":{},"type":"params","children":[{"attributes":{"name":"page"},"type":"param","children":[{"attributes":{"text":"<p>The page to be activated</p>"},"type":"desc"},{"attributes":{},"type":"types","children":[{"attributes":{"type":"qxWeb"},"type":"entry"}]}]}]},{"attributes":{"text":"<p>Sets one of the Carousel&#8217;s pages as active, meaning it will be\nvisible.</p>"},"type":"desc"}]}],"fileName":"qx.ui.website.Carousel","events":[],"desc":"<p>A carousel is a widget which can switch between several sub pages {@link qx.ui.website.Widget}.\nA page switch is triggered by a swipe to left, for next page, or a swipe to right for\nprevious page. Pages can also be switched by dragging.</p>\n\n<p>A carousel shows by default a pagination indicator at the bottom of the carousel.</p>","superClass":"qx.ui.website.Widget","group":"Extras"},"Slider":{"static":[],"member":[{"attributes":{"isStatic":false,"group":"Widget","name":"slider","sourceMethod":"slider","line":130,"sourceClass":"qx.ui.website.Slider","prefixedMethodName":".slider"},"type":"method","children":[{"attributes":{},"type":"params","children":[{"attributes":{"optional":true,"name":"value"},"type":"param","children":[{"attributes":{"text":"<p>The initial value of each slider widget</p>"},"type":"desc"},{"attributes":{},"type":"types","children":[{"attributes":{"type":"Number"},"type":"entry"}]}]},{"attributes":{"optional":true,"name":"step"},"type":"param","children":[{"attributes":{"text":"<p>The step config value to configure the step width or the steps as array of numbers.</p>"},"type":"desc"},{"attributes":{},"type":"types","children":[{"attributes":{"type":"Number"},"type":"entry"},{"attributes":{"type":"Array"},"type":"entry"}]}]}]},{"attributes":{"text":"<p>Factory method which converts the current collection into a collection of\nslider widgets.</p>"},"type":"desc"},{"attributes":{},"type":"return","children":[{"attributes":{"text":"<p>A new Slider collection.</p>"},"type":"desc"},{"attributes":{},"type":"types","children":[{"attributes":{"type":"qx.ui.website.Slider"},"type":"entry"}]}]},{"attributes":{"targetMethod":"","targetClass":"qxWeb","sourceMethod":"slider","sourceClass":"qx.ui.website.Slider"},"type":"attach"}]},{"attributes":{"line":210,"name":"getValue","prefixedMethodName":"slider.getValue"},"type":"method","children":[{"attributes":{"text":"<p>Returns the current value of the slider</p>"},"type":"desc"},{"attributes":{},"type":"return","children":[{"attributes":{"text":"<p>slider value</p>"},"type":"desc"},{"attributes":{},"type":"types","children":[{"attributes":{"type":"Integer"},"type":"entry"}]}]}]},{"attributes":{"line":221,"name":"setValue","prefixedMethodName":"slider.setValue"},"type":"method","children":[{"attributes":{},"type":"params","children":[{"attributes":{"name":"value"},"type":"param","children":[{"attributes":{"text":"<p>new value of the slider</p>"},"type":"desc"},{"attributes":{},"type":"types","children":[{"attributes":{"type":"Integer"},"type":"entry"}]}]}]},{"attributes":{"text":"<p>Sets the current value of the slider.</p>"},"type":"desc"},{"attributes":{},"type":"return","children":[{"attributes":{"text":"<p>The collection for chaining</p>"},"type":"desc"},{"attributes":{},"type":"types","children":[{"attributes":{"type":"qx.ui.website.Slider"},"type":"entry"}]}]}]}],"fileName":"qx.ui.website.Slider","events":[{"name":"changePosition","type":"Number","desc":"<p>Fired with each pointer move event</p>"},{"name":"changeValue","type":"Number","desc":"<p>Fired at each value change</p>"}],"desc":"<p>The Slider control is used to select a numerical value from a given range.\nIt supports custom minimum/maximum values, step sizes and offsets (which limit\nthe knob&#8217;s range).</p>\n\n<h2>Markup</h2>\nThe Slider contains a single button element (the knob), which will be\ncreated if it's not already present.\n\n<h2>CSS Classes</h2>\n<table>\n  <thead>\n    <tr>\n      <td>Class Name</td>\n      <td>Applied to</td>\n      <td>Description</td>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <td><code>qx-slider</code></td>\n      <td>Container element</td>\n      <td>Identifies the Slider widget</td>\n    </tr>\n    <tr>\n      <td><code>qx-slider-knob</code></td>\n      <td>Slider knob (button)</td>\n      <td>Identifies and styles the Slider's draggable knob</td>\n    </tr>\n  </tbody>\n</table>\n\n<h2 class=\"widget-markup\">Generated DOM Structure</h2>","config":"<p><strong>step</strong></p>\n\n<p>The steps can be either a number or an array of predefined steps. In the\ncase of a number, it defines the amount of each step. In the case of an\narray, the values of the array will be used as step values.</p>\n\n<p>Default value:</p>\n\n<pre>1</pre>\n\n<p><strong>minimum</strong></p>\n\n<p>The minimum value of the slider. This will only be used if no explicit\nsteps are given.</p>\n\n<p>Default value:</p>\n\n<pre>0 </pre>\n\n<p><strong>maximum</strong></p>\n\n<p>The maximum value of the slider. This will only be used if no explicit\nsteps are given.</p>\n\n<p>Default value:</p>\n\n<pre>100</pre>\n\n<p><strong>offset</strong></p>\n\n<p>The amount of pixel the slider should be position away from its left and\nright border.</p>\n\n<p>Default value:</p>\n\n<pre>0 </pre>","templates":"<p><strong>knobContent</strong></p>\n\n<p>The content of the knob element.</p>\n\n<p>Default value:</p>\n\n<pre>{{value}}</pre>","superClass":"qx.ui.website.Widget","group":"Widget"},"DatePicker":{"static":[],"member":[{"attributes":{"isStatic":false,"group":"Widget","name":"datepicker","sourceMethod":"datepicker","line":139,"sourceClass":"qx.ui.website.DatePicker","prefixedMethodName":".datepicker"},"type":"method","children":[{"attributes":{},"type":"params","children":[{"attributes":{"defaultValue":"null","optional":true,"name":"date"},"type":"param","children":[{"attributes":{"text":"<p>The initial Date of the calendar.</p>"},"type":"desc"},{"attributes":{},"type":"types","children":[{"attributes":{"type":"Date"},"type":"entry"}]}]}]},{"attributes":{"text":"<p>Factory method which converts the current collection into a collection of\nDate Picker widgets. Therefore, an initialization process needs to be done which\ncan be configured with some parameter.</p>"},"type":"desc"},{"attributes":{},"type":"return","children":[{"attributes":{"text":"<p>A new date picker collection.</p>"},"type":"desc"},{"attributes":{},"type":"types","children":[{"attributes":{"type":"qx.ui.website.DatePicker"},"type":"entry"}]}]},{"attributes":{"targetMethod":"","targetClass":"qxWeb","sourceMethod":"datepicker","sourceClass":"qx.ui.website.DatePicker"},"type":"attach"}]},{"attributes":{"line":161,"name":"getCalendar","prefixedMethodName":"datepicker.getCalendar"},"type":"method","children":[{"attributes":{"text":"<p>Get the associated calendar widget</p>"},"type":"desc"},{"attributes":{},"type":"return","children":[{"attributes":{"text":"<p>calendar widget instance</p>"},"type":"desc"},{"attributes":{},"type":"types","children":[{"attributes":{"type":"qx.ui.website.Calendar"},"type":"entry"}]}]}]},{"attributes":{"line":175,"overriddenFrom":"qx.ui.website.Widget","name":"init","prefixedMethodName":"datepicker.init"},"type":"method","children":[{"attributes":{},"type":"params","children":[{"attributes":{"name":"date"},"type":"param","children":[{"attributes":{"text":"<p>A JavaScript Date object to set the current date</p>"},"type":"desc"},{"attributes":{},"type":"types","children":[{"attributes":{"type":"Date"},"type":"entry"}]}]}]},{"attributes":{"text":"<p>Initializes the date picker widget</p>"},"type":"desc"},{"attributes":{},"type":"return","children":[{"attributes":{"text":"<code>true</code> if the widget has been initialized"},"type":"desc"},{"attributes":{},"type":"types","children":[{"attributes":{"type":"Boolean"},"type":"entry"}]}]}]}],"fileName":"qx.ui.website.DatePicker","events":[],"desc":"<p>This is a date picker widget used to combine an input element with a calendar widget\nto select a date. The calendar itself is opened as popup to save visual space.</p>\n\n<h2>Markup</h2>\nEach Date Picker widget is connected to an existing input element.\n\n<h2>CSS Classes</h2>\n<table>\n  <thead>\n    <tr>\n      <td>Class Name</td>\n      <td>Applied to</td>\n      <td>Description</td>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <td><code>qx-datepicker</code></td>\n      <td>Input element</td>\n      <td>Identifies the date picker widget</td>\n    </tr>\n    <tr>\n      <td><code>qx-datepicker-icon</code></td>\n      <td>Icon element</td>\n      <td>Identifies the (if configured) image element to open the date picker</td>\n    </tr>\n  </tbody>\n</table>","config":"<p><strong>format</strong></p>\n\n<p>Function which is provided with a JavaScript Date object instance. You can provide\nan own format function to manipulate the value which is set to the associated input element.</p>\n\n<p>Default value:</p>\n\n<pre>function(date) {\n   return date.toLocaleDateString();\n }</pre>\n\n<p><strong>readonly</strong></p>\n\n<p>Boolean value to control if the connected input element is read-only.</p>\n\n<p>Default value:</p>\n\n<pre>true</pre>\n\n<p><strong>icon</strong></p>\n\n<p>Path to an icon which will be placed next to the input element as additional opener. If configured\na necessary <code>img</code> element is created and equipped with the <code>qx-datepicker-icon</code>\n<span class=\"caps\">CSS</span> class to style it.</p>\n\n<p>Default value:</p>\n\n<pre>null</pre>\n\n<p><strong>mode</strong></p>\n\n<p>Which control should trigger showing the date picker.\nPossible values are <code>input</code>, <code>icon</code>, <code>both</code>.</p>\n\n<p>Default value:</p>\n\n<pre>input</pre>\n\n<p><strong>position</strong></p>\n\n<p>Position of the calendar popup from the point of view of the <code><span class=\"caps\">INPUT</span></code> element.\nPossible values are</p>\n\n<ul>\n<li><code>top-left</code></li>\n<li><code>top-center</code></li>\n<li><code>top-right</code></li>\n<li><code>bottom-left</code></li>\n<li><code>bottom-center</code></li>\n<li><code>bottom-right</code></li>\n<li><code>left-top</code></li>\n<li><code>left-middle</code></li>\n<li><code>left-bottom</code></li>\n<li><code>right-top</code></li>\n<li><code>right-middle</code></li>\n<li><code>right-bottom</code></li>\n</ul>\n\n<p>Default value:</p>\n\n<pre>bottom-left</pre>","superClass":"qx.ui.website.Widget","group":"Widget"},"Tabs":{"static":[],"member":[{"attributes":{"isStatic":false,"group":"Widget","name":"tabs","sourceMethod":"tabs","line":128,"sourceClass":"qx.ui.website.Tabs","prefixedMethodName":".tabs"},"type":"method","children":[{"attributes":{},"type":"params","children":[{"attributes":{"optional":true,"name":"align"},"type":"param","children":[{"attributes":{"text":"<p>Tab button alignment. Default: <code>left</code></p>"},"type":"desc"},{"attributes":{},"type":"types","children":[{"attributes":{"type":"String"},"type":"entry"}]}]},{"attributes":{"optional":true,"name":"preselected"},"type":"param","children":[{"attributes":{"text":"<p>The (zero-based) index of the tab that should initially be selected. Default: <code>0</code></p>"},"type":"desc"},{"attributes":{},"type":"types","children":[{"attributes":{"type":"Integer"},"type":"entry"}]}]},{"attributes":{"optional":true,"name":"orientation"},"type":"param","children":[{"attributes":{"text":"<code>horizontal</code> (default) or <code>vertical</code>"},"type":"desc"},{"attributes":{},"type":"types","children":[{"attributes":{"type":"String"},"type":"entry"}]}]}]},{"attributes":{"text":"<p>Factory method which converts the current collection into a collection of\ntabs widgets.</p>"},"type":"desc"},{"attributes":{"targetMethod":"","targetClass":"qxWeb","sourceMethod":"tabs","sourceClass":"qx.ui.website.Tabs"},"type":"attach"},{"attributes":{},"type":"return","children":[{"attributes":{"text":""},"type":"desc"},{"attributes":{},"type":"types","children":[{"attributes":{"type":"qx.ui.website.Tabs"},"type":"entry"}]}]}]},{"attributes":{"line":486,"name":"addButton","prefixedMethodName":"tabs.addButton"},"type":"method","children":[{"attributes":{},"type":"params","children":[{"attributes":{"name":"label"},"type":"param","children":[{"attributes":{"text":"<p>The button&#8217;s content. Can include markup.</p>"},"type":"desc"},{"attributes":{},"type":"types","children":[{"attributes":{"type":"String"},"type":"entry"}]}]},{"attributes":{"name":"pageSelector"},"type":"param","children":[{"attributes":{"text":"<p><span class=\"caps\">CSS</span> Selector that identifies the associated page</p>"},"type":"desc"},{"attributes":{},"type":"types","children":[{"attributes":{"type":"String"},"type":"entry"}]}]}]},{"attributes":{"text":"<p>Adds a new tab button</p>"},"type":"desc"},{"attributes":{},"type":"return","children":[{"attributes":{"text":"<p>The collection for chaining</p>"},"type":"desc"},{"attributes":{},"type":"types","children":[{"attributes":{"type":"qx.ui.website.Tabs"},"type":"entry"}]}]}]},{"attributes":{"line":529,"name":"select","prefixedMethodName":"tabs.select"},"type":"method","children":[{"attributes":{},"type":"params","children":[{"attributes":{"name":"index"},"type":"param","children":[{"attributes":{"text":"<p>index of the button to select</p>"},"type":"desc"},{"attributes":{},"type":"types","children":[{"attributes":{"type":"Integer"},"type":"entry"}]}]}]},{"attributes":{"text":"<p>Selects a tab button</p>"},"type":"desc"},{"attributes":{},"type":"return","children":[{"attributes":{"text":"<p>The collection for chaining</p>"},"type":"desc"},{"attributes":{},"type":"types","children":[{"attributes":{"type":"qx.ui.website.Tabs"},"type":"entry"}]}]}]}],"fileName":"qx.ui.website.Tabs","events":[{"name":"changeSelected","type":"Number","desc":"<p>Fired when the selected page has changed. The value is\nthe newly selected page&#8217;s index</p>"}],"desc":"<p>A row of buttons used to switch between connected pages. The buttons can be\nright- or left-aligned, or they can be justified, i.e. they will be stretched\nto fill the available width.</p>\n\n<h2>Markup</h2>\nEach Tabs widget contains an unordered list element (<code>ul</code>), which\nwill be created if not already present.\nThe tabs are list items (<code>li</code>). Each tab can contain\na button with a <code>tabsPage</code> data attribute where the value is a\nCSS selector string identifying the corresponding page. Headers and pages\nwill not be created automatically. They can be predefined in the DOM before\nthe <code>q().tabs()</code> factory method is called, or added programmatically.\n\n<h2>CSS Classes</h2>\n<table>\n  <thead>\n    <tr>\n      <td>Class Name</td>\n      <td>Applied to</td>\n      <td>Description</td>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <td><code>qx-tabs</code></td>\n      <td>Container element</td>\n      <td>Identifies the Tabs widget</td>\n    </tr>\n    <tr>\n      <td><code>qx-tabs-horizontal</code></td>\n      <td>Container element</td>\n      <td>Styles the widget in horizontal orientation</td>\n    </tr>\n    <tr>\n      <td><code>qx-tabs-vertical</code></td>\n      <td>Container element</td>\n      <td>Styles the widget in vertical orientation</td>\n    </tr>\n    <tr>\n      <td><code>qx-tabs-container</code></td>\n      <td>Tab page container (<code>div</code>)</td>\n      <td>Styles the tab pages' container (horizontal orientation only)</td>\n    </tr>\n    <tr>\n      <td><code>qx-flex-justify-end</code></td>\n      <td>Tab container (<code>ul</code>)</td>\n      <td>Browsers with flexbox support only: Styles the tab buttons when they are right-aligned</td>\n    </tr>\n    <tr>\n      <td><code>qx-tabs-left</code></td>\n      <td>Container element</td>\n      <td>Internet Explorer < 10 only: Styles the tab buttons when they are left-aligned</td>\n    </tr>\n    <tr>\n      <td><code>qx-tabs-justify</code></td>\n      <td>Container element</td>\n      <td>Internet Explorer < 10 only: Styles the tab buttons when they are stretched to fill out the available width</td>\n    </tr>\n    <tr>\n      <td><code>qx-tabs-right</code></td>\n      <td>Container element</td>\n      <td>Internet Explorer < 10 only: Styles the tab buttons when they are right-aligned</td>\n    </tr>\n    <tr>\n      <td><code>qx-tabs-button</code></td>\n      <td>Tab button (<code>li</code>)</td>\n      <td>Identifies and styles the tabs</td>\n    </tr>\n    <tr>\n      <td><code>qx-tabs-button-active</code></td>\n      <td>Tab button (<code>li</code>)</td>\n      <td>Identifies and styles the currently selected tab. Applied in addition to <code>qx-tabs-button</code></td>\n    </tr>\n    <tr>\n      <td><code>qx-flex-1</code></td>\n      <td>Tab button (<code>li</code>)</td>\n      <td>Browsers with flexbox support only: Styles the tab buttons when they are stretched to fill out the available width</td>\n    </tr>\n    <tr>\n      <td><code>qx-tabs-page</code></td>\n      <td>Tab page (<code>div</code> in horizontal mode, <code>li</code>)</td>\n      <td>Styles the tab pages.</td>\n    </tr>\n  </tbody>\n</table>\n\n<h2 class=\"widget-markup\">Generated DOM Structure</h2>","templates":"<p><strong>button</strong></p>\n\n<p>Template used by {@link #addButton} to create a new button.</p>\n\n<p>Default value:</p>\n\n<pre><li><button>{{{content}}}</button></li></pre>","config":"<p><strong>preselected</strong>\nThe index of the page that should be opened after initial\nrendering, or <code>null</code> if no page should be opened.</p>\n\n<p>Default value:</p>\n\n<pre>0</pre>\n\n<p><strong>align</strong>\nConfiguration for the alignment of the tab buttons in horizontal\nmode. This possible values are <code>left</code>,\n<code>justify</code> and\n<code>right</code></p>\n\n<p>Default value:</p>\n\n<pre>left</pre>\n\n<p><strong>orientation</strong>\nControls the layout of the widget. &#8220;horizontal&#8221; renders it as a\ntab bar appropriate for wide screens. &#8220;vertical&#8221; renders it as a\nstack of collapsible panes (sometimes called an accordion) that\nis better suited for narrow screens.</p>\n\n<p><strong>mediaQuery</strong>\nA <span class=\"caps\">CSS</span> media query string that will be used with a\nmedia query listener to dynamically set the widget&#8217;s\norientation. The widget will be rendered in vertical mode unless\nthe query matches.</p>","superClass":"qx.ui.website.Widget","group":"Widget"},"Placement":{"static":[],"member":[{"attributes":{"line":191,"sourceMethod":"placeTo","isStatic":false,"sourceClass":"qx.module.Placement","name":"placeTo"},"type":"method","children":[{"attributes":{},"type":"params","children":[{"attributes":{"name":"target"},"type":"param","children":[{"attributes":{"text":"<p>Placement target</p>"},"type":"desc"},{"attributes":{},"type":"types","children":[{"attributes":{"type":"Element"},"type":"entry"}]}]},{"attributes":{"name":"position"},"type":"param","children":[{"attributes":{"text":"<p>Alignment of the object with the target, any of <code>&#8220;top-left&#8221;</code>, <code>&#8220;top-center&#8221;</code>, <code>&#8220;top-right&#8221;</code>, <code>&#8220;bottom-left&#8221;</code>, <code>&#8220;bottom-center&#8221;</code>, <code>&#8220;bottom-right&#8221;</code>, <code>&#8220;left-top&#8221;</code>, <code>&#8220;left-middle&#8221;</code>, <code>&#8220;left-bottom&#8221;</code>, <code>&#8220;right-top&#8221;</code>, <code>&#8220;right-middle&#8221;</code>, <code>&#8220;right-bottom&#8221;</code></p>"},"type":"desc"},{"attributes":{},"type":"types","children":[{"attributes":{"type":"String"},"type":"entry"}]}]},{"attributes":{"defaultValue":"null","optional":true,"name":"offsets"},"type":"param","children":[{"attributes":{"text":"<p>Map with the desired offsets between the two elements. Must contain the keys <code>left</code>, <code>top</code>, <code>right</code> and <code>bottom</code></p>"},"type":"desc"},{"attributes":{},"type":"types","children":[{"attributes":{"type":"Map"},"type":"entry"}]}]},{"attributes":{"defaultValue":"\"direct\"","optional":true,"name":"modeX"},"type":"param","children":[{"attributes":{"text":"<p>Horizontal placement mode. Valid values are: <ul> <li><code>direct</code>: place the element directly at the given location.</li> <li><code>keep-align</code>: if the element is partially outside of the visible area, it is moved to the best fitting &#8216;edge&#8217; and &#8216;alignment&#8217; of the target. It is guaranteed the the new position attaches the object to one of the target edges and that it is aligned with a target edge.</li> <li><code>best-fit</code>: If the element is partially outside of the visible area, it is moved into the view port, ignoring any offset and position values.</li> </ul></p>"},"type":"desc"},{"attributes":{},"type":"types","children":[{"attributes":{"type":"String"},"type":"entry"}]}]},{"attributes":{"defaultValue":"\"direct\"","optional":true,"name":"modeY"},"type":"param","children":[{"attributes":{"text":"<p>Vertical placement mode. Accepts the same values as the &#8216;modeX&#8217; argument.</p>"},"type":"desc"},{"attributes":{},"type":"types","children":[{"attributes":{"type":"String"},"type":"entry"}]}]}]},{"attributes":{"text":"<p>Moves the first element in the collection, aligning it with the given\ntarget.</p>\n\n<div>\n<strong>NOTE:</strong> The <code>placeTo</code> method also works for hidden\nelements. However, the visibility / display styles are only manipulated during\nthe placement operation. As a result a previously hidden element <strong>stays hidden</strong>\n</div>\n\n<div>\n<strong>NOTE:</strong> If the target is changing its position due e.g. a DOM manipulation the\nplaced element <strong>is not</strong> updated automatically. You have to call <code>placeTo</code>\nagain to place the element to the target. The element is <strong>always</strong> positioned by using\n<code>position:absolute</code> independently on the chosen <code>position</code> and <code>mode</code>.\n</div>"},"type":"desc"},{"attributes":{"targetMethod":"","targetClass":"qxWeb","sourceMethod":"placeTo","sourceClass":"qx.module.Placement"},"type":"attach"},{"attributes":{},"type":"return","children":[{"attributes":{"text":"<p>The collection for chaining</p>"},"type":"desc"},{"attributes":{},"type":"types","children":[{"attributes":{"type":"qxWeb"},"type":"entry"}]}]}]}],"fileName":"qx.module.Placement","group":"Extras","desc":"<p>The Placement module provides a convenient way to align two elements relative\nto each other using various pre-defined algorithms.</p>","events":[]},"Jsonp":{"desc":"<p>A special script loader handling <span class=\"caps\">JSONP</span> responses. Automatically\nprovides callbacks and populates responseJson property.</p>\n\n<p>Example:</p>\n\n<pre class=\"javascript\">\n var req = new qx.bom.request.Jsonp();\n\n // Some services have a fixed callback name\n // req.setCallbackName(\"callback\");\n\n req.onload = function() {\n   // Handle data received\n   req.responseJson;\n }\n\n req.open(\"GET\", url);\n req.send();\n</pre>","events":[],"fileName":"qx.bom.request.Jsonp","group":"IO","member":[{"attributes":{"line":187,"name":"callback","prefixedMethodName":"jsonp.callback"},"type":"method","children":[{"attributes":{},"type":"params","children":[{"attributes":{"name":"data"},"type":"param","children":[{"attributes":{"text":"<p><span class=\"caps\">JSON</span></p>"},"type":"desc"},{"attributes":{},"type":"types","children":[{"attributes":{"type":"Object"},"type":"entry"}]}]}]},{"attributes":{"text":"<p>Callback provided for <span class=\"caps\">JSONP</span> response to pass data.</p>\n\n<p>Called internally to populate responseJson property\nand indicate successful status.</p>\n\n<p>Note: If you write a custom callback you&#8217;ll need to call\nthis method in order to notify the request about the data\nloaded. Writing a custom callback should not be necessary\nin most cases.</p>"},"type":"desc"}]},{"attributes":{"line":119,"overriddenFrom":"qx.bom.request.Script","name":"open","prefixedMethodName":"jsonp.open"},"type":"method","children":[{"attributes":{},"type":"params","children":[{"attributes":{"name":"method"},"type":"param","children":[{"attributes":{"text":"<p>The <span class=\"caps\">HTTP</span> method to use. This parameter exists for compatibility reasons. The script transport does not support methods other than <span class=\"caps\">GET</span>.</p>"},"type":"desc"},{"attributes":{},"type":"types","children":[{"attributes":{"type":"String"},"type":"entry"}]}]},{"attributes":{"name":"url"},"type":"param","children":[{"attributes":{"text":"<p>The <span class=\"caps\">URL</span> to which to send the request.</p>"},"type":"desc"},{"attributes":{},"type":"types","children":[{"attributes":{"type":"String"},"type":"entry"}]}]}]},{"attributes":{"text":"<p>Initializes (prepares) request.</p>"},"type":"desc"}]},{"attributes":{"line":245,"name":"setCallbackName","prefixedMethodName":"jsonp.setCallbackName"},"type":"method","children":[{"attributes":{},"type":"params","children":[{"attributes":{"name":"name"},"type":"param","children":[{"attributes":{"text":"<p>Name of the callback function.</p>"},"type":"desc"},{"attributes":{},"type":"types","children":[{"attributes":{"type":"String"},"type":"entry"}]}]}]},{"attributes":{"text":"<p>Set callback name.</p>\n\n<p>Must be set to the name of the callback function that is called by the\nscript returned from the <span class=\"caps\">JSONP</span> service. By default, the callback name\nreferences this instance&#8217;s {@link #callback} method, allowing to connect\nmultiple <span class=\"caps\">JSONP</span> responses to different requests.</p>\n\n<p>If the <span class=\"caps\">JSONP</span> service allows to set custom callback names, it should not\nbe necessary to change the default. However, some services use a fixed\ncallback name. This is when setting the callbackName is useful. A\nfunction is created and made available globally under the given name.\nThe function receives the <span class=\"caps\">JSON</span> data and dispatches it to this instance&#8217;s\n{@link #callback} method. Please note that this function is only created\nif it does not exist before.</p>"},"type":"desc"},{"attributes":{},"type":"return","children":[{"attributes":{"text":"<p>Self reference for chaining.</p>"},"type":"desc"},{"attributes":{},"type":"types","children":[{"attributes":{"type":"qx.bom.request.Jsonp"},"type":"entry"}]}]}]},{"attributes":{"line":220,"name":"setCallbackParam","prefixedMethodName":"jsonp.setCallbackParam"},"type":"method","children":[{"attributes":{},"type":"params","children":[{"attributes":{"name":"param"},"type":"param","children":[{"attributes":{"text":"<p>Name of the callback parameter.</p>"},"type":"desc"},{"attributes":{},"type":"types","children":[{"attributes":{"type":"String"},"type":"entry"}]}]}]},{"attributes":{"text":"<p>Set callback parameter.</p>\n\n<p>Some <span class=\"caps\">JSONP</span> services expect the callback name to be passed labeled with a\nspecial <span class=\"caps\">URL</span> parameter key, e.g. &#8220;jsonp&#8221; in &#8221;?jsonp=myCallback&#8221;. The\ndefault is &#8220;callback&#8221;.</p>"},"type":"desc"},{"attributes":{},"type":"return","children":[{"attributes":{"text":"<p>Self reference for chaining.</p>"},"type":"desc"},{"attributes":{},"type":"types","children":[{"attributes":{"type":"qx.bom.request.Jsonp"},"type":"entry"}]}]}]}],"static":[],"deprecated":false,"superClass":"qx.bom.request.Script"},"Script":{"desc":"<p>Script loader with interface similar to\n<a href=\"http://www.w3.org/TR/XMLHttpRequest/\">XmlHttpRequest</a>.</p>\n\n<p>The script loader can be used to load scripts from arbitrary sources.\n<span class=\"desktop\">\nFor <span class=\"caps\">JSONP</span> requests, consider the {@link qx.bom.request.Jsonp} transport\nthat derives from the script loader.\n</span></p>\n\n<div class=\"desktop\">\nExample:\n\n<pre class=\"javascript\">\n var req = new qx.bom.request.Script();\n req.onload = function() {\n   // Script is loaded and parsed and\n   // globals set are available\n }\n\n req.open(\"GET\", url);\n req.send();\n</pre>\n\n</div>","events":[{"name":"abort","type":"qx.bom.request.Script","desc":"<p>Fired when the request is aborted.</p>"},{"name":"error","type":"qx.bom.request.Script","desc":"<p>Fired on error.</p>"},{"name":"load","type":"qx.bom.request.Script","desc":"<p>Fired on successful retrieval.</p>"},{"name":"loadend","type":"qx.bom.request.Script","desc":"<p>Fired at loadend.</p>"},{"name":"readystatechange","type":"qx.bom.request.Script","desc":"<p>Fired at ready state changes.</p>"},{"name":"timeout","type":"qx.bom.request.Script","desc":"<p>Fired on timeouts.</p>"}],"fileName":"qx.bom.request.Script","group":"IO","member":[{"attributes":{"line":261,"name":"abort","prefixedMethodName":"script.abort"},"type":"method","children":[{"attributes":{"text":"<p>Aborts request.</p>"},"type":"desc"},{"attributes":{},"type":"return","children":[{"attributes":{"text":"<p>Self for chaining.</p>"},"type":"desc"},{"attributes":{},"type":"types","children":[{"attributes":{"type":"qx.bom.request.Script"},"type":"entry"}]}]}]},{"attributes":{"line":403,"name":"dispose","prefixedMethodName":"script.dispose"},"type":"method","children":[{"attributes":{"text":"<p>Dispose object.</p>"},"type":"desc"}]},{"attributes":{"line":374,"name":"getAllResponseHeaders","prefixedMethodName":"script.getAllResponseHeaders"},"type":"method","children":[{"attributes":{"text":"<p>Get all response headers from response.</p>\n\n<p>Note: This method exists for compatibility reasons. The script\ntransport does not receive response headers.</p>"},"type":"desc"},{"attributes":{},"type":"return","children":[{"attributes":{"text":"<p>Warning message or <code>null</code> if the request is disposed</p>"},"type":"desc"},{"attributes":{},"type":"types","children":[{"attributes":{"type":"String"},"type":"entry"},{"attributes":{"type":"null"},"type":"entry"}]}]}]},{"attributes":{"line":354,"name":"getResponseHeader","prefixedMethodName":"script.getResponseHeader"},"type":"method","children":[{"attributes":{},"type":"params","children":[{"attributes":{"name":"key"},"type":"param","children":[{"attributes":{"text":"<p>Key of the header to get the value from.</p>"},"type":"desc"},{"attributes":{},"type":"types","children":[{"attributes":{"type":"String"},"type":"entry"}]}]}]},{"attributes":{"text":"<p>Get a single response header from response.</p>\n\n<p>Note: This method exists for compatibility reasons. The script\ntransport does not receive response headers.</p>"},"type":"desc"},{"attributes":{},"type":"return","children":[{"attributes":{"text":"<p>Warning message or <code>null</code> if the request is disposed</p>"},"type":"desc"},{"attributes":{},"type":"types","children":[{"attributes":{"type":"String"},"type":"entry"},{"attributes":{"type":"null"},"type":"entry"}]}]}]},{"attributes":{"line":427,"name":"isDisposed","prefixedMethodName":"script.isDisposed"},"type":"method","children":[{"attributes":{"text":"<p>Check if the request has already beed disposed.</p>"},"type":"desc"},{"attributes":{},"type":"return","children":[{"attributes":{"text":"<code>true</code>, if the request has been disposed."},"type":"desc"},{"attributes":{},"type":"types","children":[{"attributes":{"type":"Boolean"},"type":"entry"}]}]}]},{"attributes":{"line":158,"name":"on","prefixedMethodName":"script.on"},"type":"method","children":[{"attributes":{},"type":"params","children":[{"attributes":{"name":"name"},"type":"param","children":[{"attributes":{"text":"<p>The name of the event to listen to.</p>"},"type":"desc"},{"attributes":{},"type":"types","children":[{"attributes":{"type":"String"},"type":"entry"}]}]},{"attributes":{"name":"listener"},"type":"param","children":[{"attributes":{"text":"<p>The function to execute when the event is fired</p>"},"type":"desc"},{"attributes":{},"type":"types","children":[{"attributes":{"type":"Function"},"type":"entry"}]}]},{"attributes":{"optional":true,"name":"ctx"},"type":"param","children":[{"attributes":{"text":"<p>The context of the listener.</p>"},"type":"desc"},{"attributes":{},"type":"types","children":[{"attributes":{"type":"var"},"type":"entry"}]}]}]},{"attributes":{"text":"<p>Add an event listener for the given event name.</p>"},"type":"desc"},{"attributes":{},"type":"return","children":[{"attributes":{"text":"<p>Self for chaining.</p>"},"type":"desc"},{"attributes":{},"type":"types","children":[{"attributes":{"type":"qx.bom.request.Script"},"type":"entry"}]}]}]},{"attributes":{"line":333,"name":"onabort","prefixedMethodName":"script.onabort"},"type":"method","children":[{"attributes":{"text":"<p>Event handler for <span class=\"caps\">XHR</span> event &#8220;abort&#8221; that is fired when request\nis aborted.</p>\n\n<p>Replace with custom method to listen to the &#8220;abort&#8221; event.</p>"},"type":"desc"}]},{"attributes":{"line":325,"name":"onerror","prefixedMethodName":"script.onerror"},"type":"method","children":[{"attributes":{"text":"<p>Event handler for <span class=\"caps\">XHR</span> event &#8220;error&#8221; that is fired on a network error.</p>\n\n<p>Note: Some browsers do not support the &#8220;error&#8221; event.</p>\n\n<p>Replace with custom method to listen to the &#8220;error&#8221; event.</p>"},"type":"desc"}]},{"attributes":{"line":306,"name":"onload","prefixedMethodName":"script.onload"},"type":"method","children":[{"attributes":{"text":"<p>Event handler for <span class=\"caps\">XHR</span> event &#8220;load&#8221; that is fired on successful retrieval.</p>\n\n<p>Note: This handler is called even when an invalid script is returned.</p>\n\n<p>Warning: Internet Explorer < 9 receives a false &#8220;load&#8221; for invalid URLs.\nThis &#8220;load&#8221; is fired about 2 seconds after sending the request. To\ndistinguish from a real &#8220;load&#8221;, consider defining a custom check\nfunction using {@link #setDetermineSuccess} and query the status\nproperty. However, the script loaded needs to have a known impact on\nthe global namespace. If this does not work for you, you may be able\nto set a timeout lower than 2 seconds, depending on script size,\ncomplexity and execution time.</p>\n\n<p>Replace with custom method to listen to the &#8220;load&#8221; event.</p>"},"type":"desc"}]},{"attributes":{"line":316,"name":"onloadend","prefixedMethodName":"script.onloadend"},"type":"method","children":[{"attributes":{"text":"<p>Event handler for <span class=\"caps\">XHR</span> event &#8220;loadend&#8221; that is fired on retrieval.</p>\n\n<p>Note: This handler is called even when a network error (or similar)\noccurred.</p>\n\n<p>Replace with custom method to listen to the &#8220;loadend&#8221; event.</p>"},"type":"desc"}]},{"attributes":{"line":288,"name":"onreadystatechange","prefixedMethodName":"script.onreadystatechange"},"type":"method","children":[{"attributes":{"text":"<p>Event handler for an event that fires at every state change.</p>\n\n<p>Replace with custom method to get informed about the communication progress.</p>"},"type":"desc"}]},{"attributes":{"line":341,"name":"ontimeout","prefixedMethodName":"script.ontimeout"},"type":"method","children":[{"attributes":{"text":"<p>Event handler for <span class=\"caps\">XHR</span> event &#8220;timeout&#8221; that is fired when timeout\ninterval has passed.</p>\n\n<p>Replace with custom method to listen to the &#8220;timeout&#8221; event.</p>"},"type":"desc"}]},{"attributes":{"line":174,"name":"open","prefixedMethodName":"script.open"},"type":"method","children":[{"attributes":{},"type":"params","children":[{"attributes":{"name":"method"},"type":"param","children":[{"attributes":{"text":"<p>The <span class=\"caps\">HTTP</span> method to use. This parameter exists for compatibility reasons. The script transport does not support methods other than <span class=\"caps\">GET</span>.</p>"},"type":"desc"},{"attributes":{},"type":"types","children":[{"attributes":{"type":"String"},"type":"entry"}]}]},{"attributes":{"name":"url"},"type":"param","children":[{"attributes":{"text":"<p>The <span class=\"caps\">URL</span> to which to send the request.</p>"},"type":"desc"},{"attributes":{},"type":"types","children":[{"attributes":{"type":"String"},"type":"entry"}]}]}]},{"attributes":{"text":"<p>Initializes (prepares) request.</p>"},"type":"desc"}]},{"attributes":{"line":228,"name":"send","prefixedMethodName":"script.send"},"type":"method","children":[{"attributes":{"text":"<p>Sends request.</p>"},"type":"desc"},{"attributes":{},"type":"return","children":[{"attributes":{"text":"<p>Self for chaining.</p>"},"type":"desc"},{"attributes":{},"type":"types","children":[{"attributes":{"type":"qx.bom.request.Script"},"type":"entry"}]}]}]},{"attributes":{"line":396,"name":"setDetermineSuccess","prefixedMethodName":"script.setDetermineSuccess"},"type":"method","children":[{"attributes":{},"type":"params","children":[{"attributes":{"name":"check"},"type":"param","children":[{"attributes":{"text":"<p>Function executed once the script was loaded.</p>"},"type":"desc"},{"attributes":{},"type":"types","children":[{"attributes":{"type":"Function"},"type":"entry"}]}]}]},{"attributes":{"text":"<p>Determine if loaded script has expected impact on global namespace.</p>\n\n<p>The function is called once the script was loaded and must return a\nboolean indicating if the response is to be considered successful.</p>"},"type":"desc"}]},{"attributes":{"line":208,"name":"setRequestHeader","prefixedMethodName":"script.setRequestHeader"},"type":"method","children":[{"attributes":{},"type":"params","children":[{"attributes":{"name":"key"},"type":"param","children":[{"attributes":{"text":"<p>The name of the header whose value is to be set.</p>"},"type":"desc"},{"attributes":{},"type":"types","children":[{"attributes":{"type":"String"},"type":"entry"}]}]},{"attributes":{"name":"value"},"type":"param","children":[{"attributes":{"text":"<p>The value to set as the body of the header.</p>"},"type":"desc"},{"attributes":{},"type":"types","children":[{"attributes":{"type":"String"},"type":"entry"}]}]}]},{"attributes":{"text":"<p>Appends a query parameter to <span class=\"caps\">URL</span>.</p>\n\n<p>This method exists for compatibility reasons. The script transport\ndoes not support request headers. However, many services parse query\nparameters like request headers.</p>\n\n<p>Note: The request must be initialized before using this method.</p>"},"type":"desc"},{"attributes":{},"type":"return","children":[{"attributes":{"text":"<p>Self for chaining.</p>"},"type":"desc"},{"attributes":{},"type":"types","children":[{"attributes":{"type":"qx.bom.request.Script"},"type":"entry"}]}]}]}],"static":[],"deprecated":false},"Xhr":{"desc":"<p>A wrapper of the XMLHttpRequest host object (or equivalent). The interface is\nsimilar to <a href=\"http://www.w3.org/TR/XMLHttpRequest/\">XmlHttpRequest</a>.</p>\n\n<p>Hides browser inconsistencies and works around bugs found in popular\nimplementations.</p>\n\n<div class=\"desktop\">\nExample:\n\n<pre class=\"javascript\">\n var req = new qx.bom.request.Xhr();\n req.onload = function() {\n   // Handle data received\n   req.responseText;\n }\n\n req.open(\"GET\", url);\n req.send();\n</pre>\n\n<p>Example for binary data:</p>\n\n<pre class=\"javascript\">\n var req = new qx.bom.request.Xhr();\n req.onload = function() {\n   // Handle data received\n   var blob = req.response;\n   img.src = URL.createObjectURL(blob);\n }\n\n req.open(\"GET\", url);\n req.responseType = \"blob\";\n req.send();\n</pre>\n\n</div>","events":[{"name":"abort","type":"qx.bom.request.Xhr","desc":"<p>Fired when the request is aborted.</p>"},{"name":"error","type":"qx.bom.request.Xhr","desc":"<p>Fired on error.</p>"},{"name":"load","type":"qx.bom.request.Xhr","desc":"<p>Fired on successful retrieval.</p>"},{"name":"loadend","type":"qx.bom.request.Xhr","desc":"<p>Fired at loadend.</p>"},{"name":"progress","type":"qx.bom.request.Xhr","desc":"<p>Fired on progress.</p>"},{"name":"readystatechange","type":"qx.bom.request.Xhr","desc":"<p>Fired at ready state changes.</p>"},{"name":"timeout","type":"qx.bom.request.Xhr","desc":"<p>Fired on timeouts.</p>"}],"fileName":"qx.bom.request.Xhr","group":"IO","member":[{"attributes":{"line":496,"name":"abort","prefixedMethodName":"xhr.abort"},"type":"method","children":[{"attributes":{"text":"<p>Abort request &#8211; i.e. cancels any network activity.</p>\n\n<p>Note:\n On Windows 7 every browser strangely skips the loading phase\n when this method is called (because readyState never gets 3).</p>\n\n<p>So keep this in mind if you rely on the phases which are\n passed through. They will be &#8220;opened&#8221;, &#8220;sent&#8221;, &#8220;abort&#8221;\n instead of normally &#8220;opened&#8221;, &#8220;sent&#8221;, &#8220;loading&#8221;, &#8220;abort&#8221;.</p>"},"type":"desc"},{"attributes":{},"type":"return","children":[{"attributes":{"text":"<p>Self for chaining.</p>"},"type":"desc"},{"attributes":{},"type":"types","children":[{"attributes":{"type":"qx.bom.request.Xhr"},"type":"entry"}]}]}]},{"attributes":{"line":676,"name":"dispose","prefixedMethodName":"xhr.dispose"},"type":"method","children":[{"attributes":{"text":"<p>Dispose object and wrapped native <span class=\"caps\">XHR</span>.</p>"},"type":"desc"},{"attributes":{},"type":"return","children":[{"attributes":{"text":"<code>true</code> if the object was successfully disposed"},"type":"desc"},{"attributes":{},"type":"types","children":[{"attributes":{"type":"Boolean"},"type":"entry"}]}]}]},{"attributes":{"line":616,"name":"getAllResponseHeaders","prefixedMethodName":"xhr.getAllResponseHeaders"},"type":"method","children":[{"attributes":{"text":"<p>Get all response headers from response.</p>"},"type":"desc"},{"attributes":{},"type":"return","children":[{"attributes":{"text":"<p>All response headers.</p>"},"type":"desc"},{"attributes":{},"type":"types","children":[{"attributes":{"type":"String"},"type":"entry"}]}]}]},{"attributes":{"line":662,"name":"getRequest","prefixedMethodName":"xhr.getRequest"},"type":"method","children":[{"attributes":{"text":"<p>Get wrapped native XMLHttpRequest (or equivalent).</p>\n\n<p>Can be XMLHttpRequest or ActiveX.</p>"},"type":"desc"},{"attributes":{},"type":"return","children":[{"attributes":{"text":"<p>XMLHttpRequest or equivalent.</p>"},"type":"desc"},{"attributes":{},"type":"types","children":[{"attributes":{"type":"Object"},"type":"entry"}]}]}]},{"attributes":{"line":599,"name":"getResponseHeader","prefixedMethodName":"xhr.getResponseHeader"},"type":"method","children":[{"attributes":{},"type":"params","children":[{"attributes":{"name":"header"},"type":"param","children":[{"attributes":{"text":"<p>Key of the header to get the value from.</p>"},"type":"desc"},{"attributes":{},"type":"types","children":[{"attributes":{"type":"String"},"type":"entry"}]}]}]},{"attributes":{"text":"<p>Get a single response header from response.</p>"},"type":"desc"},{"attributes":{},"type":"return","children":[{"attributes":{"text":"<p>Response header.</p>"},"type":"desc"},{"attributes":{},"type":"types","children":[{"attributes":{"type":"String"},"type":"entry"}]}]}]},{"attributes":{"line":718,"name":"isDisposed","prefixedMethodName":"xhr.isDisposed"},"type":"method","children":[{"attributes":{"text":"<p>Check if the request has already beed disposed.</p>"},"type":"desc"},{"attributes":{},"type":"return","children":[{"attributes":{"text":"<code>true</code>, if the request has been disposed."},"type":"desc"},{"attributes":{},"type":"types","children":[{"attributes":{"type":"Boolean"},"type":"entry"}]}]}]},{"attributes":{"line":585,"name":"on","prefixedMethodName":"xhr.on"},"type":"method","children":[{"attributes":{},"type":"params","children":[{"attributes":{"name":"name"},"type":"param","children":[{"attributes":{"text":"<p>The name of the event to listen to.</p>"},"type":"desc"},{"attributes":{},"type":"types","children":[{"attributes":{"type":"String"},"type":"entry"}]}]},{"attributes":{"name":"listener"},"type":"param","children":[{"attributes":{"text":"<p>The function to execute when the event is fired</p>"},"type":"desc"},{"attributes":{},"type":"types","children":[{"attributes":{"type":"Function"},"type":"entry"}]}]},{"attributes":{"optional":true,"name":"ctx"},"type":"param","children":[{"attributes":{"text":"<p>The context of the listener.</p>"},"type":"desc"},{"attributes":{},"type":"types","children":[{"attributes":{"type":"var"},"type":"entry"}]}]}]},{"attributes":{"text":"<p>Add an event listener for the given event name.</p>"},"type":"desc"},{"attributes":{},"type":"return","children":[{"attributes":{"text":"<p>Self for chaining.</p>"},"type":"desc"},{"attributes":{},"type":"types","children":[{"attributes":{"type":"qx.bom.request.Xhr"},"type":"entry"}]}]}]},{"attributes":{"line":559,"name":"onabort","prefixedMethodName":"xhr.onabort"},"type":"method","children":[{"attributes":{"text":"<p>Event handler for <span class=\"caps\">XHR</span> event &#8220;abort&#8221; that is fired when request\nis aborted.</p>\n\n<p>Replace with custom method to listen to the &#8220;abort&#8221; event.</p>"},"type":"desc"}]},{"attributes":{"line":551,"name":"onerror","prefixedMethodName":"xhr.onerror"},"type":"method","children":[{"attributes":{"text":"<p>Event handler for <span class=\"caps\">XHR</span> event &#8220;error&#8221; that is fired on a network error.</p>\n\n<p>Replace with custom method to listen to the &#8220;error&#8221; event.</p>"},"type":"desc"}]},{"attributes":{"line":534,"name":"onload","prefixedMethodName":"xhr.onload"},"type":"method","children":[{"attributes":{"text":"<p>Event handler for <span class=\"caps\">XHR</span> event &#8220;load&#8221; that is fired on successful retrieval.</p>\n\n<p>Note: This handler is called even when the <span class=\"caps\">HTTP</span> status indicates an error.</p>\n\n<p>Replace with custom method to listen to the &#8220;load&#8221; event.</p>"},"type":"desc"}]},{"attributes":{"line":544,"name":"onloadend","prefixedMethodName":"xhr.onloadend"},"type":"method","children":[{"attributes":{"text":"<p>Event handler for <span class=\"caps\">XHR</span> event &#8220;loadend&#8221; that is fired on retrieval.</p>\n\n<p>Note: This handler is called even when a network error (or similar)\noccurred.</p>\n\n<p>Replace with custom method to listen to the &#8220;loadend&#8221; event.</p>"},"type":"desc"}]},{"attributes":{"line":574,"name":"onprogress","prefixedMethodName":"xhr.onprogress"},"type":"method","children":[{"attributes":{"text":"<p>Event handler for <span class=\"caps\">XHR</span> event &#8220;progress&#8221;.</p>\n\n<p>Replace with custom method to listen to the &#8220;progress&#8221; event.</p>"},"type":"desc"}]},{"attributes":{"line":525,"name":"onreadystatechange","prefixedMethodName":"xhr.onreadystatechange"},"type":"method","children":[{"attributes":{"text":"<p>Event handler for <span class=\"caps\">XHR</span> event that fires at every state change.</p>\n\n<p>Replace with custom method to get informed about the communication progress.</p>"},"type":"desc"}]},{"attributes":{"line":567,"name":"ontimeout","prefixedMethodName":"xhr.ontimeout"},"type":"method","children":[{"attributes":{"text":"<p>Event handler for <span class=\"caps\">XHR</span> event &#8220;timeout&#8221; that is fired when timeout\ninterval has passed.</p>\n\n<p>Replace with custom method to listen to the &#8220;timeout&#8221; event.</p>"},"type":"desc"}]},{"attributes":{"line":223,"name":"open","prefixedMethodName":"xhr.open"},"type":"method","children":[{"attributes":{},"type":"params","children":[{"attributes":{"defaultValue":"\"GET\"","optional":true,"name":"method"},"type":"param","children":[{"attributes":{"text":"<p>The <span class=\"caps\">HTTP</span> method to use.</p>"},"type":"desc"},{"attributes":{},"type":"types","children":[{"attributes":{"type":"String"},"type":"entry"}]}]},{"attributes":{"name":"url"},"type":"param","children":[{"attributes":{"text":"<p>The <span class=\"caps\">URL</span> to which to send the request.</p>"},"type":"desc"},{"attributes":{},"type":"types","children":[{"attributes":{"type":"String"},"type":"entry"}]}]},{"attributes":{"defaultValue":"true","optional":true,"name":"async"},"type":"param","children":[{"attributes":{"text":"<p>Whether or not to perform the operation asynchronously.</p>"},"type":"desc"},{"attributes":{},"type":"types","children":[{"attributes":{"type":"Boolean"},"type":"entry"}]}]},{"attributes":{"defaultValue":"null","optional":true,"name":"user"},"type":"param","children":[{"attributes":{"text":"<p>Optional user name to use for authentication purposes.</p>"},"type":"desc"},{"attributes":{},"type":"types","children":[{"attributes":{"type":"String"},"type":"entry"}]}]},{"attributes":{"defaultValue":"null","optional":true,"name":"password"},"type":"param","children":[{"attributes":{"text":"<p>Optional password to use for authentication purposes.</p>"},"type":"desc"},{"attributes":{},"type":"types","children":[{"attributes":{"type":"String"},"type":"entry"}]}]}]},{"attributes":{"text":"<p>Initializes (prepares) request.</p>"},"type":"desc"}]},{"attributes":{"line":643,"name":"overrideMimeType","prefixedMethodName":"xhr.overrideMimeType"},"type":"method","children":[{"attributes":{},"type":"params","children":[{"attributes":{"name":"mimeType"},"type":"param","children":[{"attributes":{"text":"<p>The mimeType for overriding.</p>"},"type":"desc"},{"attributes":{},"type":"types","children":[{"attributes":{"type":"String"},"type":"entry"}]}]}]},{"attributes":{"text":"<p>Overrides the <span class=\"caps\">MIME</span> type returned by the server\nand must be called before <code>send()</code>.</p>\n\n<p>Note:</p>\n\n<ul>\n<li>IE doesn&#8217;t support this method so in this case an Error is thrown.</li>\n<li>after calling this method <code>getResponseHeader(&#8220;Content-Type&#8221;)</code><br />\n  may return the original (Firefox 23, IE 10, Safari 6) or<br />\n  the overridden content type (Chrome 28+, Opera 15+).</li>\n</ul>"},"type":"desc"},{"attributes":{},"type":"return","children":[{"attributes":{"text":"<p>Self for chaining.</p>"},"type":"desc"},{"attributes":{},"type":"types","children":[{"attributes":{"type":"qx.bom.request.Xhr"},"type":"entry"}]}]}]},{"attributes":{"line":389,"name":"send","prefixedMethodName":"xhr.send"},"type":"method","children":[{"attributes":{},"type":"params","children":[{"attributes":{"defaultValue":"null","optional":true,"name":"data"},"type":"param","children":[{"attributes":{"text":"<p>Optional data to send.</p>"},"type":"desc"},{"attributes":{},"type":"types","children":[{"attributes":{"type":"String"},"type":"entry"},{"attributes":{"type":"Document"},"type":"entry"}]}]}]},{"attributes":{"text":"<p>Sends request.</p>"},"type":"desc"},{"attributes":{},"type":"return","children":[{"attributes":{"text":"<p>Self for chaining.</p>"},"type":"desc"},{"attributes":{},"type":"types","children":[{"attributes":{"type":"qx.bom.request.Xhr"},"type":"entry"}]}]}]},{"attributes":{"line":369,"name":"setRequestHeader","prefixedMethodName":"xhr.setRequestHeader"},"type":"method","children":[{"attributes":{},"type":"params","children":[{"attributes":{"name":"key"},"type":"param","children":[{"attributes":{"text":"<p>The name of the header whose value is to be set.</p>"},"type":"desc"},{"attributes":{},"type":"types","children":[{"attributes":{"type":"String"},"type":"entry"}]}]},{"attributes":{"name":"value"},"type":"param","children":[{"attributes":{"text":"<p>The value to set as the body of the header.</p>"},"type":"desc"},{"attributes":{},"type":"types","children":[{"attributes":{"type":"String"},"type":"entry"}]}]}]},{"attributes":{"text":"<p>Sets an <span class=\"caps\">HTTP</span> request header to be used by the request.</p>\n\n<p>Note: The request must be initialized before using this method.</p>"},"type":"desc"},{"attributes":{},"type":"return","children":[{"attributes":{"text":"<p>Self for chaining.</p>"},"type":"desc"},{"attributes":{},"type":"types","children":[{"attributes":{"type":"qx.bom.request.Xhr"},"type":"entry"}]}]}]}],"static":[],"deprecated":false,"superClass":"Object"},"Resource":{"desc":"<p>Client-side wrapper of a <span class=\"caps\">REST</span> resource.</p>\n\n<p>Each instance represents a resource in terms of <span class=\"caps\">REST</span>. A number of actions\n(usually <span class=\"caps\">HTTP</span> methods) unique to the resource can be defined and invoked.\nA resource with its actions is configured declaratively by passing a resource\ndescription to the constructor, or programmatically using {@link #map}.</p>\n\n<p>Each action is associated to a route. A route is a combination of method,\n<span class=\"caps\">URL</span> pattern and optional parameter constraints.</p>\n\n<p>An action is invoked by calling a method with the same name. When a <span class=\"caps\">URL</span>\npattern of a route contains positional parameters, those parameters must be\npassed when invoking the associated action. Also, constraints defined in the\nroute must be satisfied.</p>\n\n<p>When an action is invoked, a request is configured according to the associated\nroute, is passed the <span class=\"caps\">URL</span> parameters, request body data, and finally send.\nWhat kind of request is send can be configured by overwriting {@link #_getRequest}.</p>\n\n<p>No constraints on the action&#8217;s name or the scope of the URLs are imposed. However,\nif you want to follow RESTful design patterns it is recommended to name actions\nthe same as the <span class=\"caps\">HTTP</span> action.</p>\n\n<p>Strictly speaking, the <code>photos</code> instance represents two distinct resources\nand could therefore just as well mapped to two distinct resources (for instance,\nnamed photos and photosTagged). What style to choose depends on the kind of data\nreturned. For instance, it seems sensible to stick with one resource if the filter\nonly limits the result set (i.e. the individual results have the same properties).</p>\n\n<p>In order to respond to successful (or erroneous) invocations of actions,\neither listen to the generic &#8220;success&#8221; or &#8220;error&#8221; event and get the action\nfrom the event data, or listen to action specific events defined at runtime.\nAction specific events follow the pattern &#8221;&lt;action&gt;Success&#8221; and\n&#8221;&lt;action&gt;Error&#8221;, e.g. &#8220;indexSuccess&#8221;.</p>","events":[{"name":"actionError","type":"qx.bom.rest.Resource","desc":"<p>Fired when any request associated to action given in prefix fails.</p>\n\n<p>For example, &#8220;indexError&#8221; is fired when <code>index()</code> failed.</p>"},{"name":"actionSent","type":"qx.bom.rest.Resource","desc":"<p>Fired when any request associated to action is sent to the given endpoint.</p>\n\n<p>For example, &#8220;indexSent&#8221; is fired when <code>index()</code> was\ncalled.</p>"},{"name":"actionStarted","type":"qx.bom.rest.Resource","desc":"<p>Fired when any request associated to action is started to the given endpoint. This moment is\nright after the request was opened and send.</p>\n\n<p>For example, &#8220;indexStarted&#8221; is fired when <code>index()</code> was called.</p>"},{"name":"actionSuccess","type":"qx.bom.rest.Resource","desc":"<p>Fired when request associated to action given in prefix was successful.</p>\n\n<p>For example, &#8220;indexSuccess&#8221; is fired when <code>index()</code> was\nsuccessful.</p>"},{"name":"error","type":"qx.bom.rest.Resource","desc":"<p>Fired when any request fails.</p>\n\n<p>The action the failed request is associated to, as well as the\nrequest itself, can be retrieved from the event&#8217;s properties.\nAdditionally, an action specific event is fired that follows the pattern\n&#8221;Error&#8221;, e.g. &#8220;indexError&#8221;.</p>"},{"name":"sent","type":"qx.bom.rest.Resource","desc":"<p>Fired when a request is sent to the given endpoint.</p>"},{"name":"started","type":"qx.bom.rest.Resource","desc":"<p>Fired when a request is started to the given endpoint. This moment is right after the request\nwas opened and send.</p>"},{"name":"success","type":"qx.bom.rest.Resource","desc":"<p>Fired when any request was successful.</p>\n\n<p>The action the successful request is associated to, as well as the\nrequest itself, can be retrieved from the event&#8217;s properties.\nAdditionally, an action specific event is fired that follows the pattern\n&#8221;Success&#8221;, e.g. &#8220;indexSuccess&#8221;.</p>"}],"fileName":"qx.bom.rest.Resource","group":"IO","member":[{"attributes":{"line":623,"name":"abort","prefixedMethodName":"resource.abort"},"type":"method","children":[{"attributes":{},"type":"params","children":[{"attributes":{"name":"varargs"},"type":"param","children":[{"attributes":{"text":"<p>Action of which all invocations to abort (when string), or a single invocation of an action to abort (when number)</p>"},"type":"desc"},{"attributes":{},"type":"types","children":[{"attributes":{"type":"String"},"type":"entry"},{"attributes":{"type":"Number"},"type":"entry"}]}]}]},{"attributes":{"text":"<p>Abort action.</p>"},"type":"desc"}]},{"attributes":{"line":357,"name":"configureRequest","prefixedMethodName":"resource.configureRequest"},"type":"method","children":[{"attributes":{},"type":"params","children":[{"attributes":{"name":"callback"},"type":"param","children":[{"attributes":{"text":"<p>Function called before request is send. Receives request, action, params and data.</p>"},"type":"desc"},{"attributes":{},"type":"types","children":[{"attributes":{"type":"Function"},"type":"entry"}]}]}]},{"attributes":{"text":"<p>Configure request.</p>"},"type":"desc"}]},{"attributes":{"line":1005,"name":"destruct","prefixedMethodName":"resource.destruct"},"type":"method","children":[{"attributes":{"text":"<p>Destructs the Resource.</p>\n\n<p>All created requests, routes and pollTimers will be disposed.</p>"},"type":"desc"}]},{"attributes":{"line":940,"name":"dispose","prefixedMethodName":"resource.dispose"},"type":"method","children":[{"attributes":{"text":"<p>Dispose this object</p>"},"type":"desc"}]},{"attributes":{"line":457,"name":"invoke","prefixedMethodName":"resource.invoke"},"type":"method","children":[{"attributes":{},"type":"params","children":[{"attributes":{"name":"action"},"type":"param","children":[{"attributes":{"text":"<p>Action to invoke.</p>"},"type":"desc"},{"attributes":{},"type":"types","children":[{"attributes":{"type":"String"},"type":"entry"}]}]},{"attributes":{"name":"params"},"type":"param","children":[{"attributes":{"text":"<p>Map of parameters inserted into <span class=\"caps\">URL</span> when a matching positional parameter is found.</p>"},"type":"desc"},{"attributes":{},"type":"types","children":[{"attributes":{"type":"Map"},"type":"entry"}]}]},{"attributes":{"name":"data"},"type":"param","children":[{"attributes":{"text":"<p>Data to be send as part of the request. See {@link qx.bom.request.SimpleXhr#getRequestData}. See {@link qx.io.request.AbstractRequest#requestData}.</p>"},"type":"desc"},{"attributes":{},"type":"types","children":[{"attributes":{"type":"Map"},"type":"entry"},{"attributes":{"type":"String"},"type":"entry"}]}]}]},{"attributes":{"text":"<p>Invoke action with parameters.</p>\n\n<p>Internally called by actions dynamically created.</p>\n\n<p>May be overridden to customize action and parameter handling.</p>"},"type":"desc"},{"attributes":{},"type":"return","children":[{"attributes":{"text":"<p>Id of the action&#8217;s invocation.</p>"},"type":"desc"},{"attributes":{},"type":"types","children":[{"attributes":{"type":"Number"},"type":"entry"}]}]}]},{"attributes":{"line":931,"name":"isDisposed","prefixedMethodName":"resource.isDisposed"},"type":"method","children":[{"attributes":{"text":"<p>Returns true if the object is disposed.</p>"},"type":"desc"},{"attributes":{},"type":"return","children":[{"attributes":{"text":"<p>Whether the object has been disposed</p>"},"type":"desc"},{"attributes":{},"type":"types","children":[{"attributes":{"type":"Boolean"},"type":"entry"}]}]}]},{"attributes":{"line":772,"name":"longPoll","prefixedMethodName":"resource.longPoll"},"type":"method","children":[{"attributes":{},"type":"params","children":[{"attributes":{"name":"action"},"type":"param","children":[{"attributes":{"text":"<p>Action to poll.</p>"},"type":"desc"},{"attributes":{},"type":"types","children":[{"attributes":{"type":"String"},"type":"entry"}]}]}]},{"attributes":{"text":"<p>Long-poll action.</p>\n\n<p>Use Ajax long-polling to continuously fetch a resource as soon as the\nserver signals new data. The server determines when new data is available,\nwhile the client keeps open a request. Requires configuration on the\nserver side. Basically, the server must not close a connection until\nnew data is available. For a high level introduction to long-polling,\nrefer to <a href=\"http://en.wikipedia.org/wiki/Comet_(programming)#Ajax_with_long_polling\">\nAjax with long polling</a>.</p>\n\n<p>Uses {@link #refresh} internally. Make sure you understand the\nimplications of IE&#8217;s tendency to cache overly aggressive.</p>\n\n<p>Note no interval is given on the client side.</p>"},"type":"desc"},{"attributes":{},"type":"return","children":[{"attributes":{"text":"<p>Id of handler responsible for long-polling. To stop polling, remove handler using {@link qx.core.Object#removeListenerById}.</p>"},"type":"desc"},{"attributes":{},"type":"types","children":[{"attributes":{"type":"String"},"type":"entry"}]}]}]},{"attributes":{"line":408,"name":"map","prefixedMethodName":"resource.map"},"type":"method","children":[{"attributes":{},"type":"params","children":[{"attributes":{"name":"action"},"type":"param","children":[{"attributes":{"text":"<p>Action to associate to request.</p>"},"type":"desc"},{"attributes":{},"type":"types","children":[{"attributes":{"type":"String"},"type":"entry"}]}]},{"attributes":{"name":"method"},"type":"param","children":[{"attributes":{"text":"<p>Method to configure request with.</p>"},"type":"desc"},{"attributes":{},"type":"types","children":[{"attributes":{"type":"String"},"type":"entry"}]}]},{"attributes":{"name":"url"},"type":"param","children":[{"attributes":{"text":"<p><span class=\"caps\">URL</span> to configure request with. May contain positional parameters (<code>{param}</code>) that are replaced by values given when the action is invoked. Parameters are optional, unless a check is defined. A default value can be provided (<code>{param=default}</code>).</p>"},"type":"desc"},{"attributes":{},"type":"types","children":[{"attributes":{"type":"String"},"type":"entry"}]}]},{"attributes":{"optional":true,"name":"check"},"type":"param","children":[{"attributes":{"text":"<p>Map defining parameter constraints, where the key is the <span class=\"caps\">URL</span> parameter and the value a regular expression (to match string) or <code>qx.bom.rest.Resource.REQUIRED</code> (to verify existence).</p>"},"type":"desc"},{"attributes":{},"type":"types","children":[{"attributes":{"type":"Map"},"type":"entry"}]}]}]},{"attributes":{"text":"<p>Map action to combination of method and <span class=\"caps\">URL</span> pattern.</p>"},"type":"desc"}]},{"attributes":{"line":677,"name":"poll","prefixedMethodName":"resource.poll"},"type":"method","children":[{"attributes":{},"type":"params","children":[{"attributes":{"name":"action"},"type":"param","children":[{"attributes":{"text":"<p>Action to poll.</p>"},"type":"desc"},{"attributes":{},"type":"types","children":[{"attributes":{"type":"String"},"type":"entry"}]}]},{"attributes":{"name":"interval"},"type":"param","children":[{"attributes":{"text":"<p>Interval in ms.</p>"},"type":"desc"},{"attributes":{},"type":"types","children":[{"attributes":{"type":"Number"},"type":"entry"}]}]},{"attributes":{"optional":true,"name":"params"},"type":"param","children":[{"attributes":{"text":"<p>Map of parameters. See {@link #invoke}.</p>"},"type":"desc"},{"attributes":{},"type":"types","children":[{"attributes":{"type":"Map"},"type":"entry"}]}]},{"attributes":{"defaultValue":"false","optional":true,"name":"immediately"},"type":"param","children":[{"attributes":{"text":"<code>true</code>, if the poll should invoke a call immediately."},"type":"desc"},{"attributes":{},"type":"types","children":[{"attributes":{"type":"Boolean"},"type":"entry"}]}]}]},{"attributes":{"text":"<p>Periodically invoke action.</p>\n\n<p>Replays parameters given when action was invoked originally. When the\naction was not yet invoked and requires parameters, parameters must be\ngiven.</p>\n\n<p>Please note that IE tends to cache overly aggressive. One work-around is\nto disable caching on the client side by configuring the request with\n<code>setCache(false)</code>. If you control the server, a better\nwork-around is to include appropriate headers to explicitly control\ncaching. This way you still avoid requests that can be correctly answered\nfrom cache (e.g. when nothing has changed since the last poll). Please\nrefer to <a href=\"http://www.mnot.net/javascript/xmlhttprequest/cache.html\">\nXMLHttpRequest Caching Test</a> for available options.</p>"},"type":"desc"}]},{"attributes":{"line":649,"name":"refresh","prefixedMethodName":"resource.refresh"},"type":"method","children":[{"attributes":{},"type":"params","children":[{"attributes":{"name":"action"},"type":"param","children":[{"attributes":{"text":"<p>Action to refresh.</p>"},"type":"desc"},{"attributes":{},"type":"types","children":[{"attributes":{"type":"String"},"type":"entry"}]}]}]},{"attributes":{"text":"<p>Resend request associated to action.</p>\n\n<p>Replays parameters given when action was invoked originally.</p>"},"type":"desc"}]},{"attributes":{"line":742,"name":"restartPollByAction","prefixedMethodName":"resource.restartPollByAction"},"type":"method","children":[{"attributes":{},"type":"params","children":[{"attributes":{"name":"action"},"type":"param","children":[{"attributes":{"text":"<p>Action to poll.</p>"},"type":"desc"},{"attributes":{},"type":"types","children":[{"attributes":{"type":"String"},"type":"entry"}]}]}]},{"attributes":{"text":"<p>Restarts a poll process by the associated action.</p>"},"type":"desc"}]},{"attributes":{"line":528,"name":"setBaseUrl","prefixedMethodName":"resource.setBaseUrl"},"type":"method","children":[{"attributes":{},"type":"params","children":[{"attributes":{"name":"baseUrl"},"type":"param","children":[{"attributes":{"text":"<p>Base <span class=\"caps\">URL</span>.</p>"},"type":"desc"},{"attributes":{},"type":"types","children":[{"attributes":{"type":"String"},"type":"entry"}]}]}]},{"attributes":{"text":"<p>Set base <span class=\"caps\">URL</span>.</p>\n\n<p>The base <span class=\"caps\">URL</span> is prepended to the URLs given in the description.\nChanges affect all future invocations.</p>"},"type":"desc"}]},{"attributes":{"line":730,"name":"stopPollByAction","prefixedMethodName":"resource.stopPollByAction"},"type":"method","children":[{"attributes":{},"type":"params","children":[{"attributes":{"name":"action"},"type":"param","children":[{"attributes":{"text":"<p>Action to poll.</p>"},"type":"desc"},{"attributes":{},"type":"types","children":[{"attributes":{"type":"String"},"type":"entry"}]}]}]},{"attributes":{"text":"<p>Stops a poll process by the associated action.</p>"},"type":"desc"}]}],"static":[],"deprecated":false,"superClass":"qx.event.Emitter"},"MediaQuery":{"desc":"<p>This class is to test css media queries. It implements a polyfill for\nwindow.matchMedia if not supported natively.</p>","events":[{"name":"change","type":"Map","desc":"<p>Fires each time the media query state changes. The event data is a map\nwith two keys:</p>\n\n<p><b>query</b> The media query string</p>\n\n<p><b>matches</b> A boolean that indicates whether the document\nmatches the query</p>"}],"fileName":"qx.bom.MediaQuery","group":"Extras","member":[{"attributes":{"line":113,"name":"getQuery","prefixedMethodName":"mediaquery.getQuery"},"type":"method","children":[{"attributes":{"text":"<p>Returns the query string used to initialize the listener.</p>"},"type":"desc"},{"attributes":{},"type":"return","children":[{"attributes":{"text":"<p>The given query string.</p>"},"type":"desc"},{"attributes":{},"type":"types","children":[{"attributes":{"type":"String"},"type":"entry"}]}]}]},{"attributes":{"line":122,"name":"isMatching","prefixedMethodName":"mediaquery.isMatching"},"type":"method","children":[{"attributes":{"text":"<p>Access the matching state of the media query.</p>"},"type":"desc"},{"attributes":{},"type":"return","children":[{"attributes":{"text":"<code>true</code>, if the query matches."},"type":"desc"},{"attributes":{},"type":"types","children":[{"attributes":{"type":"Boolean"},"type":"entry"}]}]}]}],"static":[],"deprecated":false,"superClass":"qx.event.Emitter"},"Mouse":{"desc":"<p>Normalization for native mouse events. For cross-device applications that\nsupport both mouse and touchscreen interaction, consider using\n<a href=\"#Pointer\">Pointer</a> and/or Gesture events (e.g. <a href=\"Tap\"></a>).</p>","events":[],"fileName":"qx.module.event.Mouse","group":"Event_Normalization","member":[],"static":[{"attributes":{"line":75,"isStatic":true,"name":"getButton"},"type":"method","children":[{"attributes":{"text":"<p>Returns the identifier of the mouse button that change state when the\nevent was triggered</p>"},"type":"desc"},{"attributes":{},"type":"return","children":[{"attributes":{"text":"<p>One of <code>left</code>, <code>right</code> or <code>middle</code></p>"},"type":"desc"},{"attributes":{},"type":"types","children":[{"attributes":{"type":"String"},"type":"entry"}]}]}]},{"attributes":{"line":130,"isStatic":true,"name":"getDocumentLeft"},"type":"method","children":[{"attributes":{"text":"<p>Get the horizontal position at which the event occurred relative to the\nleft of the document. This property takes into account any scrolling of\nthe page.</p>"},"type":"desc"},{"attributes":{},"type":"return","children":[{"attributes":{"text":"<p>The horizontal mouse position in the document.</p>"},"type":"desc"},{"attributes":{},"type":"types","children":[{"attributes":{"type":"Number"},"type":"entry"}]}]}]},{"attributes":{"line":148,"isStatic":true,"name":"getDocumentTop"},"type":"method","children":[{"attributes":{"text":"<p>Get the vertical position at which the event occurred relative to the\ntop of the document. This property takes into account any scrolling of\nthe page.</p>"},"type":"desc"},{"attributes":{},"type":"return","children":[{"attributes":{"text":"<p>The vertical mouse position in the document.</p>"},"type":"desc"},{"attributes":{},"type":"types","children":[{"attributes":{"type":"Number"},"type":"entry"}]}]}]},{"attributes":{"line":168,"isStatic":true,"name":"getScreenLeft"},"type":"method","children":[{"attributes":{"text":"<p>Get the horizontal coordinate at which the event occurred relative to\nthe origin of the screen coordinate system.</p>\n\n<p>Note: This value is usually not very useful unless you want to\nposition a native popup window at this coordinate.</p>"},"type":"desc"},{"attributes":{},"type":"return","children":[{"attributes":{"text":"<p>The horizontal mouse position on the screen.</p>"},"type":"desc"},{"attributes":{},"type":"types","children":[{"attributes":{"type":"Number"},"type":"entry"}]}]}]},{"attributes":{"line":182,"isStatic":true,"name":"getScreenTop"},"type":"method","children":[{"attributes":{"text":"<p>Get the vertical coordinate at which the event occurred relative to\nthe origin of the screen coordinate system.</p>\n\n<p>Note: This value is usually not very useful unless you want to\nposition a native popup window at this coordinate.</p>"},"type":"desc"},{"attributes":{},"type":"return","children":[{"attributes":{"text":"<p>The vertical mouse position on the screen.</p>"},"type":"desc"},{"attributes":{},"type":"types","children":[{"attributes":{"type":"Number"},"type":"entry"}]}]}]},{"attributes":{"line":106,"isStatic":true,"name":"getViewportLeft"},"type":"method","children":[{"attributes":{"text":"<p>Get the horizontal coordinate at which the event occurred relative\nto the viewport.</p>"},"type":"desc"},{"attributes":{},"type":"return","children":[{"attributes":{"text":"<p>The horizontal mouse position</p>"},"type":"desc"},{"attributes":{},"type":"types","children":[{"attributes":{"type":"Number"},"type":"entry"}]}]}]},{"attributes":{"line":118,"isStatic":true,"name":"getViewportTop"},"type":"method","children":[{"attributes":{"text":"<p>Get the vertical coordinate at which the event occurred relative\nto the viewport.</p>"},"type":"desc"},{"attributes":{},"type":"return","children":[{"attributes":{"text":"<p>The vertical mouse position</p>"},"type":"desc"},{"attributes":{},"type":"types","children":[{"attributes":{"type":"Number"},"type":"entry"}]}]}]}],"deprecated":false,"types":"[\"click\",\"dblclick\",\"mousedown\",\"mouseup\",\"mouseover\",\"mousemove\",\"mouseout\"]","prefix":"Event."},"Keyboard":{"desc":"<p>Normalization for native keyboard events.</p>\n\n<p><span class=\"caps\">NOTE</span>: Some browsers won&#8217;t fire the <code>keypress</code> event for all keys.\nIt&#8217;s generally better to listen for <code>keyup</code> or <code>keydown</code>\ninstead.</p>","events":[],"fileName":"qx.module.event.Keyboard","group":"Event_Normalization","member":[],"static":[{"attributes":{"line":99,"isStatic":true,"name":"getKeyIdentifier"},"type":"method","children":[{"attributes":{"text":"<p>Identifier of the pressed key. This property is modeled after the <em>KeyboardEvent.keyIdentifier</em> property\nof the W3C <span class=\"caps\">DOM</span> 3 event specification\n(<a href=\"http://www.w3.org/TR/2003/NOTE-DOM-Level-3-Events-20031107/events.html#Events-KeyboardEvent-keyIdentifier\">http://www.w3.org/TR/2003/NOTE-DOM-Level-3-Events-20031107/events.html#Events-KeyboardEvent-keyIdentifier</a>).</p>\n\n<p>Printable keys are represented by an unicode string, non-printable keys\nhave one of the following values:</p>\n\n<table>\n<tr><th>Backspace</th><td>The Backspace (Back) key.</td></tr>\n<tr><th>Tab</th><td>The Horizontal Tabulation (Tab) key.</td></tr>\n<tr><th>Space</th><td>The Space (Spacebar) key.</td></tr>\n<tr><th>Enter</th><td>The Enter key. Note: This key identifier is also used for the Return (Macintosh numpad) key.</td></tr>\n<tr><th>Shift</th><td>The Shift key.</td></tr>\n<tr><th>Control</th><td>The Control (Ctrl) key.</td></tr>\n<tr><th>Alt</th><td>The Alt (Menu) key.</td></tr>\n<tr><th>CapsLock</th><td>The CapsLock key</td></tr>\n<tr><th>Meta</th><td>The Meta key. (Apple Meta and Windows key)</td></tr>\n<tr><th>Escape</th><td>The Escape (Esc) key.</td></tr>\n<tr><th>Left</th><td>The Left Arrow key.</td></tr>\n<tr><th>Up</th><td>The Up Arrow key.</td></tr>\n<tr><th>Right</th><td>The Right Arrow key.</td></tr>\n<tr><th>Down</th><td>The Down Arrow key.</td></tr>\n<tr><th>PageUp</th><td>The Page Up key.</td></tr>\n<tr><th>PageDown</th><td>The Page Down (Next) key.</td></tr>\n<tr><th>End</th><td>The End key.</td></tr>\n<tr><th>Home</th><td>The Home key.</td></tr>\n<tr><th>Insert</th><td>The Insert (Ins) key. (Does not fire in Opera/Win)</td></tr>\n<tr><th>Delete</th><td>The Delete (Del) Key.</td></tr>\n<tr><th>F1</th><td>The F1 key.</td></tr>\n<tr><th>F2</th><td>The F2 key.</td></tr>\n<tr><th>F3</th><td>The F3 key.</td></tr>\n<tr><th>F4</th><td>The F4 key.</td></tr>\n<tr><th>F5</th><td>The F5 key.</td></tr>\n<tr><th>F6</th><td>The F6 key.</td></tr>\n<tr><th>F7</th><td>The F7 key.</td></tr>\n<tr><th>F8</th><td>The F8 key.</td></tr>\n<tr><th>F9</th><td>The F9 key.</td></tr>\n<tr><th>F10</th><td>The F10 key.</td></tr>\n<tr><th>F11</th><td>The F11 key.</td></tr>\n<tr><th>F12</th><td>The F12 key.</td></tr>\n<tr><th>NumLock</th><td>The Num Lock key.</td></tr>\n<tr><th>PrintScreen</th><td>The Print Screen (PrintScrn, SnapShot) key.</td></tr>\n<tr><th>Scroll</th><td>The scroll lock key</td></tr>\n<tr><th>Pause</th><td>The pause/break key</td></tr>\n<tr><th>Win</th><td>The Windows Logo key</td></tr>\n<tr><th>Apps</th><td>The Application key (Windows Context Menu)</td></tr>\n</table>"},"type":"desc"},{"attributes":{},"type":"return","children":[{"attributes":{"text":"<p>The key identifier</p>"},"type":"desc"},{"attributes":{},"type":"types","children":[{"attributes":{"type":"String"},"type":"entry"}]}]}]}],"deprecated":false,"types":"[\"keydown\",\"keypress\",\"keyup\"]","prefix":"Event."},"Native":{"desc":"<p>Common normalizations for native events</p>","events":[],"fileName":"qx.module.event.Native","group":"Event_Normalization","member":[],"static":[{"attributes":{"line":111,"isStatic":true,"name":"getCurrentTarget"},"type":"method","children":[{"attributes":{"text":"<p>Computes the current target from the native <span class=\"caps\">DOM</span> event. Emulates the current target\nfor all browsers without native support (like older IEs).</p>"},"type":"desc"},{"attributes":{},"type":"return","children":[{"attributes":{"text":"<p>The current target</p>"},"type":"desc"},{"attributes":{},"type":"types","children":[{"attributes":{"type":"Element"},"type":"entry"}]}]}]},{"attributes":{"line":101,"isStatic":true,"name":"getRelatedTarget"},"type":"method","children":[{"attributes":{"text":"<p>Computes the related target from the native <span class=\"caps\">DOM</span> event</p>"},"type":"desc"},{"attributes":{},"type":"return","children":[{"attributes":{"text":"<p>The related target</p>"},"type":"desc"},{"attributes":{},"type":"types","children":[{"attributes":{"type":"Element"},"type":"entry"}]}]}]},{"attributes":{"line":92,"isStatic":true,"name":"getTarget"},"type":"method","children":[{"attributes":{"text":"<p>Returns the target of the event.</p>"},"type":"desc"},{"attributes":{},"type":"return","children":[{"attributes":{"text":"<p>Any valid native event target</p>"},"type":"desc"},{"attributes":{},"type":"types","children":[{"attributes":{"type":"Object"},"type":"entry"}]}]}]},{"attributes":{"line":80,"isStatic":true,"name":"getType"},"type":"method","children":[{"attributes":{"text":"<p>Returns the event&#8217;s type</p>"},"type":"desc"},{"attributes":{},"type":"return","children":[{"attributes":{"text":"<p>event type</p>"},"type":"desc"},{"attributes":{},"type":"types","children":[{"attributes":{"type":"String"},"type":"entry"}]}]}]},{"attributes":{"line":54,"isStatic":true,"name":"preventDefault"},"type":"method","children":[{"attributes":{"text":"<p>Prevent the native default behavior of the event.</p>"},"type":"desc"}]},{"attributes":{"line":69,"isStatic":true,"name":"stopPropagation"},"type":"method","children":[{"attributes":{"text":"<p>Stops the event&#8217;s propagation to the element&#8217;s parent</p>"},"type":"desc"}]}],"deprecated":false,"types":"[\"*\"]","prefix":"Event."},"Orientation":{"desc":"<p>Normalization for orientationchange events</p>","events":[],"fileName":"qx.module.event.Orientation","group":"Event_Normalization","member":[],"static":[{"attributes":{"line":55,"isStatic":true,"name":"getOrientation"},"type":"method","children":[{"attributes":{"text":"<p>Returns the current orientation of the viewport in degrees.</p>\n\n<p>All possible values and their meaning:</p>\n\n<ul>\n<li><code>0</code>: &#8220;Portrait&#8221;</li>\n<li><code>-90</code>: &#8220;Landscape (right, screen turned clockwise)&#8221;</li>\n<li><code>90</code>: &#8220;Landscape (left, screen turned counterclockwise)&#8221;</li>\n<li><code>180</code>: &#8220;Portrait (upside-down portrait)&#8221;</li>\n</ul>"},"type":"desc"},{"attributes":{},"type":"return","children":[{"attributes":{"text":"<p>The current orientation in degrees</p>"},"type":"desc"},{"attributes":{},"type":"types","children":[{"attributes":{"type":"Number"},"type":"entry"}]}]}]},{"attributes":{"line":66,"isStatic":true,"name":"isLandscape"},"type":"method","children":[{"attributes":{"text":"<p>Whether the viewport orientation is currently in landscape mode.</p>"},"type":"desc"},{"attributes":{},"type":"return","children":[{"attributes":{"text":"<code>true</code> when the viewport orientation is currently in landscape mode."},"type":"desc"},{"attributes":{},"type":"types","children":[{"attributes":{"type":"Boolean"},"type":"entry"}]}]}]},{"attributes":{"line":77,"isStatic":true,"name":"isPortrait"},"type":"method","children":[{"attributes":{"text":"<p>Whether the viewport orientation is currently in portrait mode.</p>"},"type":"desc"},{"attributes":{},"type":"return","children":[{"attributes":{"text":"<code>true</code> when the viewport orientation is currently in portrait mode."},"type":"desc"},{"attributes":{},"type":"types","children":[{"attributes":{"type":"Boolean"},"type":"entry"}]}]}]}],"deprecated":false,"types":"[\"orientationchange\"]","prefix":"Event."},"Touch":{"desc":"<p>Normalization for touch events. For cross-device applications that\nsupport both mouse and touchscreen interaction, consider using\n<a href=\"#Pointer\">Pointer</a> and/or Gesture events (e.g. <a href=\"Tap\"></a>).</p>","events":[],"fileName":"qx.module.event.Touch","group":"Event_Normalization","member":[],"static":[],"deprecated":false,"types":"[\"tap\",\"longtap\",\"swipe\",\"dbltap\"]","prefix":"Event."},"Pointer":{"desc":"<p>Normalization for pointer events. Pointer events are hardware-agnostic and\nwill be fired regardless of which input type of input device is used (e.g. mouse or touchscreen).</p>","events":[],"fileName":"qx.module.event.Pointer","group":"Event_Normalization","member":[],"static":[{"attributes":{"line":88,"isStatic":true,"name":"getDocumentLeft"},"type":"method","children":[{"attributes":{"text":"<p>Get the horizontal position at which the event occurred relative to the\nleft of the document. This property takes into account any scrolling of\nthe page.</p>"},"type":"desc"},{"attributes":{},"type":"return","children":[{"attributes":{"text":"<p>The horizontal mouse position in the document.</p>"},"type":"desc"},{"attributes":{},"type":"types","children":[{"attributes":{"type":"Number"},"type":"entry"}]}]}]},{"attributes":{"line":101,"isStatic":true,"name":"getDocumentTop"},"type":"method","children":[{"attributes":{"text":"<p>Get the vertical position at which the event occurred relative to the\ntop of the document. This property takes into account any scrolling of\nthe page.</p>"},"type":"desc"},{"attributes":{},"type":"return","children":[{"attributes":{"text":"<p>The vertical mouse position in the document.</p>"},"type":"desc"},{"attributes":{},"type":"types","children":[{"attributes":{"type":"Number"},"type":"entry"}]}]}]},{"attributes":{"line":50,"isStatic":true,"name":"getPointerType"},"type":"method","children":[{"attributes":{"text":"<p>Returns the device type which the event triggered. This can be one\nof the following strings: <code>mouse</code>, <code>pen</code>\nor <code>touch</code>.</p>"},"type":"desc"},{"attributes":{},"type":"return","children":[{"attributes":{"text":"<p>The type of the pointer.</p>"},"type":"desc"},{"attributes":{},"type":"types","children":[{"attributes":{"type":"String"},"type":"entry"}]}]}]},{"attributes":{"line":116,"isStatic":true,"name":"getScreenLeft"},"type":"method","children":[{"attributes":{"text":"<p>Get the horizontal coordinate at which the event occurred relative to\nthe origin of the screen coordinate system.</p>\n\n<p>Note: This value is usually not very useful unless you want to\nposition a native popup window at this coordinate.</p>"},"type":"desc"},{"attributes":{},"type":"return","children":[{"attributes":{"text":"<p>The horizontal mouse position on the screen.</p>"},"type":"desc"},{"attributes":{},"type":"types","children":[{"attributes":{"type":"Number"},"type":"entry"}]}]}]},{"attributes":{"line":131,"isStatic":true,"name":"getScreenTop"},"type":"method","children":[{"attributes":{"text":"<p>Get the vertical coordinate at which the event occurred relative to\nthe origin of the screen coordinate system.</p>\n\n<p>Note: This value is usually not very useful unless you want to\nposition a native popup window at this coordinate.</p>"},"type":"desc"},{"attributes":{},"type":"return","children":[{"attributes":{"text":"<p>The vertical mouse position on the screen.</p>"},"type":"desc"},{"attributes":{},"type":"types","children":[{"attributes":{"type":"Number"},"type":"entry"}]}]}]},{"attributes":{"line":62,"isStatic":true,"name":"getViewportLeft"},"type":"method","children":[{"attributes":{"text":"<p>Get the horizontal coordinate at which the event occurred relative\nto the viewport.</p>"},"type":"desc"},{"attributes":{},"type":"return","children":[{"attributes":{"text":"<p>The horizontal mouse position</p>"},"type":"desc"},{"attributes":{},"type":"types","children":[{"attributes":{"type":"Number"},"type":"entry"}]}]}]},{"attributes":{"line":75,"isStatic":true,"name":"getViewportTop"},"type":"method","children":[{"attributes":{"text":"<p>Get the vertical coordinate at which the event occurred relative\nto the viewport.</p>"},"type":"desc"},{"attributes":{},"type":"return","children":[{"attributes":{"text":"<p>The vertical mouse position</p>"},"type":"desc"},{"attributes":{},"type":"types","children":[{"attributes":{"type":"Number"},"type":"entry"}]}]}]}],"deprecated":false,"types":"[\"pointerdown\",\"pointerup\",\"pointermove\",\"pointercancel\",\"pointerover\",\"pointerout\"]","prefix":"Event."},"Swipe":{"desc":"<p>Normalization for the swipe gesture. This gesture is based on <a href=\"#Pointer\">Pointer events</a>\nmeaning that it&#8217;s available on all devices, no matter which input device type is used (e.g. mouse or\ntouchscreen).</p>","events":[],"fileName":"qx.module.event.Swipe","group":"Event_Normalization","member":[],"static":[{"attributes":{"line":72,"isStatic":true,"name":"getAxis"},"type":"method","children":[{"attributes":{"text":"<p>Returns whether the performed swipe was on the x or y axis.</p>"},"type":"desc"},{"attributes":{},"type":"return","children":[{"attributes":{"text":"<p>&#8220;x&#8221;/&#8220;y&#8221; axis</p>"},"type":"desc"},{"attributes":{},"type":"types","children":[{"attributes":{"type":"String"},"type":"entry"}]}]}]},{"attributes":{"line":84,"isStatic":true,"name":"getDirection"},"type":"method","children":[{"attributes":{"text":"<p>Returns the direction of the performed swipe in reference to the axis.\ny = up / down\nx = left / right</p>"},"type":"desc"},{"attributes":{},"type":"return","children":[{"attributes":{"text":"<p>the direction</p>"},"type":"desc"},{"attributes":{},"type":"types","children":[{"attributes":{"type":"String"},"type":"entry"}]}]}]},{"attributes":{"line":104,"isStatic":true,"name":"getDistance"},"type":"method","children":[{"attributes":{"text":"<p>Returns the distance of the performed swipe.</p>"},"type":"desc"},{"attributes":{},"type":"return","children":[{"attributes":{"text":"<p>the distance</p>"},"type":"desc"},{"attributes":{},"type":"types","children":[{"attributes":{"type":"Integer"},"type":"entry"}]}]}]},{"attributes":{"line":62,"isStatic":true,"name":"getDuration"},"type":"method","children":[{"attributes":{"text":"<p>Returns the duration the performed swipe took.</p>"},"type":"desc"},{"attributes":{},"type":"return","children":[{"attributes":{"text":"<p>the duration</p>"},"type":"desc"},{"attributes":{},"type":"types","children":[{"attributes":{"type":"Integer"},"type":"entry"}]}]}]},{"attributes":{"line":52,"isStatic":true,"name":"getStartTime"},"type":"method","children":[{"attributes":{"text":"<p>Returns the start time of the performed swipe.</p>"},"type":"desc"},{"attributes":{},"type":"return","children":[{"attributes":{"text":"<p>the start time</p>"},"type":"desc"},{"attributes":{},"type":"types","children":[{"attributes":{"type":"Integer"},"type":"entry"}]}]}]},{"attributes":{"line":94,"isStatic":true,"name":"getVelocity"},"type":"method","children":[{"attributes":{"text":"<p>Returns the velocity of the performed swipe.</p>"},"type":"desc"},{"attributes":{},"type":"return","children":[{"attributes":{"text":"<p>the velocity</p>"},"type":"desc"},{"attributes":{},"type":"types","children":[{"attributes":{"type":"Number"},"type":"entry"}]}]}]}],"deprecated":false,"types":"[\"swipe\"]","prefix":"Event."},"Track":{"desc":"<p>Normalization for the track gesture. This gesture is based on <a href=\"#Pointer\">Pointer events</a>,\nmeaning that it&#8217;s available on all devices, no matter which input device type is used (e.g. mouse or\ntouchscreen).</p>","events":[],"fileName":"qx.module.event.Track","group":"Event_Normalization","member":[],"static":[{"attributes":{"line":47,"isStatic":true,"name":"getDelta"},"type":"method","children":[{"attributes":{"text":"<p>Returns a map with the calculated delta coordinates and axis,\nrelative to the position on <code>trackstart</code> event.</p>"},"type":"desc"},{"attributes":{},"type":"return","children":[{"attributes":{"text":"<p>a map with contains the delta as <code>x</code> and <code>y</code> and the movement axis as <code>axis</code>.</p>"},"type":"desc"},{"attributes":{},"type":"types","children":[{"attributes":{"type":"Map"},"type":"entry"}]}]}]}],"deprecated":false,"types":"[\"track\"]","prefix":"Event."},"Pinch":{"desc":"<p>Normalization for the pinch gesture.</p>","events":[],"fileName":"qx.module.event.Pinch","group":"Event_Normalization","member":[],"static":[{"attributes":{"line":43,"isStatic":true,"name":"getScale"},"type":"method","children":[{"attributes":{"text":"<p>Returns the calculated scale of this event.</p>"},"type":"desc"},{"attributes":{},"type":"return","children":[{"attributes":{"text":"<p>the scale value of this event.</p>"},"type":"desc"},{"attributes":{},"type":"types","children":[{"attributes":{"type":"Float"},"type":"entry"}]}]}]}],"deprecated":false,"types":"[\"pinch\"]","prefix":"Event."},"Rotate":{"desc":"<p>Normalization for the rotate gesture.</p>","events":[],"fileName":"qx.module.event.Rotate","group":"Event_Normalization","member":[],"static":[{"attributes":{"line":43,"isStatic":true,"name":"getAngle"},"type":"method","children":[{"attributes":{"text":"<p>Returns a number with the current calculated angle between the primary and secondary active pointers.</p>"},"type":"desc"},{"attributes":{},"type":"return","children":[{"attributes":{"text":"<p>the angle of the two active pointers.</p>"},"type":"desc"},{"attributes":{},"type":"types","children":[{"attributes":{"type":"Number"},"type":"entry"}]}]}]}],"deprecated":false,"types":"[\"rotate\"]","prefix":"Event."},"Tap":{"desc":"<p>Normalization for tap gesture events. These gestures are based on <a href=\"#Pointer\">Pointer events</a>,\nmeaning that they are available on all devices, no matter which input device type is used (e.g. mouse or\ntouchscreen).</p>","events":[],"fileName":"qx.module.event.Tap","group":"Event_Normalization","member":[],"static":[{"attributes":{"line":80,"isStatic":true,"name":"getDocumentLeft"},"type":"method","children":[{"attributes":{"text":"<p>Get the horizontal position at which the event occurred relative to the\nleft of the document. This property takes into account any scrolling of\nthe page.</p>"},"type":"desc"},{"attributes":{},"type":"return","children":[{"attributes":{"text":"<p>The horizontal contact position in the document.</p>"},"type":"desc"},{"attributes":{},"type":"types","children":[{"attributes":{"type":"Number"},"type":"entry"}]}]}]},{"attributes":{"line":93,"isStatic":true,"name":"getDocumentTop"},"type":"method","children":[{"attributes":{"text":"<p>Get the vertical position at which the event occurred relative to the\ntop of the document. This property takes into account any scrolling of\nthe page.</p>"},"type":"desc"},{"attributes":{},"type":"return","children":[{"attributes":{"text":"<p>The vertical contact position in the document.</p>"},"type":"desc"},{"attributes":{},"type":"types","children":[{"attributes":{"type":"Number"},"type":"entry"}]}]}]},{"attributes":{"line":108,"isStatic":true,"name":"getScreenLeft"},"type":"method","children":[{"attributes":{"text":"<p>Get the horizontal coordinate at which the event occurred relative to\nthe origin of the screen coordinate system.</p>\n\n<p>Note: This value is usually not very useful unless you want to\nposition a native popup window at this coordinate.</p>"},"type":"desc"},{"attributes":{},"type":"return","children":[{"attributes":{"text":"<p>The horizontal contact position on the screen.</p>"},"type":"desc"},{"attributes":{},"type":"types","children":[{"attributes":{"type":"Number"},"type":"entry"}]}]}]},{"attributes":{"line":122,"isStatic":true,"name":"getScreenTop"},"type":"method","children":[{"attributes":{"text":"<p>Get the vertical coordinate at which the event occurred relative to\nthe origin of the screen coordinate system.</p>\n\n<p>Note: This value is usually not very useful unless you want to\nposition a native popup window at this coordinate.</p>"},"type":"desc"},{"attributes":{},"type":"return","children":[{"attributes":{"text":"<p>The vertical contact position on the screen.</p>"},"type":"desc"},{"attributes":{},"type":"types","children":[{"attributes":{"type":"Number"},"type":"entry"}]}]}]},{"attributes":{"line":56,"isStatic":true,"name":"getViewportLeft"},"type":"method","children":[{"attributes":{"text":"<p>Get the horizontal coordinate at which the event occurred relative\nto the viewport.</p>"},"type":"desc"},{"attributes":{},"type":"return","children":[{"attributes":{"text":"<p>The horizontal contact position</p>"},"type":"desc"},{"attributes":{},"type":"types","children":[{"attributes":{"type":"Number"},"type":"entry"}]}]}]},{"attributes":{"line":68,"isStatic":true,"name":"getViewportTop"},"type":"method","children":[{"attributes":{"text":"<p>Get the vertical coordinate at which the event occurred relative\nto the viewport.</p>"},"type":"desc"},{"attributes":{},"type":"return","children":[{"attributes":{"text":"<p>The vertical contact position</p>"},"type":"desc"},{"attributes":{},"type":"types","children":[{"attributes":{"type":"Number"},"type":"entry"}]}]}]}],"deprecated":false,"types":"[\"tap\",\"longtap\",\"dbltap\"]","prefix":"Event."},"Array":{"desc":"<p>This class is responsible for the normalization of the native &#8216;Array&#8217; object.\nIt checks if these methods are available and, if not, appends them to\nensure compatibility in all browsers.\nFor usage samples, check out the attached links.</p>\n\n<p><span class=\"caps\">MDN</span> documentation &copy; Mozilla Contributors.</p>","events":[],"fileName":"qx.lang.normalize.Array","group":"Polyfill","member":[],"static":[{"attributes":{"line":238,"isStatic":true,"name":"every"},"type":"method","children":[{"attributes":{},"type":"params","children":[{"attributes":{"name":"callback"},"type":"param","children":[{"attributes":{"text":"<p>Function to test for each element.</p>"},"type":"desc"},{"attributes":{},"type":"types","children":[{"attributes":{"type":"Function"},"type":"entry"}]}]},{"attributes":{"optional":true,"name":"obj"},"type":"param","children":[{"attributes":{"text":"<p>Value to use as <code>this</code> when executing <code>callback</code>.</p>"},"type":"desc"},{"attributes":{},"type":"types","children":[{"attributes":{"type":"Object"},"type":"entry"}]}]}]},{"attributes":{"text":"<p>The <code>every()</code> method tests whether all elements\nin the array pass the test implemented by the provided function.</p>\n\n<a href=\"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/every\">MDN documentation</a> |\n<a href=\"http://es5.github.com/#x15.4.4.16\">Annotated ES5 Spec</a>"},"type":"desc"},{"attributes":{},"type":"return","children":[{"attributes":{"text":"<p>result array</p>"},"type":"desc"},{"attributes":{},"type":"types","children":[{"attributes":{"type":"Array"},"type":"entry"}]}]}]},{"attributes":{"line":145,"isStatic":true,"name":"filter"},"type":"method","children":[{"attributes":{},"type":"params","children":[{"attributes":{"name":"callback"},"type":"param","children":[{"attributes":{"text":"<p>Function to test each element of the array.</p>"},"type":"desc"},{"attributes":{},"type":"types","children":[{"attributes":{"type":"Function"},"type":"entry"}]}]},{"attributes":{"optional":true,"name":"obj"},"type":"param","children":[{"attributes":{"text":"<p>Value to use as <code>this</code> when executing <code>callback</code>.</p>"},"type":"desc"},{"attributes":{},"type":"types","children":[{"attributes":{"type":"Object"},"type":"entry"}]}]}]},{"attributes":{"text":"<p>The <code>filter()</code> method creates a new array with\nall elements that pass the test implemented by the provided\nfunction.</p>\n\n<a href=\"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/filter\">MDN documentation</a> |\n<a href=\"http://es5.github.com/#x15.4.4.20\">Annotated ES5 Spec</a>"},"type":"desc"},{"attributes":{},"type":"return","children":[{"attributes":{"text":"<p>filtered array</p>"},"type":"desc"},{"attributes":{},"type":"types","children":[{"attributes":{"type":"Array"},"type":"entry"}]}]}]},{"attributes":{"line":265,"isStatic":true,"name":"find"},"type":"method","children":[{"attributes":{},"type":"params","children":[{"attributes":{"name":"callback"},"type":"param","children":[{"attributes":{"text":"<p>Function to test for each element.</p>"},"type":"desc"},{"attributes":{},"type":"types","children":[{"attributes":{"type":"Function"},"type":"entry"}]}]},{"attributes":{"optional":true,"name":"obj"},"type":"param","children":[{"attributes":{"text":"<p>Value to use as <code>this</code> when executing <code>callback</code>.</p>"},"type":"desc"},{"attributes":{},"type":"types","children":[{"attributes":{"type":"Object"},"type":"entry"}]}]}]},{"attributes":{"text":"<p>The <code>find()</code> method returns a value in the array, if an element in the \narray satisfies the provided testing function. Otherwise undefined is returned.</p>\n\n<a href=\"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/find\">MDN documentation</a> |"},"type":"desc"},{"attributes":{},"type":"return","children":[{"attributes":{"text":"<p>result, undefined if not found</p>"},"type":"desc"},{"attributes":{},"type":"types","children":[{"attributes":{"type":"Object"},"type":"entry"}]}]}]},{"attributes":{"line":291,"isStatic":true,"name":"findIndex"},"type":"method","children":[{"attributes":{},"type":"params","children":[{"attributes":{"name":"callback"},"type":"param","children":[{"attributes":{"text":"<p>Function to test for each element.</p>"},"type":"desc"},{"attributes":{},"type":"types","children":[{"attributes":{"type":"Function"},"type":"entry"}]}]},{"attributes":{"optional":true,"name":"obj"},"type":"param","children":[{"attributes":{"text":"<p>Value to use as <code>this</code> when executing <code>callback</code>.</p>"},"type":"desc"},{"attributes":{},"type":"types","children":[{"attributes":{"type":"Object"},"type":"entry"}]}]}]},{"attributes":{"text":"<p>The <code>findIndex()</code> method returns an index in the array, if an element in the \narray satisfies the provided testing function. Otherwise -1 is returned.</p>\n\n<a href=\"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/findIndex\">MDN documentation</a> |"},"type":"desc"},{"attributes":{},"type":"return","children":[{"attributes":{"text":"<p>the index in the array, -1 if not found</p>"},"type":"desc"},{"attributes":{},"type":"types","children":[{"attributes":{"type":"Integer"},"type":"entry"}]}]}]},{"attributes":{"line":120,"isStatic":true,"name":"forEach"},"type":"method","children":[{"attributes":{},"type":"params","children":[{"attributes":{"name":"callback"},"type":"param","children":[{"attributes":{"text":"<p>Function to execute for each element.</p>"},"type":"desc"},{"attributes":{},"type":"types","children":[{"attributes":{"type":"Function"},"type":"entry"}]}]},{"attributes":{"optional":true,"name":"obj"},"type":"param","children":[{"attributes":{"text":"<p>Value to use as <code>this</code> when executing <code>callback</code>.</p>"},"type":"desc"},{"attributes":{},"type":"types","children":[{"attributes":{"type":"Object"},"type":"entry"}]}]}]},{"attributes":{"text":"<p>The <code>forEach()</code> method executes a provided function\nonce per array element. You can not break the loop with this function.\nIf you want to do so, use {@link #some} or {@link #every}.</p>\n\n<a href=\"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/forEach\">MDN documentation</a> |\n<a href=\"http://es5.github.com/#x15.4.4.18\">Annotated ES5 Spec</a>"},"type":"desc"}]},{"attributes":{"line":397,"isStatic":true,"name":"includes"},"type":"method","children":[{"attributes":{},"type":"params","children":[{"attributes":{"name":"searchElement"},"type":"param","children":[{"attributes":{"text":"<p>Element which is checked for.</p>"},"type":"desc"},{"attributes":{},"type":"types","children":[{"attributes":{"type":"var"},"type":"entry"}]}]},{"attributes":{"name":"fromIndex"},"type":"param","children":[{"attributes":{"text":"<p>Index to start search from</p>"},"type":"desc"},{"attributes":{},"type":"types","children":[{"attributes":{"type":"Number"},"type":"entry"}]}]}]},{"attributes":{"text":"<p>The includes() method determines whether an array includes a certain element, returning\ntrue or false as appropriate.</p>\n\n<a href=\"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/includes\">MDN documentation</a> |"},"type":"desc"},{"attributes":{},"type":"return","children":[{"attributes":{"text":"<p>true if element is included</p>"},"type":"desc"},{"attributes":{},"type":"types","children":[{"attributes":{"type":"bool"},"type":"entry"}]}]}]},{"attributes":{"line":52,"isStatic":true,"name":"indexOf"},"type":"method","children":[{"attributes":{},"type":"params","children":[{"attributes":{"name":"searchElement"},"type":"param","children":[{"attributes":{"text":"<p>Element to locate in the array.</p>"},"type":"desc"},{"attributes":{},"type":"types","children":[{"attributes":{"type":"var"},"type":"entry"}]}]},{"attributes":{"optional":true,"name":"fromIndex"},"type":"param","children":[{"attributes":{"text":"<p>The index to start the search at. If the index is greater than or equal to the array&#8217;s length, -1 is returned, which means the array will not be searched. If the provided index value is a negative number, it is taken as the offset from the end of the array. Note: if the provided index is negative, the array is still searched from front to back. If the calculated index is less than 0, then the whole array will be searched. Default: 0 (Entire array is searched)</p>"},"type":"desc"},{"attributes":{},"type":"types","children":[{"attributes":{"type":"Integer"},"type":"entry"}]}]}]},{"attributes":{"text":"<p>The <code>indexOf()</code> method returns the first index at which a given\nelement can be found in the array, or -1 if it is not present.</p>\n\n<a href=\"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/indexOf\">MDN documentation</a> |\n<a href=\"http://es5.github.com/#x15.4.4.14\">Annotated ES5 Spec</a>"},"type":"desc"},{"attributes":{},"type":"return","children":[{"attributes":{"text":"<p>The first index at which the element was found or -1 if the element was not found in the array</p>"},"type":"desc"},{"attributes":{},"type":"types","children":[{"attributes":{"type":"Integer"},"type":"entry"}]}]}]},{"attributes":{"line":91,"isStatic":true,"name":"lastIndexOf"},"type":"method","children":[{"attributes":{},"type":"params","children":[{"attributes":{"name":"searchElement"},"type":"param","children":[{"attributes":{"text":"<p>Element to locate in the array.</p>"},"type":"desc"},{"attributes":{},"type":"types","children":[{"attributes":{"type":"var"},"type":"entry"}]}]},{"attributes":{"optional":true,"name":"fromIndex"},"type":"param","children":[{"attributes":{"text":"<p>The index at which to start searching backwards. Defaults to the array&#8217;s length, i.e. the whole array will be searched. If the index is greater than or equal to the length of the array, the whole array will be searched. If negative, it is taken as the offset from the end of the array. Note that even when the index is negative, the array is still searched from back to front. If the calculated index is less than 0, -1 is returned, i.e. the array will not be searched.</p>"},"type":"desc"},{"attributes":{},"type":"types","children":[{"attributes":{"type":"Integer"},"type":"entry"}]}]}]},{"attributes":{"text":"<p>The <code>lastIndexOf()</code> method returns the last index\nat which a given element can be found in the array, or -1 if\nit is not present. The array is searched backwards, starting at\n<code>fromIndex</code>.</p>\n\n<a href=\"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/lastIndexOf\">MDN documentation</a> |\n<a href=\"http://es5.github.com/#x15.4.4.15\">Annotated ES5 Spec</a>"},"type":"desc"},{"attributes":{},"type":"return","children":[{"attributes":{"text":"<p>The last index at which the element was found or -1 if the element was not found in the array</p>"},"type":"desc"},{"attributes":{},"type":"types","children":[{"attributes":{"type":"Integer"},"type":"entry"}]}]}]},{"attributes":{"line":182,"isStatic":true,"name":"map"},"type":"method","children":[{"attributes":{},"type":"params","children":[{"attributes":{"name":"callback"},"type":"param","children":[{"attributes":{"text":"<p>Function that produces an element of the new Array, taking three arguments: <ul> <li><code>currentValue</code> The current element being processed in the array.</li> <li><code>index</code> The index of the current element being processed in the array.</li> <li><code>array</code> The array map was called upon.</li> </ul></p>"},"type":"desc"},{"attributes":{},"type":"types","children":[{"attributes":{"type":"Function"},"type":"entry"}]}]},{"attributes":{"optional":true,"name":"obj"},"type":"param","children":[{"attributes":{"text":"<p>Value to use as <code>this</code> when executing <code>callback</code>.</p>"},"type":"desc"},{"attributes":{},"type":"types","children":[{"attributes":{"type":"Object"},"type":"entry"}]}]}]},{"attributes":{"text":"<p>The <code>map()</code> method creates a new array with\nthe results of calling a provided function on every\nelement in this array.</p>\n\n<a href=\"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/map\">MDN documentation</a> |\n<a href=\"http://es5.github.com/#x15.4.4.19\">Annotated ES5 Spec</a>"},"type":"desc"},{"attributes":{},"type":"return","children":[{"attributes":{"text":"<p>result array</p>"},"type":"desc"},{"attributes":{},"type":"types","children":[{"attributes":{"type":"Array"},"type":"entry"}]}]}]},{"attributes":{"line":328,"isStatic":true,"name":"reduce"},"type":"method","children":[{"attributes":{},"type":"params","children":[{"attributes":{"name":"callback"},"type":"param","children":[{"attributes":{"text":"<p>Function to execute on each value in the array, taking four arguments: <ul> <li><code>previousValue</code> The value previously returned in the last invocation of the callback, or initialValue, if supplied. (See below.)</li> <li><code>currentValue</code> The current element being processed in the array.</li> <li><code>index</code> The index of the current element being processed in the array.</li> <li><code>array</code> The array <code>reduce</code> was called upon.</li> </ul></p>"},"type":"desc"},{"attributes":{},"type":"types","children":[{"attributes":{"type":"Function"},"type":"entry"}]}]},{"attributes":{"optional":true,"name":"init"},"type":"param","children":[{"attributes":{"text":"<p>Object to use as the first argument to the first call of the callback.</p>"},"type":"desc"},{"attributes":{},"type":"types","children":[{"attributes":{"type":"Object"},"type":"entry"}]}]}]},{"attributes":{"text":"<p>The <code>reduce()</code> method applies a function against\nan accumulator and each value of the array (from left-to-right)\nhas to reduce it to a single value.</p>\n\n<a href=\"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/reduce\">MDN documentation</a> |\n<a href=\"http://es5.github.com/#x15.4.4.21\">Annotated ES5 Spec</a>"},"type":"desc"},{"attributes":{},"type":"return","children":[{"attributes":{"text":"<p>result value</p>"},"type":"desc"},{"attributes":{},"type":"types","children":[{"attributes":{"type":"var"},"type":"entry"}]}]}]},{"attributes":{"line":368,"isStatic":true,"name":"reduceRight"},"type":"method","children":[{"attributes":{},"type":"params","children":[{"attributes":{"name":"callback"},"type":"param","children":[{"attributes":{"text":"<p>Function to execute on each value in the array, taking four arguments: <ul> <li><code>previousValue</code> The value previously returned in the last invocation of the callback, or initialValue, if supplied. (See below.)</li> <li><code>currentValue</code> The current element being processed in the array.</li> <li><code>index</code> The index of the current element being processed in the array.</li> <li><code>array</code> The array <code>reduce</code> was called upon.</li> </ul></p>"},"type":"desc"},{"attributes":{},"type":"types","children":[{"attributes":{"type":"Function"},"type":"entry"}]}]},{"attributes":{"optional":true,"name":"init"},"type":"param","children":[{"attributes":{"text":"<p>Object to use as the first argument to the first call of the callback.</p>"},"type":"desc"},{"attributes":{},"type":"types","children":[{"attributes":{"type":"Object"},"type":"entry"}]}]}]},{"attributes":{"text":"<p>The reduceRight() method applies a function against an\naccumulator and each value of the array (from right-to-left)\nas to reduce it to a single value.</p>\n\n<a href=\"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/reduceRight\">MDN documentation</a> |\n<a href=\"http://es5.github.com/#x15.4.4.22\">Annotated ES5 Spec</a>"},"type":"desc"},{"attributes":{},"type":"return","children":[{"attributes":{"text":"<p>return value</p>"},"type":"desc"},{"attributes":{},"type":"types","children":[{"attributes":{"type":"var"},"type":"entry"}]}]}]},{"attributes":{"line":210,"isStatic":true,"name":"some"},"type":"method","children":[{"attributes":{},"type":"params","children":[{"attributes":{"name":"callback"},"type":"param","children":[{"attributes":{"text":"<p>Function to test for each element.</p>"},"type":"desc"},{"attributes":{},"type":"types","children":[{"attributes":{"type":"Function"},"type":"entry"}]}]},{"attributes":{"optional":true,"name":"obj"},"type":"param","children":[{"attributes":{"text":"<p>Value to use as <code>this</code> when executing <code>callback</code>.</p>"},"type":"desc"},{"attributes":{},"type":"types","children":[{"attributes":{"type":"Object"},"type":"entry"}]}]}]},{"attributes":{"text":"<p>The <code>some()</code> method tests whether some\nelement in the array passes the test implemented by\nthe provided function.</p>\n\n<a href=\"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/some\">MDN documentation</a> |\n<a href=\"http://es5.github.com/#x15.4.4.17\">Annotated ES5 Spec</a>"},"type":"desc"},{"attributes":{},"type":"return","children":[{"attributes":{"text":"<p>result array</p>"},"type":"desc"},{"attributes":{},"type":"types","children":[{"attributes":{"type":"Array"},"type":"entry"}]}]}]}],"deprecated":false,"prefix":"Array."},"Date":{"desc":"<p>This class is responsible for the normalization of the native &#8216;Date&#8217; object.\nIt checks if these methods are available and, if not, appends them to\nensure compatibility in all browsers.\nFor usage samples, check out the attached links.</p>","events":[],"fileName":"qx.lang.normalize.Date","group":"Polyfill","member":[],"static":[{"attributes":{"line":38,"isStatic":true,"name":"now"},"type":"method","children":[{"attributes":{"text":"<p>Returns the time elapsed since January 1, 1970 in milliseconds.</p>\n\n<a href=\"https://developer.mozilla.org/en-US/docs/JavaScript/Reference/Global_Objects/Date/now\">MDN documentation</a> |\n<a href=\"http://es5.github.com/#x15.9.4.4\">Annotated ES5 Spec</a>"},"type":"desc"},{"attributes":{},"type":"return","children":[{"attributes":{"text":"<p>Milliseconds since the Unix Epoch</p>"},"type":"desc"},{"attributes":{},"type":"types","children":[{"attributes":{"type":"Integer"},"type":"entry"}]}]}]},{"attributes":{"line":59,"isStatic":true,"name":"parse"},"type":"method","children":[{"attributes":{},"type":"params","children":[{"attributes":{"name":"dateString"},"type":"param","children":[{"attributes":{"text":"<p>A string representing an RFC2822 or <span class=\"caps\">ISO</span> 8601 date (other formats may be used, but results may be unexpected).</p>"},"type":"desc"},{"attributes":{},"type":"types","children":[{"attributes":{"type":"String"},"type":"entry"}]}]}]},{"attributes":{"text":"<p>Parses a string representation of a date and return number of\nmilliseconds since Epoch or NaN if string is unrecognized.</p>\n\n<a href=\"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Date/parse\">MDN documentation</a>\n\n<p>Derived from : &#169;2011 Colin Snover\n, <span class=\"caps\">MIT</span> license</p>"},"type":"desc"},{"attributes":{},"type":"return","children":[{"attributes":{"text":"<p>A number representing the milliseconds elapsed since January 1, 1970, 00:00:00 <span class=\"caps\">UTC</span> and the date obtained by parsing the given string representation of a date. If the argument doesn&#8217;t represent a valid date, NaN is returned.</p>"},"type":"desc"},{"attributes":{},"type":"types","children":[{"attributes":{"type":"Number"},"type":"entry"},{"attributes":{"type":"NaN"},"type":"entry"}]}]}]}],"deprecated":false,"prefix":"Date."},"String":{"desc":"<p>This class is responsible for the normalization of the native &#8216;String&#8217; object.\nIt checks if these methods are available and, if not, appends them to\nensure compatibility in all browsers.\nFor usage samples, check out the attached links.</p>","events":[],"fileName":"qx.lang.normalize.String","group":"Polyfill","member":[],"static":[{"attributes":{"line":71,"isStatic":true,"name":"endsWith"},"type":"method","children":[{"attributes":{},"type":"params","children":[{"attributes":{"name":"searchString"},"type":"param","children":[{"attributes":{"text":"<p>The characters to be searched for at the end of this string.</p>"},"type":"desc"},{"attributes":{},"type":"types","children":[{"attributes":{"type":"String"},"type":"entry"}]}]},{"attributes":{"defaultValue":"length","optional":true,"name":"position"},"type":"param","children":[{"attributes":{"text":"<p>Search within this string as if this string were only this long; defaults to this string&#8217;s actual length, clamped within the range established by this string&#8217;s length.</p>"},"type":"desc"},{"attributes":{},"type":"types","children":[{"attributes":{"type":"Integer"},"type":"entry"}]}]}]},{"attributes":{"text":"<p>Determines whether a ends with the characters of another string,\nreturning true or false as appropriate.</p>"},"type":"desc"},{"attributes":{},"type":"return","children":[{"attributes":{"text":"<p>Whether the string ends with the other string.</p>"},"type":"desc"},{"attributes":{},"type":"types","children":[{"attributes":{"type":"Boolean"},"type":"entry"}]}]}]},{"attributes":{"line":53,"isStatic":true,"name":"startsWith"},"type":"method","children":[{"attributes":{},"type":"params","children":[{"attributes":{"name":"searchString"},"type":"param","children":[{"attributes":{"text":"<p>The characters to be searched for at the start of this string.</p>"},"type":"desc"},{"attributes":{},"type":"types","children":[{"attributes":{"type":"String"},"type":"entry"}]}]},{"attributes":{"defaultValue":"0","optional":true,"name":"position"},"type":"param","children":[{"attributes":{"text":"<p>The position in this string at which to begin searching for <code>searchString</code>.</p>"},"type":"desc"},{"attributes":{},"type":"types","children":[{"attributes":{"type":"Integer"},"type":"entry"}]}]}]},{"attributes":{"text":"<p>Determines whether a string begins with the characters of another\nstring, returning true or false as appropriate.</p>"},"type":"desc"},{"attributes":{},"type":"return","children":[{"attributes":{"text":"<p>Whether the string begins with the other string.</p>"},"type":"desc"},{"attributes":{},"type":"types","children":[{"attributes":{"type":"Boolean"},"type":"entry"}]}]}]},{"attributes":{"line":38,"isStatic":true,"name":"trim"},"type":"method","children":[{"attributes":{"text":"<p>Removes whitespace from both ends of the string.</p>\n\n<a href=\"https://developer.mozilla.org/en-US/docs/JavaScript/Reference/Global_Objects/String/Trim\">MDN documentation</a> |\n<a href=\"http://es5.github.com/#x15.5.4.20\">Annotated ES5 Spec</a>"},"type":"desc"},{"attributes":{},"type":"return","children":[{"attributes":{"text":"<p>The trimmed string</p>"},"type":"desc"},{"attributes":{},"type":"types","children":[{"attributes":{"type":"String"},"type":"entry"}]}]}]}],"deprecated":false,"prefix":"String."},"Object":{"desc":"<p>This class is responsible for the normalization of the native Object.\nIt checks if these methods are available and, if not, appends them to\nensure compatibility in all browsers.\nFor usage samples, check out the attached links.</p>","events":[],"fileName":"qx.lang.normalize.Object","group":"Polyfill","member":[],"static":[{"attributes":{"line":74,"isStatic":true,"name":"is"},"type":"method","children":[{"attributes":{},"type":"params","children":[{"attributes":{"name":"x"},"type":"param","children":[{"attributes":{"text":"<p>the first value to compare</p>"},"type":"desc"},{"attributes":{},"type":"types","children":[{"attributes":{"type":"Object"},"type":"entry"}]}]},{"attributes":{"name":"y"},"type":"param","children":[{"attributes":{"text":"<p>the second value to compare</p>"},"type":"desc"},{"attributes":{},"type":"types","children":[{"attributes":{"type":"Object"},"type":"entry"}]}]}]},{"attributes":{"text":"<p>Determines whether two values are the same value.</p>\n\n<a href=\"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/is\">MDN web docs: Object.is()</a>"},"type":"desc"},{"attributes":{},"type":"return","children":[{"attributes":{"text":"<p>indicating whether or not the two arguments are the same value.</p>"},"type":"desc"},{"attributes":{},"type":"types","children":[{"attributes":{"type":"Boolean"},"type":"entry"}]}]}]},{"attributes":{"line":1,"isStatic":true,"name":"keys"},"type":"method","children":[{"attributes":{},"type":"params","children":[{"attributes":{"name":"map"},"type":"param","children":[{"attributes":{"text":"<p>the map</p>"},"type":"desc"},{"attributes":{},"type":"types","children":[{"attributes":{"type":"Object"},"type":"entry"}]}]}]},{"attributes":{"text":"<p>Get the keys of a map as array as returned by a &#8220;for&#8230; in&#8221; statement.</p>\n\n<a href=\"https://developer.mozilla.org/en-US/docs/JavaScript/Reference/Global_Objects/Object/keys\">MDN documentation</a> |\n<a href=\"http://es5.github.com/#x15.2.3.14\">Annotated ES5 Spec</a>"},"type":"desc"},{"attributes":{},"type":"return","children":[{"attributes":{"text":"<p>array of the keys of the map</p>"},"type":"desc"},{"attributes":{},"type":"types","children":[{"attributes":{"type":"Array"},"type":"entry"}]}]}]},{"attributes":{"line":48,"isStatic":true,"name":"values"},"type":"method","children":[{"attributes":{},"type":"params","children":[{"attributes":{"name":"map"},"type":"param","children":[{"attributes":{"text":"<p>the map</p>"},"type":"desc"},{"attributes":{},"type":"types","children":[{"attributes":{"type":"Object"},"type":"entry"}]}]}]},{"attributes":{"text":"<p>Get the values of a map as array</p>"},"type":"desc"},{"attributes":{},"type":"return","children":[{"attributes":{"text":"<p>array of the values of the map</p>"},"type":"desc"},{"attributes":{},"type":"types","children":[{"attributes":{"type":"Array"},"type":"entry"}]}]}]}],"deprecated":false,"prefix":"Object."},"Function":{"desc":"<p>This class is responsible for the normalization of the native &#8216;Function&#8217; object.\nIt checks if these methods are available and, if not, appends them to\nensure compatibility in all browsers.\nFor usage samples, check out the attached links.</p>","events":[],"fileName":"qx.lang.normalize.Function","group":"Polyfill","member":[],"static":[{"attributes":{"line":78,"isStatic":true,"name":"bind"},"type":"method","children":[{"attributes":{},"type":"params","children":[{"attributes":{"optional":true,"name":"that"},"type":"param","children":[{"attributes":{"text":"<p>Context for the bound function</p>"},"type":"desc"},{"attributes":{},"type":"types","children":[{"attributes":{"type":"var"},"type":"entry"}]}]}]},{"attributes":{"text":"<a href=\"https://developer.mozilla.org/en-US/docs/JavaScript/Reference/Global_Objects/Function/bind\">MDN documentation</a> |\n<a href=\"http://es5.github.com/#x15.3.4.5\">Annotated ES5 Spec</a>"},"type":"desc"},{"attributes":{},"type":"return","children":[{"attributes":{"text":"<p>The bound function</p>"},"type":"desc"},{"attributes":{},"type":"types","children":[{"attributes":{"type":"Function"},"type":"entry"}]}]}]}],"deprecated":false,"prefix":"Function."},"Error":{"desc":"<p>This class is responsible for the normalization of the native &#8216;Error&#8217; object.\nIt contains a simple bugfix for toString which might not print out the proper\nerror message.</p>","events":[],"fileName":"qx.lang.normalize.Error","group":"Polyfill","member":[],"static":[{"attributes":{"line":38,"isStatic":true,"name":"toString"},"type":"method","children":[{"attributes":{"text":"<p>Returns a string representation of the Error object.</p>\n\n<a href=\"https://developer.mozilla.org/en-US/docs/JavaScript/Reference/Global_Objects/Error/toString\">MDN documentation</a> |\n<a href=\"http://es5.github.com/#x15.11.4.4\">Annotated ES5 Spec</a>"},"type":"desc"},{"attributes":{},"type":"return","children":[{"attributes":{"text":"<p>Error message</p>"},"type":"desc"},{"attributes":{},"type":"types","children":[{"attributes":{"type":"String"},"type":"entry"}]}]}]}],"deprecated":false,"prefix":"Error."},"Core_Plugin_API":{"member":[],"static":[{"attributes":{"line":100,"isStatic":true,"name":"$attach","group":"Plugin_API","plugin":true},"type":"method","children":[{"attributes":{},"type":"params","children":[{"attributes":{"name":"module"},"type":"param","children":[{"attributes":{"text":"<p>A map containing the methods to attach.</p>"},"type":"desc"},{"attributes":{},"type":"types","children":[{"attributes":{"type":"Map"},"type":"entry"}]}]},{"attributes":{"defaultValue":"false","optional":true,"name":"override"},"type":"param","children":[{"attributes":{"text":"<p>Force to override</p>"},"type":"desc"},{"attributes":{},"type":"types","children":[{"attributes":{"type":"Boolean"},"type":"entry"}]}]}]},{"attributes":{"text":"<p>This is an <span class=\"caps\">API</span> for module development and can be used to attach new methods\nto {@link q}.</p>"},"type":"desc"}]},{"attributes":{"line":149,"isStatic":true,"name":"$attachAll","group":"Plugin_API","plugin":true},"type":"method","children":[{"attributes":{},"type":"params","children":[{"attributes":{"name":"clazz"},"type":"param","children":[{"attributes":{"text":"<p>the qooxdoo class definition calling this method.</p>"},"type":"desc"},{"attributes":{},"type":"types","children":[{"attributes":{"type":"Object"},"type":"entry"}]}]},{"attributes":{"defaultValue":"undefined","optional":true,"name":"staticsNamespace"},"type":"param","children":[{"attributes":{"text":"<p>Specifies the namespace under which statics are attached to {@link q}.</p>"},"type":"desc"},{"attributes":{},"type":"types","children":[{"attributes":{"type":"String"},"type":"entry"}]}]}]},{"attributes":{"text":"<p>This is an <span class=\"caps\">API</span> for module development and can be used to attach new methods\nto {@link q} during runtime according to the following conventions:</p>\n\n<p>Public members of the module are attached to the collection similar to\n<code>qxWeb.$attach</code>. Members beginning with &#8217;$&#8217; or &#8216;_&#8217; are ignored.</p>\n\n<p>Statics of the module are attached to {@link q} similar to\n<code>qxWeb.$attachStatic</code>. Statics beginning with &#8217;$&#8217; or &#8216;_&#8217;, as well as constants\n(all upper case) and some qooxdoo-internal statics of the module are ignored.</p>\n\n<p>If more fine-grained control outside if these conventions is needed,\nsimply use <code>qxWeb.$attach</code> or <code>qxWeb$attachStatic</code>.</p>"},"type":"desc"}]},{"attributes":{"line":180,"isStatic":true,"name":"$attachInit","group":"Plugin_API","plugin":true},"type":"method","children":[{"attributes":{},"type":"params","children":[{"attributes":{"name":"init"},"type":"param","children":[{"attributes":{"text":"<p>The initialization method for a module.</p>"},"type":"desc"},{"attributes":{},"type":"types","children":[{"attributes":{"type":"Function"},"type":"entry"}]}]}]},{"attributes":{"text":"<p>This is an <span class=\"caps\">API</span> for module development and can be used to attach new initialization\nmethods to {@link q} which will be called when a new collection is\ncreated.</p>"},"type":"desc"}]},{"attributes":{"line":120,"isStatic":true,"name":"$attachStatic","group":"Plugin_API","plugin":true},"type":"method","children":[{"attributes":{},"type":"params","children":[{"attributes":{"name":"module"},"type":"param","children":[{"attributes":{"text":"<p>A map containing the methods to attach.</p>"},"type":"desc"},{"attributes":{},"type":"types","children":[{"attributes":{"type":"Map"},"type":"entry"}]}]},{"attributes":{"defaultValue":"false","optional":true,"name":"override"},"type":"param","children":[{"attributes":{"text":"<p>Force to override</p>"},"type":"desc"},{"attributes":{},"type":"types","children":[{"attributes":{"type":"Boolean"},"type":"entry"}]}]}]},{"attributes":{"text":"<p>This is an <span class=\"caps\">API</span> for module development and can be used to attach new methods\nto {@link q}.</p>"},"type":"desc"}]},{"attributes":{"line":59,"isStatic":true,"name":"$init","group":"Plugin_API","plugin":true},"type":"method","children":[{"attributes":{},"type":"params","children":[{"attributes":{"name":"arg"},"type":"param","children":[{"attributes":{"text":"<p>An array of Elements which will be initialized as {@link q}. All items in the array which are not either a window object, a <span class=\"caps\">DOM</span> element node or a <span class=\"caps\">DOM</span> document node will be ignored.</p>"},"type":"desc"},{"attributes":{},"type":"types","children":[{"attributes":{"type":"var"},"type":"entry"}]}]},{"attributes":{"name":"clazz"},"type":"param","children":[{"attributes":{"text":"<p>The class of the new collection.</p>"},"type":"desc"},{"attributes":{},"type":"types","children":[{"attributes":{"type":"Class"},"type":"entry"}]}]}]},{"attributes":{"text":"<p>Internal helper to initialize collections.</p>"},"type":"desc"},{"attributes":{},"type":"return","children":[{"attributes":{"text":"<p>A new initialized collection.</p>"},"type":"desc"},{"attributes":{},"type":"types","children":[{"attributes":{"type":"q"},"type":"entry"}]}]}]}],"group":"Plugin_API"},"Event_Plugin_API":{"member":[],"static":[{"attributes":{"isStatic":true,"group":"Plugin_API","name":"$getEventNormalizationRegistry","sourceMethod":"$getEventNormalizationRegistry","line":168,"sourceClass":"qx.module.Event","plugin":true},"type":"method","children":[{"attributes":{"text":"<p>Returns all registered event normalizers</p>"},"type":"desc"},{"attributes":{"targetMethod":"$getEventNormalizationRegistry","targetClass":"qxWeb","sourceMethod":"$getEventNormalizationRegistry","sourceClass":"qx.module.Event"},"type":"attachStatic"},{"attributes":{},"type":"return","children":[{"attributes":{"text":"<p>Map of event types/normalizer functions</p>"},"type":"desc"},{"attributes":{},"type":"types","children":[{"attributes":{"type":"Map"},"type":"entry"}]}]}]},{"attributes":{"isStatic":true,"group":"Plugin_API","name":"$registerEventNormalization","sourceMethod":"$registerEventNormalization","line":122,"sourceClass":"qx.module.Event","plugin":true},"type":"method","children":[{"attributes":{},"type":"params","children":[{"attributes":{"name":"types"},"type":"param","children":[{"attributes":{"text":"<p>List of event types to be normalized. Use an asterisk (<code>*</code>) to normalize all event types</p>"},"type":"desc"},{"attributes":{},"type":"types","children":[{"attributes":{"type":"String","dimensions":1},"type":"entry"}]}]},{"attributes":{"name":"normalizer"},"type":"param","children":[{"attributes":{"text":"<p>Normalizer function</p>"},"type":"desc"},{"attributes":{},"type":"types","children":[{"attributes":{"type":"Function"},"type":"entry"}]}]}]},{"attributes":{"text":"<p>Registers a normalization function for the given event types. Listener\ncallbacks for these types will be called with the return value of the\nnormalization function instead of the regular event object.</p>\n\n<p>The normalizer will be called with two arguments: The original event\nobject and the element on which the event was triggered</p>"},"type":"desc"},{"attributes":{"targetMethod":"$registerEventNormalization","targetClass":"qxWeb","sourceMethod":"$registerEventNormalization","sourceClass":"qx.module.Event"},"type":"attachStatic"}]},{"attributes":{"isStatic":true,"group":"Plugin_API","name":"$unregisterEventNormalization","sourceMethod":"$unregisterEventNormalization","line":147,"sourceClass":"qx.module.Event","plugin":true},"type":"method","children":[{"attributes":{},"type":"params","children":[{"attributes":{"name":"types"},"type":"param","children":[{"attributes":{"text":"<p>List of event types</p>"},"type":"desc"},{"attributes":{},"type":"types","children":[{"attributes":{"type":"String","dimensions":1},"type":"entry"}]}]},{"attributes":{"name":"normalizer"},"type":"param","children":[{"attributes":{"text":"<p>Normalizer function</p>"},"type":"desc"},{"attributes":{},"type":"types","children":[{"attributes":{"type":"Function"},"type":"entry"}]}]}]},{"attributes":{"text":"<p>Unregisters a normalization function from the given event types.</p>"},"type":"desc"},{"attributes":{"targetMethod":"$unregisterEventNormalization","targetClass":"qxWeb","sourceMethod":"$unregisterEventNormalization","sourceClass":"qx.module.Event"},"type":"attachStatic"}]}],"group":"Plugin_API"}}